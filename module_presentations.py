from header_common import *
from header_presentations import *
from header_mission_templates import *
from ID_meshes import *
from header_operations import *
from header_triggers import *
from module_constants import *
import string
#COOP chief#######################################
from module_coop_presentations import *
#otros
from header_terrain_types import *
from xgm_mod_options_header import *

##############################################
####################################################################################################################
#  Each presentation record contains the following fields:
#  1) Presentation id: used for referencing presentations in other files. The prefix prsnt_ is automatically added before each presentation id.
#  2) Presentation flags. See header_presentations.py for a list of available flags
#  3) Presentation background mesh: See module_meshes.py for a list of available background meshes
#  4) Triggers: Simple triggers that are associated with the presentation
####################################################################################################################

presentations = [
  ## CCversion chief
  ("game_start",prsntf_read_only,0,[
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (assign, ":mod_version", 1410),
        (store_div, reg1, ":mod_version", 1000),
        (store_mod, reg2, ":mod_version", 1000),
        (try_begin),
          (eq, reg2, 0),
          (str_store_string, s1, "@{reg1}.0"),
        (else_try),
          (lt, reg2, 10),
          (str_store_string, s1, "@{reg1}.00{reg2}"),
        (else_try),
          (lt, reg2, 100),
          (try_begin),
            (store_mod, ":result", reg2, 10),
            (eq,  ":result", 0),
            (val_div, reg2, 10),
          (try_end),
          (str_store_string, s1, "@{reg1}.0{reg2}"),
        (else_try),
          (try_begin),
            (store_mod, ":result", reg2, 100),
            (eq,  ":result", 0),
            (val_div, reg2, 100),
          (else_try),
            (store_mod, ":result", reg2, 10),
            (eq,  ":result", 0),
            (val_div, reg2, 10),
          (try_end),  
          (str_store_string, s1, "@{reg1}.{reg2}"),
        (try_end),
        
        (create_text_overlay, "$g_presentation_credits_obj_1", "@Brytenwalda v{s1} ", tf_center_justify|tf_double_space|tf_vertical_align_center),
        (create_text_overlay, "$g_presentation_credits_obj_2", "@Brytenwalda v{s1} ", tf_center_justify|tf_double_space|tf_vertical_align_center),
        (create_text_overlay, "$g_presentation_credits_obj_3", "@Brytenwalda v{s1} ", tf_center_justify|tf_double_space|tf_vertical_align_center),
        (overlay_set_color, "$g_presentation_credits_obj_1", 0x000000),
        (overlay_set_color, "$g_presentation_credits_obj_2", 0x000000),
        (overlay_set_color, "$g_presentation_credits_obj_3", 0xFF0000),

        (position_set_x, pos1, -300),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 600),
        (overlay_animate_to_position, "$g_presentation_credits_obj_1", 600, pos1),

        (position_set_x, pos1, -299),
        (position_set_y, pos1, 601),
        (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
        (position_set_x, pos1, 451),
        (position_set_y, pos1, 601),
        (overlay_animate_to_position, "$g_presentation_credits_obj_2", 600, pos1),

        (position_set_x, pos1, 1300),
        (position_set_y, pos1, 602),
        (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
        (position_set_x, pos1, 452),
        (position_set_y, pos1, 602),
        (overlay_animate_to_position, "$g_presentation_credits_obj_3", 600, pos1),
      ]),
    ]),
  ## CC version chief
  ("game_credits",prsntf_read_only,mesh_load_window,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (this_or_next|key_clicked, key_right_mouse_button),
          (this_or_next|key_clicked, key_xbox_ltrigger),
	 (key_clicked, key_xbox_rtrigger),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_credits_1"),
          (create_text_overlay, "$g_presentation_credits_obj_1", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_1", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 2000),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 3500),
          (lt, "$g_presentation_credits_obj_2", 0),
          (str_store_string, s1, "str_credits_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 7000),
          (lt, "$g_presentation_credits_obj_3", 0),
          (str_store_string, s1, "str_credits_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 9000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_credits_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 12500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 14000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_credits_5"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 16000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 17500),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_credits_6"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 19500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 21000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_credits_7"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 23000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 24500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_credits_8"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 26500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 28000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_credits_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_credits_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 470),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_credits_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 105),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 34000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 35500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_credits_9"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -4800),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 105500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),

  ("game_profile_banner_selection", 0, mesh_load_window, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (str_store_string, s1, "str_profile_banner_selection_text"),
      (create_text_overlay, reg1, s1, tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, reg1, pos1),
      (overlay_set_text, reg1, s1),
      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_1", "@Next Page", tf_center_justify),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_1", pos1),

      (create_button_overlay, "$g_presentation_obj_profile_banner_selection_2", "str_use_default_banner", tf_center_justify),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_2", pos1),

      (assign, ":x_pos", 150),
      (assign, ":y_pos", 575),
      (store_mul, ":starting_banner", 16, "$g_presentation_page_no"),
      (store_add, ":ending_banner", ":starting_banner", 16),
      (store_add, "$g_presentation_banner_start", "$g_presentation_obj_profile_banner_selection_2", 1),
      (assign, ":num_valid_banners", 0),
      (try_for_range, ":cur_banner_mesh", banner_meshes_begin, banner_meshes_end_minus_one),
        (assign, ":already_used", 0),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
          (assign, ":already_used", 1),
        (try_end),
        (eq, ":already_used", 0),
        (val_add, ":num_valid_banners", 1),
        (gt, ":num_valid_banners", ":starting_banner"),
        (le, ":num_valid_banners", ":ending_banner"),
        (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
        (position_set_x, pos1, ":x_pos"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_size, reg1, pos1),
        (val_add, ":x_pos", 100),
        (ge, ":x_pos", 900),
        (assign, ":x_pos", 150),
        (val_sub, ":y_pos", 250),
      (try_end),
      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change, [
      (store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_1"),
        (val_add, "$g_presentation_page_no", 1),
        (val_mod, "$g_presentation_page_no", 15), #chief cambiado
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_profile_banner_selection"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_profile_banner_selection_2"),
        (profile_set_banner_id, -1),
        (presentation_set_duration, 0),
      (else_try),
        (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
        (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
        (val_add, ":selected_banner", ":page_adder"),
        (assign, ":num_valid_banners", 0),
        (assign, ":end_cond", banner_meshes_end_minus_one),
        (try_for_range, ":cur_banner_mesh", banner_meshes_begin, ":end_cond"),
          (assign, ":already_used", 0),
          (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
            (faction_slot_eq, ":cur_faction", slot_faction_banner, ":cur_banner_mesh"),
            (assign, ":already_used", 1),
          (try_end),
          (eq, ":already_used", 0),
          (try_begin),
            (eq, ":selected_banner", ":num_valid_banners"),
            (store_sub, ":selected_banner_index", ":cur_banner_mesh", banner_meshes_begin),
            (profile_set_banner_id, ":selected_banner_index"),
            (assign, ":end_cond", 0), #break
          (try_end),
          (val_add, ":num_valid_banners", 1),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("game_custom_battle_designer", prsntf_manual_end_only, mesh_cb_ui_main, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_text_overlay, reg0, "str_player", tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_enemy",  tf_center_justify|tf_single_line|tf_with_outline),
      (overlay_set_color, reg0, 0xFFFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_character", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 670),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_18"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, 635),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_18", pos1),
      (try_for_range, ":cur_troop", quick_battle_troops_begin, quick_battle_troops_end),
        (str_store_troop_name, s0, ":cur_troop"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_18", s0),
      (try_end),
      (store_sub, ":cur_troop", "$g_quick_battle_troop", quick_battle_troops_begin),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_18", ":cur_troop"),

      (store_mul, ":cur_troop", "$g_quick_battle_troop", 2), #with weapons
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),
#dunde somebody cambios para custom battle chief
##      (try_begin),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_1"),
##        (assign, ":cur_troop", "trp_swadian_knight"),
##      (else_try),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_2"),
##        (assign, ":cur_troop", "trp_vaegir_knight"),
##      (else_try),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_3"),
##        (assign, ":cur_troop", "trp_khergit_veteran_horse_archer"),
##      (else_try),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_4"),
##        (assign, ":cur_troop", "trp_nord_champion"),
##      (else_try),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_5"),
##        (assign, ":cur_troop", "trp_rhodok_sergeant"),
##      (else_try),
##        (eq, "$g_quick_battle_team_2_faction", "fac_kingdom_6"),
##        (assign, ":cur_troop", "trp_sarranid_mamluke"),
##      (else_try),
##        (assign, ":cur_troop", "trp_taiga_bandit"),
##      (try_end),
##      (val_mul, ":cur_troop", 2), #with weapons

      (try_begin),
        (is_between, "$g_quick_battle_team_2_faction", npc_kingdoms_begin, kingdoms_end),
        (store_sub, ":fac", "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
        (store_random_in_range, "$lord_selected", 0, 22),
        (try_begin),#king
          (eq, "$lord_selected", 20),
          (store_add, "$lord_selected", kings_begin, ":fac"),
        (else_try),#pretender
          (eq, "$lord_selected", 21),
          (store_add, "$lord_selected", pretenders_begin, ":fac"),
        (else_try),
          (val_mul, ":fac", 20),#20 per faction (in original)
          (val_add, ":fac", lords_begin),
          (val_add, "$lord_selected", ":fac"),
        (try_end),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_kingdoms_end"),#outlaws
        (store_random_in_range, "$lord_selected", bandits_begin, bandits_end),
      (else_try),
        (eq, "$g_quick_battle_team_2_faction", "fac_robber_knights"),#mercs
        (store_random_in_range, "$lord_selected", mercenary_troops_begin, mercenary_troops_end),
      (try_end),
      (store_mul, ":cur_troop", "$lord_selected", 2), #with weapons
      #dunde somebody cambios para custom battle chief
      (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
      (position_set_x, pos1, 670),
      (position_set_y, pos1, 370),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_biography", tf_center_justify),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),

      (store_sub, ":cur_troop_text", "$g_quick_battle_troop", quick_battle_troops_begin),
      (val_add, ":cur_troop_text", quick_battle_troop_texts_begin),
      (create_text_overlay, reg0, ":cur_troop_text", tf_scrollable),
      (position_set_x, pos1, 850),
      (position_set_y, pos1, 850),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 320),
      (position_set_y, pos1, 560),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 360),
      (position_set_y, pos1, 130),
      (overlay_set_area_size, reg0, pos1),

      (create_text_overlay, reg0, "str_map_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 450),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_1"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 415),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_1", pos1),
      (try_begin),
        (eq, "$g_quick_battle_game_type", 0), #battle
        (try_for_range, ":cur_scene", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_battle_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_battle_scenes_begin),
        (try_end),
      (else_try),
        (try_for_range, ":cur_scene", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_scene_name", ":cur_scene", quick_battle_scenes_begin),
          (val_add, ":cur_scene_name", quick_battle_scene_names_begin),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_1", ":cur_scene_name"),
        (try_end),
        (try_begin),
          (is_between, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
          (store_sub, ":cur_map", "$g_quick_battle_map", quick_battle_siege_scenes_begin),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", ":cur_map"),
        (else_try),
          (overlay_set_val, "$g_presentation_obj_custom_battle_designer_1", 0),
          (assign, "$g_quick_battle_map", quick_battle_siege_scenes_begin),
        (try_end),
      (try_end),

      (store_sub, ":cur_mesh", "$g_quick_battle_map", quick_battle_scenes_begin),
      (val_add, ":cur_mesh", quick_battle_scene_images_begin),
      (create_mesh_overlay, reg0, ":cur_mesh"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 380),
      (position_set_y, pos1, 220),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_game_type_basic", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 180),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_23"),
      (position_set_x, pos1, 700),
      (position_set_y, pos1, 700),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 150),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_23", pos1),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_battle"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_offense"),
      (overlay_add_item, "$g_presentation_obj_custom_battle_designer_23", "str_siege_defense"),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_23", "$g_quick_battle_game_type"),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_24", "str_randomize"),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_24", pos1),

      (assign, ":cur_y", 330),
      (assign, ":cur_y", 350),
      (assign, ":cur_y_adder", 40),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_faction", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      
      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_4"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_4", pos1),
      (try_begin),
        (is_trial_version),
        (str_store_faction_name, s0, npc_kingdoms_begin),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
        (store_add, ":cur_faction", npc_kingdoms_begin, 1),
        (str_store_faction_name, s0, ":cur_faction"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
      (else_try),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (str_store_faction_name, s0, ":cur_faction"),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_4", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_1_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", npc_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":overlay_value"),
      (else_try),
        (store_sub, ":team_1_faction", "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_4", ":team_1_faction"),
      (try_end),

      (create_combo_label_overlay, "$g_presentation_obj_custom_battle_designer_5"),
##      (position_set_x, pos1, 800),
##      (position_set_y, pos1, 800),
##      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_5", pos1),
      (try_begin),
        (is_trial_version),
        (str_store_faction_name, s0, npc_kingdoms_begin),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
        (store_add, ":cur_faction", npc_kingdoms_begin, 1),
        (str_store_faction_name, s0, ":cur_faction"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
      (else_try),
        (try_for_range, ":cur_faction", npc_kingdoms_begin, npc_kingdoms_end),
          (str_store_faction_name, s0, ":cur_faction"),
          (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
        (try_end),
        (str_store_faction_name, s0, "fac_outlaws"),
        (overlay_add_item, "$g_presentation_obj_custom_battle_designer_5", s0),
      (try_end),
      (try_begin),
        (eq, "$g_quick_battle_team_2_faction", "fac_outlaws"),
        (store_sub, ":overlay_value", npc_kingdoms_end, npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":overlay_value"),
      (else_try),
        (store_sub, ":team_2_faction", "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
        (overlay_set_val, "$g_presentation_obj_custom_battle_designer_5", ":team_2_faction"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_composition", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (try_begin),
        (eq, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
        (eq, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 34),
        (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 33),
        (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
        (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
      (try_end),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 5),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_infantry"),
      (position_set_x, pos1, 650),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_6", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_6", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_6", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_12", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_9", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_9", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_9", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_15", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 15),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_archer"),
      (position_set_x, pos1, 660),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_7", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_7", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_7", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_13", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_10", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_10", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_10", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_16", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 10),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_cb_ui_icon_horseman"),
      (position_set_x, pos1, 655),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),
      (overlay_set_size, reg0, pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_8", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_8", pos1),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_8", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent", 0),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_14", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_11", 0, 100),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_11", pos1),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_11", pos1),

      (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent", 0),
      (position_set_x, pos1, 940),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_17", pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 175),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_text_overlay, reg0, "str_army_size", tf_center_justify),
      (position_set_x, pos1, 820),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (try_begin),
        (is_trial_version),
        (val_min, "$g_quick_battle_army_1_size", 25),
        (val_min, "$g_quick_battle_army_2_size", 25),
      (try_end),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_2", 0, 100),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_2", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_2", "$g_quick_battle_army_1_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_2", pos1),
      (position_set_x, pos1, 135),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_2", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men", 0),
      (position_set_x, pos1, 255),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_21", pos1),

      (create_slider_overlay, "$g_presentation_obj_custom_battle_designer_3", 200),
      (overlay_set_boundaries, "$g_presentation_obj_custom_battle_designer_3", 1000, 75000),
      (overlay_set_val, "$g_presentation_obj_custom_battle_designer_3", "$g_quick_battle_army_2_size"),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 1000),
      (overlay_set_size, "$g_presentation_obj_custom_battle_designer_3", pos1),
      (position_set_x, pos1, 780),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_3", pos1),

      (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
      (create_text_overlay, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_22", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "str_start", 0),
      (position_set_x, pos1, 415),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

      (create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_20", "str_back", 0),
      (position_set_x, pos1, 585),
      (position_set_y, pos1, 10),
      (overlay_set_position, "$g_presentation_obj_custom_battle_designer_20", pos1),

      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_event_state_change,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":value"),
       (try_begin),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_1"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_battle_scenes_begin),
         (else_try),
           (store_add, "$g_quick_battle_map", ":value", quick_battle_siege_scenes_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_23"),
         (assign, "$g_quick_battle_game_type", ":value"),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_24"),
         (store_random_in_range, "$g_quick_battle_game_type", 0, 3),
         (store_random_in_range, "$g_quick_battle_troop", quick_battle_troops_begin, quick_battle_troops_end),
         (try_begin),
           (is_trial_version),
           (store_random_in_range, "$g_quick_battle_team_1_faction", 0, 2),
           (try_begin),
             (eq, "$g_quick_battle_team_1_faction", 0),
             (assign, "$g_quick_battle_team_2_faction", 1),
           (else_try),
             (assign, "$g_quick_battle_team_2_faction", 0),
           (try_end),
           (val_add, "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
           (val_add, "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
           (store_random_in_range, "$g_quick_battle_army_1_size", 10, 16),
           (store_random_in_range, ":random_army_size", 0, 6),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
           (store_random_in_range, ":random_army_size", 0, 6),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
         (else_try),
           (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
           (val_add, ":num_factions", 1),
           (store_random_in_range, "$g_quick_battle_team_1_faction", 0, ":num_factions"),
           (try_begin),
             (eq, "$g_quick_battle_team_1_faction", 0),
             (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
           (else_try),
             (val_add, "$g_quick_battle_team_1_faction", npc_kingdoms_begin),
             (val_sub, "$g_quick_battle_team_1_faction", 1),
           (try_end),
           (assign, ":end_cond", 1000),
           (try_for_range, ":unused", 0, ":end_cond"),
             (store_random_in_range, "$g_quick_battle_team_2_faction", 0, ":num_factions"),
             (try_begin),
               (eq, "$g_quick_battle_team_2_faction", 0),
               (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
             (else_try),
               (val_add, "$g_quick_battle_team_2_faction", npc_kingdoms_begin),
               (val_sub, "$g_quick_battle_team_2_faction", 1),
             (try_end),
             (neq, "$g_quick_battle_team_1_faction", "$g_quick_battle_team_2_faction"),
             (assign, ":end_cond", 0),
           (try_end),
           (store_random_in_range, "$g_quick_battle_army_1_size", 10, 21),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
           (store_random_in_range, ":random_army_size", 0, 11),
           (val_add, "$g_quick_battle_army_1_size", ":random_army_size"),
         (try_end),
         (assign, "$g_quick_battle_army_2_size", "$g_quick_battle_army_1_size"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (store_random_in_range, "$g_quick_battle_map", quick_battle_battle_scenes_begin, quick_battle_battle_scenes_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
           (store_random_in_range, ":random_type", 0, 3),
           (store_random_in_range, ":random_type_2", 0, 2),
           (store_random_in_range, ":random_composition", 0, 100),
           (store_sub, ":left_max", 100, ":random_composition"),
           (store_random_in_range, ":random_composition_2", 0, ":left_max"),
           (store_sub, ":random_composition_3", ":left_max", ":random_composition_2"),
           (try_begin),
             (eq, ":random_type", 0),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (eq, ":random_type", 1),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (else_try),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":random_composition"),
             (try_begin),
               (eq, ":random_type_2", 0),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_3"),
             (else_try),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":random_composition_2"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":random_composition_3"),
             (try_end),
           (try_end),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is enemy
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_10_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", 100, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_6_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", 100, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
         (else_try),
           #siege defense
           (store_random_in_range, "$g_quick_battle_map", quick_battle_siege_scenes_begin, quick_battle_siege_scenes_end),
           #defender is player
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_7_last_value", 30, 100), #min 30% archer
           (store_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", 100, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0), #no cavalry
           (store_random_in_range, "$g_presentation_obj_custom_battle_designer_9_last_value", 20, 100), #min 20% infantry
           (store_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", 100, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0), #no cavalry
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_2"),
         (assign, "$g_quick_battle_army_1_size", ":value"),
         (try_begin),
           (is_trial_version),
           (gt, "$g_quick_battle_army_1_size", 25),
           (assign, "$g_quick_battle_army_1_size", 25),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_2", 25),
         (try_end),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_1_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_21", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_3"),
         (assign, "$g_quick_battle_army_2_size", ":value"),
         (try_begin),
           (is_trial_version),
           (gt, "$g_quick_battle_army_2_size", 25),
           (assign, "$g_quick_battle_army_2_size", 25),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_3", 25),
         (try_end),
         (call_script, "script_get_army_size_from_slider_value", "$g_quick_battle_army_2_size"),
         (overlay_set_text, "$g_presentation_obj_custom_battle_designer_22", "str_reg0_men"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_4"),
         (try_begin),
           (store_sub, ":outlaw_index", npc_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_1_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_1_faction", ":value", npc_kingdoms_begin),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_5"),
         (try_begin),
           (store_sub, ":outlaw_index", npc_kingdoms_end, npc_kingdoms_begin),
           (eq, ":value", ":outlaw_index"),
           (assign, "$g_quick_battle_team_2_faction", "fac_outlaws"),
         (else_try),
           (store_add, "$g_quick_battle_team_2_faction", ":value", npc_kingdoms_begin),
         (try_end),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_18"),
         (store_add, "$g_quick_battle_troop", ":value", quick_battle_troops_begin),
         (presentation_set_duration, 0),
         (start_presentation, "prsnt_game_custom_battle_designer"),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_8_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_8_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
           (try_begin),
             (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
             (neq, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_8", "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_8_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_8_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_7_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_6_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_7_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_6_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_6_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_7", "$g_presentation_obj_custom_battle_designer_7_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_6", "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_6_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_12", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_7_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_13", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_8_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_14", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_11_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_11_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
         (try_begin),
           (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
           (neq, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_val, "$g_presentation_obj_custom_battle_designer_11", "$g_presentation_obj_custom_battle_designer_11_last_value"),
         (else_try),
           (try_begin),
             (lt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (gt, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 100),
             (else_try),
               (gt, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (store_sub, ":dif", "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", ":dif"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 100),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (else_try),
             (gt, ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (store_sub, ":dif", ":value", "$g_presentation_obj_custom_battle_designer_11_last_value"),
             (try_begin),
               (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
               (assign, ":first_dif", 0),
               (assign, ":second_dif", ":dif"),
             (else_try),
               (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
               (assign, ":first_dif", ":dif"),
               (assign, ":second_dif", 0),
             (else_try),
               (store_div, ":first_dif", ":dif", 2),
               (store_sub, ":second_dif", ":dif", ":first_dif"),
               (try_begin),
                 (neq, ":first_dif", ":second_dif"),
                 (store_random_in_range, ":random_no", 0, 2),
                 (eq, ":random_no", 0),
                 (val_sub, ":second_dif", 1),
                 (val_add, ":first_dif", 1),
               (try_end),
             (try_end),
             (assign, "$g_presentation_obj_custom_battle_designer_11_last_value", ":value"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_10_last_value", ":first_dif"),
             (val_sub, "$g_presentation_obj_custom_battle_designer_9_last_value", ":second_dif"),
             (try_begin),
               (lt, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_10_last_value", 0),
             (else_try),
               (lt, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
               (val_add, "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_9_last_value"),
               (assign, "$g_presentation_obj_custom_battle_designer_9_last_value", 0),
             (try_end),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_10", "$g_presentation_obj_custom_battle_designer_10_last_value"),
             (overlay_set_val, "$g_presentation_obj_custom_battle_designer_9", "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (try_end),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_9_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_15", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_10_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_16", "str_reg0_percent"),
           (assign, reg0, "$g_presentation_obj_custom_battle_designer_11_last_value"),
           (overlay_set_text, "$g_presentation_obj_custom_battle_designer_17", "str_reg0_percent"),
         (try_end),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
         (assign, "$g_is_quick_battle", 1),
         (assign, ":cur_scene", "$g_quick_battle_map"),
         (try_begin),
           (eq, "$g_quick_battle_game_type", 0), #battle
           (assign, ":cur_mission_template", "mt_quick_battle_battle"),
 			#### edited-1 KLABAUTERMANN begin	chief 
			(assign, ":cur_scene", "scn_sea"),
			(assign, "$coastal_assault", 0),
			#### edited-1 KLABAUTERMANN ends
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (else_try),
           (eq, "$g_quick_battle_game_type", 1), #siege offense
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
 			#### edited-2 KLABAUTERMANN begin chief		 
			(assign, ":cur_mission_template", "mt_quick_battle_battle"),
			(assign, ":cur_scene", "scn_sea"),
			(assign, "$coastal_assault", 0),
			#### edited-2 KLABAUTERMANN ends		
          (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 0, 1),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 1, 0),
         (else_try),
           #siege defense
           (assign, ":cur_mission_template", "mt_quick_battle_siege"),
			#### edited-3 KLABAUTERMANN begin chief		 
			(assign, ":cur_mission_template", "mt_quick_battle_battle"),
			(assign, ":cur_scene", "scn_sea_2"),
			(assign, "$coastal_assault", 0),			
			#### edited-3 KLABAUTERMANN ends		
           (modify_visitors_at_site, ":cur_scene"),
           (call_script, "script_spawn_quick_battle_army", 0, "$g_quick_battle_team_1_faction", "$g_presentation_obj_custom_battle_designer_6_last_value", "$g_presentation_obj_custom_battle_designer_7_last_value", "$g_presentation_obj_custom_battle_designer_8_last_value", 1, 1),
           (call_script, "script_spawn_quick_battle_army", 16, "$g_quick_battle_team_2_faction", "$g_presentation_obj_custom_battle_designer_9_last_value", "$g_presentation_obj_custom_battle_designer_10_last_value", "$g_presentation_obj_custom_battle_designer_11_last_value", 0, 0),
         (try_end),
         ## Dunde's Restart Custom Battle BEGIN chief
         ## reg8 as Kill Count Accumulator, reg7 as current report
         (assign, reg8, 0),	    
         ## Dunde's Restart Custom Battle END		 
         (set_jump_mission,":cur_mission_template"),
         (jump_to_menu, "mnu_custom_battle_end"),
         (jump_to_scene, ":cur_scene"),
         (change_screen_mission),
         (presentation_set_duration, 0),
       (else_try),
         (eq, ":object", "$g_presentation_obj_custom_battle_designer_20"),
         (presentation_set_duration, 0),
       (try_end),
      ]),
    (ti_on_presentation_mouse_enter_leave,
     [
       (store_trigger_param_1, ":object"),
       (store_trigger_param_2, ":enter_leave"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_6"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_7"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_8"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_9"),
       (this_or_next|eq, ":object", "$g_presentation_obj_custom_battle_designer_10"),
       (eq, ":object", "$g_presentation_obj_custom_battle_designer_11"),
       (try_begin),
         (eq, ":enter_leave", 1),
         (try_begin),
           (eq, ":object", "$g_presentation_obj_custom_battle_last_mouse_over_object"),
           (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
         (try_end),
       (else_try),
         (assign, "$g_presentation_obj_custom_battle_last_mouse_over_object", ":object"),
       (try_end),
       ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_right_mouse_button),
        (neq, "$g_presentation_obj_custom_battle_last_mouse_over_object", -1),
        (try_begin),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_6"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_7"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_8"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_6_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_7_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_8_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_9"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_10"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 1),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
          (try_end),
        (else_try),
          (eq, "$g_presentation_obj_custom_battle_last_mouse_over_object", "$g_presentation_obj_custom_battle_designer_11"),
          (try_begin),
            (eq, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_9_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_10_locked", 0),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 1),
          (else_try),
            (assign, "$g_presentation_obj_custom_battle_designer_11_locked", 0),
          (try_end),
        (try_end),
      (try_end),
      ]),
    ]),

  ("game_multiplayer_admin_panel", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (try_begin),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_1"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_1"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_2"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_2"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_3"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_3"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_4"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_4"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_5"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_5"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_6"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_6"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_7"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_7"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_8"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_8"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_9"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_9"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_10"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_10"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_11"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_11"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_12"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_12"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_13"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_13"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_14"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_14"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_15"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_15"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_16"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_16"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_17"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_17"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_18"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_18"),
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_19"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_18"), #chief cambia hasta tener fotos
      (else_try),
        (eq, "$g_multiplayer_selected_map", "scn_multi_scene_20"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_18"), #chief cambia hasta tener fotos
      (else_try),
      (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_plain_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (else_try),
        (this_or_next|eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_medium"),
        (eq, "$g_multiplayer_selected_map", "scn_random_multi_steppe_large"),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randoms"),
      (else_try),
        (assign, ":map_image", "mesh_mp_ui_host_maps_randomp"),
      (try_end),
      
      (create_mesh_overlay, reg0, ":map_image"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, 550),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_ui_host_main"),
      (position_set_x, pos1, -1),
      (position_set_y, pos1, -1),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1002),
      (position_set_y, pos1, 1002),
      (overlay_set_size, reg0, pos1),

      (assign, ":cur_y", 1240),
      (assign, ":cur_y_adder", 40),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #two more options for these mods (friendly fire options)
        (val_add, ":cur_y", ":cur_y_adder"),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
        (val_add, ":cur_y", ":cur_y_adder"), #one more option for these mods
      (try_end),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_admin_panel_container", s0, tf_scrollable),
      (position_set_x, pos1, 59),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_container", pos1),
      (position_set_x, pos1, 640),
      (position_set_y, pos1, 520),
      (overlay_set_area_size, "$g_presentation_obj_admin_panel_container", pos1),
      (set_container_overlay, "$g_presentation_obj_admin_panel_container"),


      (create_text_overlay, reg0, "str_add_to_official_game_servers_list", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_14", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_14", pos1),
      (server_get_add_to_game_servers_list, ":add_to_servers_list"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_14", ":add_to_servers_list"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_enable_valve_anti_cheat", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_41", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_41", pos1),
      (server_get_anti_cheat, ":server_anti_cheat"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_41", ":server_anti_cheat"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_server_name", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (str_store_server_name, s0),
      (try_begin),
        (eq, "$g_multiplayer_renaming_server_allowed", 1),
        (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_20"),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_20", pos1),
        (overlay_set_text, "$g_presentation_obj_admin_panel_20", s0),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_20", -1),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_password", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_9"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_9", pos1),
      (str_store_server_password, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_9", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_welcome_message", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_simple_text_box_overlay, "$g_presentation_obj_admin_panel_32"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_32", pos1),
      (str_store_welcome_message, s0),
      (overlay_set_text, "$g_presentation_obj_admin_panel_32", s0),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_map", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (assign, ":selected_index", 0),

      (try_begin),
        (gt, ":num_maps", 12),
        (create_combo_label_overlay, "$g_presentation_obj_admin_panel_1"),
      (else_try),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_1"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_1", pos1),
      (try_begin),
        (gt, ":num_maps", 14),
        (position_set_x, pos1, 465),
      (else_try),
        (position_set_x, pos1, 490),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_1", pos1),
      (troop_get_slot, ":first_map", "trp_multiplayer_data", multi_data_maps_for_game_type_begin),
      (assign, ":selected_map_available", 0),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_1", s0),
        (try_begin),
          (eq, ":map_no", "$g_multiplayer_selected_map"),
          (assign, ":selected_index", ":i_map"),
          (assign, ":selected_map_available", 1),
        (try_end),
      (try_end),
      (overlay_set_val, "$g_presentation_obj_admin_panel_1", ":selected_index"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_game_type", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_changing_game_type_allowed", 1),
        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_10"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_10", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_10", pos1),
        (try_for_range, ":i_game_type", 0, multiplayer_num_game_types),
      #COOP chief #################################################### chief off para q no se vean coop battles en multiplayer
          (neq, ":i_game_type", multiplayer_game_type_coop_battle),
          (neq, ":i_game_type", multiplayer_game_type_coop_siege),
##########################################################

          (store_add, ":string_index", ":i_game_type", multiplayer_game_type_names_begin),
          (str_store_string, s0, ":string_index"),
          (overlay_add_item, "$g_presentation_obj_admin_panel_10", s0),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_admin_panel_10", "$g_multiplayer_game_type"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_10", -1),
        (store_add, ":string_index", "$g_multiplayer_game_type", multiplayer_game_type_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, s0, 0),
        (position_set_x, pos1, 385),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_team_reg1_faction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_admin_panel_11"), #multiplayer chief cambia para desplegar todas las facciones
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_11", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_11", pos1),
      (call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_11", "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 2),
      (create_text_overlay, reg0, "str_team_reg1_faction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_label_overlay, "$g_presentation_obj_admin_panel_12"), #multiplayer chief cambia para desplegar todas las facciones
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_12", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_12", pos1),
      (call_script, "script_multiplayer_fill_available_factions_combo_button", "$g_presentation_obj_admin_panel_12", "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_max_number_of_players", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

        (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_number_box_overlay, "$g_presentation_obj_admin_panel_21", 2, 40),
	 (else_try),
      (create_number_box_overlay, "$g_presentation_obj_admin_panel_21", 2, 201),
         (try_end), #chief capitan acaba
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_21", pos1),
      (server_get_max_num_players, ":max_players"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_21", ":max_players"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 1),
      (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_3", 0, "$g_multiplayer_max_num_bots"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_3", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_3", "$g_multiplayer_num_bots_team_1"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (assign, reg1, 2),
      (create_text_overlay, reg0, "str_number_of_bots_in_team_reg1", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_4", 0, "$g_multiplayer_max_num_bots"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_4", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_4", "$g_multiplayer_num_bots_team_2"),

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_friendly_fire", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_5", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_5", pos1),
      (server_get_friendly_fire, ":server_friendly_fire"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_5", ":server_friendly_fire"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_allow_melee_friendly_fire", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_36", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_36", pos1),
      (server_get_melee_friendly_fire, ":melee_friendly_fire"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_36", ":melee_friendly_fire"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_self_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_37", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_37", pos1),
      (server_get_friendly_fire_damage_self_ratio, ":friendly_fire_damage_self_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_37", ":friendly_fire_damage_self_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_friendly_fire_damage_friend_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_38", 0, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_38", pos1),
      (server_get_friendly_fire_damage_friend_ratio, ":friendly_fire_damage_friend_ratio"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_38", ":friendly_fire_damage_friend_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_spectator_camera", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_19"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_19", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_19", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_free"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_any_player"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_19", "str_stick_to_team_members_view"),
      (server_get_ghost_mode, ":server_ghost_mode"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_19", ":server_ghost_mode"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_control_block_direction", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_15"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_15", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_15", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_automatic"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_15", "str_by_mouse_movement"),
      (server_get_control_block_dir, ":server_control_block_dir"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_15", ":server_control_block_dir"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_combat_speed", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_26"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_26", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_26", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_0"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_1"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_2"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_3"),
      (overlay_add_item, "$g_presentation_obj_admin_panel_26", "str_combat_speed_4"),
      (server_get_combat_speed, ":server_combat_speed"),
      (overlay_set_val, "$g_presentation_obj_admin_panel_26", ":server_combat_speed"),

      (try_begin),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_map_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_7", 5, 121),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_7", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_7", "$g_multiplayer_game_max_minutes"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_7", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_round_time_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_16", multiplayer_round_max_seconds_min, multiplayer_round_max_seconds_max),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_16", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_16", "$g_multiplayer_round_max_seconds"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_16", -1),
      (try_end),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_players_take_control_of_a_bot_after_death", 0),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_check_box_overlay, "$g_presentation_obj_admin_panel_25", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 7),
        (store_add, ":special_cur_y", ":cur_y", 7),
        (position_set_y, pos1, ":special_cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_25", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_25", "$g_multiplayer_player_respawn_as_bot"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_25", -1),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_defender_spawn_count_limit", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_combo_button_overlay, "$g_presentation_obj_admin_panel_27"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_presentation_obj_admin_panel_27", pos1),
        (position_set_x, pos1, 490),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_27", pos1),
        (assign, reg0, 5),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 4),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 3),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 2),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (assign, reg0, 1),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_reg0"),
        (overlay_add_item, "$g_presentation_obj_admin_panel_27", "str_unlimited"),

        (store_sub, ":value_to_set", 5, "$g_multiplayer_number_of_respawn_count"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_27", ":value_to_set"),
        #(val_sub, ":cur_y", ":cur_y_adder"),      
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_27", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_team_points_limit", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_8", 3, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_8", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_8", "$g_multiplayer_game_max_points"),

      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_flags", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_17", 25, 401),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_17", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_17", "$g_multiplayer_point_gained_from_flags"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_17", -1),
      (try_end),
      
      (try_begin),
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
      
        (val_sub, ":cur_y", ":cur_y_adder"),

        (create_text_overlay, reg0, "str_point_gained_from_capturing_flag", 0),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_18", 0, 11),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_18", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_18", "$g_multiplayer_point_gained_from_capturing_flag"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_18", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_respawn_period", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_6", multiplayer_respawn_period_min, multiplayer_respawn_period_max),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_6", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_6", "$g_multiplayer_respawn_period"),

      (val_sub, ":cur_y", ":cur_y_adder"),

        (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_text_overlay, reg0, "str_initial_gold_multiplierboth", 0),
	 (else_try),
      (create_text_overlay, reg0, "str_initial_gold_multiplier", 0),
         (try_end), #chief capitan acaba
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_33", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_33", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_33", "$g_multiplayer_initial_gold_multiplier"),

      (val_sub, ":cur_y", ":cur_y_adder"),

        (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
              (create_text_overlay, reg0, "str_initial_gold_multipliert1", 0),
	 (else_try),
      (create_text_overlay, reg0, "str_battle_earnings_multiplier", 0),
         (try_end), #chief capitan acaba
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_34", 0, 1001),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_34", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_34", "$g_multiplayer_battle_earnings_multiplier"),

      (try_begin),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
        (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
                (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),

        (val_sub, ":cur_y", ":cur_y_adder"),

        (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
              (create_text_overlay, reg0, "str_initial_gold_multipliert2", 0),
	 (else_try),
        (create_text_overlay, reg0, "str_round_earnings_multiplier", 0),
         (try_end), #chief capitan acaba
        (position_set_x, pos1, 0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),

        (create_number_box_overlay, "$g_presentation_obj_admin_panel_35", 0, 1001),
        (position_set_x, pos1, 390),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_admin_panel_35", pos1),
        (overlay_set_val, "$g_presentation_obj_admin_panel_35", "$g_multiplayer_round_earnings_multiplier"),
      (else_try),
        (assign, "$g_presentation_obj_admin_panel_35", -1),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_kick_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_28", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_28", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_28", "$g_multiplayer_kick_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_ban_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_29", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_29", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_29", "$g_multiplayer_ban_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_maps_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_24", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_24", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_24", "$g_multiplayer_maps_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_make_factions_voteable", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_23", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_23", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_23", "$g_multiplayer_factions_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),

##	  (try_begin), # bot count limit for polls
##	    (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_text_overlay, reg0, "str_bots_upper_limit_for_votes", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (assign, ":upper_limit", 51),
      (val_min, ":upper_limit", "$g_multiplayer_max_num_bots"),
      (create_number_box_overlay, "$g_presentation_obj_admin_panel_22", 0, ":upper_limit"),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_22", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_22", "$g_multiplayer_num_bots_voteable"),

      (val_sub, ":cur_y", ":cur_y_adder"),
##	  (try_end), #chief capitan

      (create_text_overlay, reg0, "str_valid_vote_ratio", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_number_box_overlay, "$g_presentation_obj_admin_panel_30", 50, 101),
      (position_set_x, pos1, 390),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_30", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_30", "$g_multiplayer_valid_vote_ratio"),

      (val_sub, ":cur_y", ":cur_y_adder"),
##	  (try_begin), # bot count limit for polls
##	    (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_text_overlay, reg0, "str_auto_team_balance_limit", 0),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_combo_button_overlay, "$g_presentation_obj_admin_panel_31"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_admin_panel_31", pos1),
      (position_set_x, pos1, 490),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_31", pos1),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_unlimited"),
      (assign, reg0, 6),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 5),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 4),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 3),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (assign, reg0, 2),
      (overlay_add_item, "$g_presentation_obj_admin_panel_31", "str_reg0"),
      (try_begin),
        (ge, "$g_multiplayer_auto_team_balance_limit", 1000),
        (overlay_set_val, "$g_presentation_obj_admin_panel_31", 0),
      (else_try),
        (store_sub, ":set_value", 7, "$g_multiplayer_auto_team_balance_limit"),
        (overlay_set_val, "$g_presentation_obj_admin_panel_31", ":set_value"),
      (try_end),

      (val_sub, ":cur_y", ":cur_y_adder"),
##	  (try_end), #chief capitan

      (create_text_overlay, reg0, "str_allow_player_banners", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_39", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_39", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_39", "$g_multiplayer_allow_player_banners"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_disallow_ranged_weapons", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_42", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_42", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_42", "$g_multiplayer_disallow_ranged_weapons"),

      (val_sub, ":cur_y", ":cur_y_adder"),

      (create_text_overlay, reg0, "str_force_default_armor", 0),
      (position_set_x, pos1, 30),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),

      (create_check_box_overlay, "$g_presentation_obj_admin_panel_40", "mesh_checkbox_off", "mesh_checkbox_on"),
      (position_set_x, pos1, 7),
      (store_add, ":special_cur_y", ":cur_y", 7),
      (position_set_y, pos1, ":special_cur_y"),
      (overlay_set_position, "$g_presentation_obj_admin_panel_40", pos1),
      (overlay_set_val, "$g_presentation_obj_admin_panel_40", "$g_multiplayer_force_default_armor"),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_13", "str_back", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 50),
      (overlay_set_position, "$g_presentation_obj_admin_panel_13", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_13", pos1),

      (create_button_overlay, "$g_presentation_obj_admin_panel_2", "str_start_map", tf_center_justify),
      (position_set_x, pos1, 825),
      (position_set_y, pos1, 90),
      (overlay_set_position, "$g_presentation_obj_admin_panel_2", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_presentation_obj_admin_panel_2", pos1),

#COOP chief ############################################################
      (try_begin),
        (eq, "$coop_battle_state", coop_battle_state_setup_sp),
        (create_button_overlay, "$g_presentation_obj_admin_panel_43", "@Co-op Admin Panel", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 130),
        (overlay_set_position, "$g_presentation_obj_admin_panel_43", pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, "$g_presentation_obj_admin_panel_43", pos1),
      (try_end),
############################################################ chief acaba

      (presentation_set_duration, 999999),

      (try_begin),
        (eq, ":selected_map_available", 0),
        (assign, "$g_multiplayer_selected_map", ":first_map"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (try_end),
      ]),
    
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_admin_panel_1"),
        (store_add, ":slot_no", ":value", multi_data_maps_for_game_type_begin),
        (troop_get_slot, "$g_multiplayer_selected_map", "trp_multiplayer_data", ":slot_no"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_2"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_start_map, "$g_multiplayer_selected_map", "$g_multiplayer_game_type"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_3"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 1, ":value"), #value es el valor de todos los bots q apareceran en batalla
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_4"),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_num_bots_in_team, 2, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_5"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_6"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_period, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_7"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_minutes, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_8"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_game_max_points, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_9"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_game_password, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_10"),
        (assign, "$g_multiplayer_game_type", ":value"),
#chief capitan empieza
		(tutorial_message, -1), 
		(try_begin),
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
                (tutorial_message, "str_lordsbattle_note"), 
		(end_try), 
#chief capitan
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_11"),
        (store_add, "$g_multiplayer_next_team_1_faction", ":value", npc_kingdoms_begin),
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_1_faction", "$g_multiplayer_next_team_2_faction"),
##          (val_add, "$g_multiplayer_next_team_1_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 1, "$g_multiplayer_next_team_1_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_12"),
        (store_add, "$g_multiplayer_next_team_2_faction", ":value", npc_kingdoms_begin),
##        (try_begin),
##          (ge, "$g_multiplayer_next_team_2_faction", "$g_multiplayer_next_team_1_faction"),
##          (val_add, "$g_multiplayer_next_team_2_faction", 1),
##        (try_end),
        (multiplayer_send_2_int_to_server, multiplayer_event_admin_set_team_faction, 2, "$g_multiplayer_next_team_2_faction"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_game_multiplayer_admin_panel"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_13"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_14"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_add_to_servers_list, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_15"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_control_block_dir, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_16"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_max_seconds, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_17"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_flags, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_18"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_point_gained_from_capturing_flag, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_19"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ghost_mode, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_20"),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_server_name, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_21"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_max_num_players, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_22"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_num_bots_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_23"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_factions_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_24"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_maps_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_25"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_player_respawn_as_bot, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_26"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_combat_speed, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_27"),
        (store_sub, ":value_to_send", 5, ":value"), #opposite index of displayed list
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_respawn_count, ":value_to_send"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_28"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_kick_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_29"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_ban_voteable, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_30"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_valid_vote_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_31"),
        (try_begin),
          (eq, ":value", 0),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, 1000),
        (else_try),
          (store_sub, ":value_to_send", 7, ":value"),
          (multiplayer_send_int_to_server, multiplayer_event_admin_set_auto_team_balance_limit, ":value_to_send"),
        (try_end),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_32"),
        (server_set_welcome_message, s0),
        (multiplayer_send_string_to_server, multiplayer_event_admin_set_welcome_message, s0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_33"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_initial_gold_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_34"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_battle_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_35"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_round_earnings_multiplier, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_36"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_melee_friendly_fire, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_37"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_self_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_38"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_friendly_fire_damage_friend_ratio, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_39"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_allow_player_banners, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_40"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_force_default_armor, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_41"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_anti_cheat, ":value"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_42"),
        (multiplayer_send_int_to_server, multiplayer_event_admin_set_disallow_ranged_weapons, ":value"),

#COOP chief ############################################################
      (else_try),
        (eq, ":object", "$g_presentation_obj_admin_panel_43"),
        (presentation_set_duration, 0),
        (multiplayer_send_int_to_server, multiplayer_event_coop_send_to_server, coop_event_setup_battle),

#########################################################
      (try_end),
      ]),
    (ti_on_presentation_run,
     [

#COOP chief ############################################################
      (try_begin), 
        (multiplayer_is_server),
        (call_script, "script_coop_on_admin_panel_load"),
        (eq, "$coop_battle_state", coop_battle_state_setup_mp),#only if coop battle is setup
           (presentation_set_duration, 0),
          (start_presentation, "prsnt_coop_admin_panel"),
        (try_end),

############################################################## chief acaba
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_welcome_message", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (str_store_welcome_message, s0),
      (try_begin),
        (neg|str_is_empty, s0),
        (eq, "$g_multiplayer_welcome_message_shown", 0),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (create_text_overlay, reg0, s0, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (else_try),
        (eq, "$g_multiplayer_show_server_rules", 1),
        (create_mesh_overlay, reg0, "mesh_mp_ui_welcome_panel"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 400),
        (overlay_set_position, reg0, pos1),
        (try_begin),
          (neg|str_is_empty, s0),
          (str_clear, s3),
          (str_store_string, s2, s0),
          (str_store_string, s2, "str_s2_s3"),
          (str_store_string, s2, "str_s2_s3"),
        (else_try),
          (str_clear, s2),
        (try_end),
        (str_store_string, s3, "@Game Rules:^"),
        (str_store_string, s2, "str_s2_s3"),
        (assign, ":end_cond", 1000),
        (call_script, "script_game_multiplayer_get_game_type_mission_template", "$g_multiplayer_game_type"),
        (assign, ":cur_mt", reg0),
        
        (str_store_server_name, s0),
        (str_store_string, s3, "str_server_name_s0"),
        (str_store_string, s2, "str_s2_s3"),        

        (try_begin),                
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
          (str_store_string, s0, "str_multi_game_type_1"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_team_deathmatch),
          (str_store_string, s0, "str_multi_game_type_2"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (str_store_string, s0, "str_multi_game_type_3"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (str_store_string, s0, "str_multi_game_type_4"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (str_store_string, s0, "str_multi_game_type_5"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (str_store_string, s0, "str_multi_game_type_6"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_multi_game_type_7"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_duel),
          (str_store_string, s0, "str_multi_game_type_8"),
        (else_try),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
          (str_store_string, s0, "str_multi_game_type_11"),
        (try_end),
        (str_store_string, s3, "str_game_type_s0"),
        (str_store_string, s2, "str_s2_s3"),   
        
        (store_current_scene, ":cur_scene"),
        (val_sub, ":cur_scene", "scn_multi_scene_1"),
        (val_add, ":cur_scene", "str_multi_scene_1"),
        (str_store_string, s0, ":cur_scene"),
        (str_store_string, s3, "str_map_name_s0"),
        (str_store_string, s2, "str_s2_s3"),
        
        (store_mission_timer_a, ":mission_timer"),
        (val_add, ":mission_timer", "$server_mission_timer_while_player_joined"),
        (assign, reg0, ":mission_timer"),       
        (store_mul, "$g_multiplayer_game_max_seconds", "$g_multiplayer_game_max_minutes", 60),
        (store_sub, ":remaining_seconds", "$g_multiplayer_game_max_seconds", ":mission_timer"),
        (store_div, reg0, ":remaining_seconds", 60),
        (store_mod, reg1, ":remaining_seconds", 60),
        (try_begin),
          (ge, reg0, 10),
          (ge, reg1, 10),          
          (str_clear, s0),
          (str_clear, s1),
        (else_try),  
          (ge, reg0, 10),
          (str_clear, s0),
          (str_store_string, s1, "@0"),
        (else_try),  
          (ge, reg1, 10),
          (str_store_string, s0, "@0"),
          (str_clear, s1),
        (else_try),  
          (str_store_string, s0, "@0"),
          (str_store_string, s1, "@0"),
        (try_end),
        (str_store_string, s3, "str_remaining_time_s0reg0_s1reg1"),
        
        (str_store_string, s2, "str_s2_s3"),

        (try_for_range, ":cur_option", 0, ":end_cond"),
          (assign, reg0, -12345), #magic number
          (call_script, "script_game_get_multiplayer_server_option_for_mission_template", ":cur_mt", ":cur_option"),
          (try_begin),
            (eq, reg0, -12345),
            (assign, ":end_cond", 0),
          (else_try),
            (call_script, "script_game_multiplayer_server_option_for_mission_template_to_string", ":cur_mt", ":cur_option", reg0),
            (str_store_string, s3, s0),
            (str_store_string, s2, "str_s2_s3"),
          (try_end),
        (try_end),        
        (create_text_overlay, reg0, s2, tf_scrollable),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 230),
        (position_set_y, pos1, 425),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 540),
        (position_set_y, pos1, 150),
        (overlay_set_area_size, reg0, pos1),

        (presentation_set_duration, 999999),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
       (str_store_welcome_message, s0),
       (try_begin),
         (neq, "$g_multiplayer_show_server_rules", 1),
         (this_or_next|str_is_empty, s0),
         (eq, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (start_presentation, "prsnt_multiplayer_team_select"),
       (else_try),
         (store_mission_timer_a, ":mission_timer"),
         (gt, ":mission_timer", 1),
         (this_or_next|key_clicked, key_escape),
         (this_or_next|key_clicked, key_space),
         (this_or_next|key_clicked, key_enter),
         (this_or_next|key_clicked, key_left_mouse_button),
         (this_or_next|key_clicked, key_right_mouse_button),
         (this_or_next|key_clicked, key_xbox_ltrigger),
         (key_clicked, key_xbox_rtrigger),
         (assign, "$g_multiplayer_welcome_message_shown", 1),
         (presentation_set_duration, 0),
         (neg|is_presentation_active, "prsnt_multiplayer_escape_menu"),
         (neg|is_presentation_active, "prsnt_multiplayer_team_select"),
         (try_begin),
           (eq, "$g_multiplayer_show_server_rules", 1),
           (assign, "$g_multiplayer_show_server_rules", 0),
           (start_presentation, "prsnt_multiplayer_escape_menu"),
         (else_try),
           (start_presentation, "prsnt_multiplayer_team_select"),
         (try_end),
       (try_end),
      ]),
    ]),

  ("multiplayer_team_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_team_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_team_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_team_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_team_select_container"),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_faction", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (team_get_faction, ":faction_no", 0),
      (str_store_faction_name, s0, ":faction_no"),
      (create_button_overlay, "$g_presentation_obj_team_select_1", s0, 0),
      (try_begin),
        (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0xFFFFFF),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x55FF50),
        (assign, "$g_multiplayer_team_select_1_available", 1),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_team_select_1", 0x888888),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_1", 0x888888),
        (assign, "$g_multiplayer_team_select_1_available", 0),
      (try_end),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_team_select_1", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (team_get_faction, ":faction_no", 1),
      (str_store_faction_name, s0, ":faction_no"),
      (create_button_overlay, "$g_presentation_obj_team_select_2", s0, 0),
      (try_begin),
        (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
        (overlay_set_color, "$g_presentation_obj_team_select_2", 0xFFFFFF),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x55FF50),
        (assign, "$g_multiplayer_team_select_2_available", 1),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_team_select_2", 0x888888),
        (overlay_set_hilight_color, "$g_presentation_obj_team_select_2", 0x888888),
        (assign, "$g_multiplayer_team_select_2_available", 0),
      (try_end),
      (overlay_set_position, "$g_presentation_obj_team_select_2", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (create_button_overlay, "$g_presentation_obj_team_select_3", "str_spectator", 0),
      (overlay_set_color, "$g_presentation_obj_team_select_3", 0xFFFFFF),
      (overlay_set_position, "$g_presentation_obj_team_select_3", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),

      (presentation_set_duration, 999999),
      ]),

    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_team_select_1"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 0),
              (assign, "$g_confirmation_result", 0),
              (assign, "$g_waiting_for_confirmation_to_terminate", 1),
              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 0),
              (player_set_team_no, ":my_player_no", 0),
            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_2"),
          (try_begin),
            (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
            (try_begin),
              (player_get_team_no, ":my_team", ":my_player_no"),
              (neq, ":my_team", 1),
              (assign, "$g_confirmation_result", 0),
              (assign, "$g_waiting_for_confirmation_to_terminate", 1),
              (player_get_troop_id, "$g_confirmation_troop_backup", ":my_player_no"),
              (player_get_team_no, "$g_confirmation_team_backup", ":my_player_no"),
              (player_set_troop_id, ":my_player_no", -1),
              (multiplayer_send_int_to_server, multiplayer_event_change_team_no, 1),
              (player_set_team_no, ":my_player_no", 1),
            (else_try),
              (presentation_set_duration, 0),
              (start_presentation, "prsnt_multiplayer_troop_select"),
            (try_end),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_team_select_3"),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
          (presentation_set_duration, 0),
        (try_end),
      (try_end),
      ]),

    (ti_on_presentation_run,
     [
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (eq, "$g_waiting_for_confirmation_to_terminate", 0),
        (multiplayer_get_my_team, ":my_team"),
        (try_begin),
          (eq, ":my_team", multi_team_unassigned),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", 1),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),

###chief capitan oro
##    (try_begin), #chief capitan
##                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
##                (multiplayer_get_my_player, ":my_player_no"),
##              (player_get_gold, ":player_gold", ":my_player_no"),
##              (player_get_team_no, ":my_team_no", ":my_player_no"),
##
##        (try_begin), #chief capitan
##          (player_get_slot, ":basic_dinero", ":my_player_no", slot_agent_dinerotropas),
##             (try_begin), #chief capitan
##                  (eq, ":basic_dinero", 2),
##                  (player_set_slot, ":my_player_no", slot_agent_dinerotropas, 0),
##	    (else_try),
##                     (eq, ":basic_dinero", 1),
##                  (try_begin), #chief capitan
##		   (eq, ":my_team_no", 0),
##            # (lt, ":player_total_potential_gold", ":minimum_gold"),
##                    (assign, ":gold_addition", 1000),
##                    (val_mul, ":gold_addition", "$g_multiplayer_initial_gold_team1"),
##                    (val_div, ":gold_addition", 100),
##	          (else_try),
##		     (eq, ":my_team_no", 1),
##                     (assign, ":gold_addition", 1000),
##                     (val_mul, ":gold_addition", "$g_multiplayer_initial_gold_team2"),
##                     (val_div, ":gold_addition", 100),
##                   (try_end), #chief capitan acaba
##                 (assign, ":player_gold", ":gold_addition"), 
##                 (player_set_gold, ":my_player_no", ":player_gold", multi_max_gold_that_can_be_stored),
##                 (player_set_slot, ":my_player_no", slot_agent_dinerotropas, 2),
##   	  (else_try),
##               (eq, ":basic_dinero", 0),
##                (try_begin), #chief capitan
##		   (eq, ":my_team_no", 0),
##            # (lt, ":player_total_potential_gold", ":minimum_gold"),
##                    (assign, ":gold_addition", 1000),
##                    (val_mul, ":gold_addition", "$g_multiplayer_initial_gold_team1"),
##                    (val_div, ":gold_addition", 100),
##	         (else_try),
##		   (eq, ":my_team_no", 1),
##                    (assign, ":gold_addition", 1000),
##                    (val_mul, ":gold_addition", "$g_multiplayer_initial_gold_team2"),
##                    (val_div, ":gold_addition", 100),
##                  (try_end), #chief capitan acaba
##             (val_add, ":player_gold", ":gold_addition"), 
##             (player_set_gold, ":my_player_no", ":player_gold", multi_max_gold_that_can_be_stored),
##            (player_set_slot, ":my_player_no", slot_agent_dinerotropas, 1),
####         (try_end), #chief capitan acaba
##     (try_end), #chief capitan acaba
##   (try_end), #chief capitan acaba


        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, "$g_waiting_for_confirmation_to_terminate", 1),
        (eq, "$g_confirmation_result", -1),
        #return troop and team back to the old state
        (player_set_troop_id, ":my_player_no", "$g_confirmation_troop_backup"),
        (player_set_team_no, ":my_player_no", "$g_confirmation_team_backup"),
        (assign, "$g_waiting_for_confirmation_to_terminate", 0),
        (assign, "$g_confirmation_result", 0),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (assign, ":do_refresh", 0),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 0),
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_1_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (try_begin),
          (call_script, "script_cf_multiplayer_team_is_available", ":my_player_no", 1),
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 0),
            (assign, ":do_refresh", 1),
          (try_end),
        (else_try),
          #not available
          (try_begin),
            (eq, "$g_multiplayer_team_select_2_available", 1),
            (assign, ":do_refresh", 1),
          (try_end),
        (try_end),
        (eq, ":do_refresh", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (try_end),
      ]),
    ]),
  
  ("multiplayer_troop_select", prsntf_manual_end_only, 0, [ #elige tropas, aqui podemos poner los rangos de comandante
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

        (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 70), #chief cambia de 250 a 70 para chief capitan
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1800), #chief cambia de 1000 a 1800 para chief capitan
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_troop_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 110), #chief cambia de 285 a 90 pata chief capitan
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_troop_select_container", pos1),
      (position_set_x, pos1, 750), #chief cambia a 805 para chief capitan
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_troop_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_troop_select_container"),
         (try_end), #chief capitan acaba

        (try_begin), #chief capitan
                (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_troop_select_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_troop_select_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_troop_select_container", pos1),
      (set_container_overlay, "$g_presentation_obj_troop_select_container"),
         (try_end), #chief capitan acaba

      (assign, ":cur_y", 450),

        (try_begin), #chief capitan continua aqui
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
      (create_text_overlay, reg0, "str_choose_a_captain", 0),
	 (else_try),
      (create_text_overlay, reg0, "str_choose_a_troop", 0),
         (try_end), #chief capitan acaba
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (position_set_x, pos1, 100),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (try_for_range, ":i_multi", multi_data_troop_button_indices_begin, multi_data_troop_button_indices_end),
        (troop_set_slot, "trp_multiplayer_data", ":i_multi", -1),
      (try_end),


      (assign, ":cur_troop_index", 0),
     (try_for_range, ":troop_no", multiplayer_troops_begin, multiplayer_troops_end),

##        (try_begin), #chief capitan continua aqui
##                (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
##		(neg|is_between, ":troop_no", multiplayer_lordscapitan_begin, multiplayer_lordscapitan_end),

        (store_troop_faction, ":troop_faction", ":troop_no"),
        (eq, ":troop_faction", ":my_faction_no"),

        (try_begin), #chief capitan continua aqui
                (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
		(neg|is_between, ":troop_no", multiplayer_lordscapitan_begin, multiplayer_lordscapitan_end),

        (str_store_troop_name, s1, ":troop_no"),
        (create_button_overlay, reg0, s1, 0),
        (overlay_set_color, reg0, 0xFFFFFF),
      (try_end),

        (try_begin), #chief capitan continua aqui
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
		(neg|is_between, ":troop_no", multiplayer_troops_begin, multiplayer_lordscapitan_begin),
        (str_store_troop_name, s1, ":troop_no"),
        (create_button_overlay, reg0, s1, 0),
        (overlay_set_color, reg0, 0xFFFFFF),
      (try_end),

        (store_add, ":button_index_slot", ":cur_troop_index", multi_data_troop_button_indices_begin),
        (troop_set_slot, "trp_multiplayer_data", ":button_index_slot", reg0),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (val_add, ":cur_troop_index", 1),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
   
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (team_get_faction, ":my_faction_no", ":my_team_no"),
      (assign, ":selected_troop_no", -1),
      (assign, ":end_cond", multi_data_troop_button_indices_end),
      (try_for_range, ":i_button", multi_data_troop_button_indices_begin, ":end_cond"),
        (troop_slot_eq, "trp_multiplayer_data", ":i_button", ":object"),
        (store_sub, ":selected_troop_index", ":i_button", multi_data_troop_button_indices_begin),
        (assign, ":end_cond_2", multiplayer_troops_end),
        (try_for_range, ":troop_no", multiplayer_troops_begin, ":end_cond_2"),
          (store_troop_faction, ":troop_faction", ":troop_no"),
          (eq, ":troop_faction", ":my_faction_no"),
          (val_sub, ":selected_troop_index", 1),
          (lt, ":selected_troop_index", 0),
          (assign, ":selected_troop_no", ":troop_no"),
          (assign, ":end_cond_2", 0), #break
        (try_end),
        (try_begin),
          (multiplayer_get_my_troop, ":troop_no"),
          (neq, ":troop_no", ":selected_troop_no"),
          (player_set_troop_id, ":my_player_no", ":selected_troop_no"),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, ":selected_troop_no"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":selected_troop_no"),
          (call_script, "script_multiplayer_send_item_selections"),
        (try_end),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        (start_presentation, "prsnt_multiplayer_item_select"),
        (assign, ":end_cond", 0), #break
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (multiplayer_get_my_player, ":my_player_no"),
        (is_between, ":my_player_no", 0, multiplayer_max_possible_player_id),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
          (neg|is_between, ":my_troop", multiplayer_troops_begin, multiplayer_troops_end),
          (player_set_troop_id, ":my_player_no", -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_troop_id, -1),
          (multiplayer_send_int_to_server, multiplayer_event_change_team_no, multi_team_spectator),
          (player_set_team_no, ":my_player_no", multi_team_spectator),
        (try_end),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_item_select", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, "$g_presentation_obj_item_select_1", -1),
      (assign, "$g_presentation_obj_item_select_2", -1),
      (assign, "$g_presentation_obj_item_select_3", -1),
      (assign, "$g_presentation_obj_item_select_4", -1),
      (assign, "$g_presentation_obj_item_select_5", -1),
      (assign, "$g_presentation_obj_item_select_6", -1),
      (assign, "$g_presentation_obj_item_select_7", -1),
      (assign, "$g_presentation_obj_item_select_8", -1),
      (assign, "$g_presentation_obj_item_select_9", -1),
      (assign, "$g_presentation_obj_item_select_10", -1),
      (assign, "$g_presentation_obj_item_select_11", -1),
      (assign, "$g_presentation_obj_item_select_12", -1),
      (assign, "$g_presentation_obj_item_select_13", -1),
      (assign, "$g_presentation_obj_item_select_14", -1),
      (assign, "$g_presentation_obj_item_select_15", -1),
      (assign, "$g_presentation_obj_item_select_16", -1),
      
      (try_begin),
        (neq, "$g_current_opened_item_details", -1),
        (close_item_details),
        (assign, "$g_current_opened_item_details", -1),
      (try_end),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 526),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_1", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_1", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_1", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 475),
      (overlay_set_position, "$g_presentation_obj_item_select_1", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 426),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_2", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_2", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_2", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 375),
      (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 326),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_3", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_3", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 275),
      (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 226),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_4", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_4", "mesh_mp_inventory_slot_equip", "mesh_mp_inventory_slot_equip"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_4", pos1),
      (position_set_x, pos1, 899),
      (position_set_y, pos1, 175),
      (overlay_set_position, "$g_presentation_obj_item_select_4", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 576),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_5", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_5", "mesh_mp_inventory_slot_helmet", "mesh_mp_inventory_slot_helmet"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_5", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 525),
      (overlay_set_position, "$g_presentation_obj_item_select_5", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 476),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_6", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_6", "mesh_mp_inventory_slot_armor", "mesh_mp_inventory_slot_armor"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_6", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 425),
      (overlay_set_position, "$g_presentation_obj_item_select_6", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 376),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_7", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_7", "mesh_mp_inventory_slot_boot", "mesh_mp_inventory_slot_boot"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_7", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 325),
      (overlay_set_position, "$g_presentation_obj_item_select_7", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 276),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_8", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_8", "mesh_mp_inventory_slot_glove", "mesh_mp_inventory_slot_glove"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_8", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 225),
      (overlay_set_position, "$g_presentation_obj_item_select_8", pos1),

      (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
      (player_get_slot, ":selected_item_id", ":my_player_no", ":selected_item_index"),
      (try_begin),
        (ge, ":selected_item_id", 0),
        (eq, "$g_horses_are_avaliable", 1),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
        (create_mesh_overlay_with_item_id, reg0, ":selected_item_id"),
        (position_set_x, pos1, 53),
        (position_set_y, pos1, 176),
        (overlay_set_position, reg0, pos1),
        (assign, "$g_inside_obj_9", reg0),
      (else_try),
        (create_image_button_overlay, "$g_presentation_obj_item_select_9", "mesh_mp_inventory_slot_horse", "mesh_mp_inventory_slot_horse"),
      (try_end),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, "$g_presentation_obj_item_select_9", pos1),
      (position_set_x, pos1, 2),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_item_select_9", pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_left"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 14),
      (overlay_set_position, reg0, pos1),

      (create_mesh_overlay, reg0, "mesh_mp_inventory_right"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg0, pos1),
      (position_set_x, pos1, 894),
      (position_set_y, pos1, 65),
      (overlay_set_position, reg0, pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_10", "str_reset_to_default", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_10", 0xFFFFFF),
      (position_set_x, pos1, 605),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_10", pos1),

      (create_in_game_button_overlay, "$g_presentation_obj_item_select_11", "str_done", 0),
      (overlay_set_color, "$g_presentation_obj_item_select_11", 0xFFFFFF),
      (position_set_x, pos1, 395),
      (position_set_y, pos1, 25),
      (overlay_set_position, "$g_presentation_obj_item_select_11", pos1),

      (assign, ":cur_y", 725),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_team_no, ":my_team_no", ":my_player_no"),
      (assign, ":has_bots", 0),
      (try_begin),
        (eq, ":my_team_no", 0),
        (try_begin),
          (gt, "$g_multiplayer_num_bots_team_1", 0),
          (assign, ":has_bots", 1),
        (try_end),
      (else_try),
        (try_begin),
          (gt, "$g_multiplayer_num_bots_team_2", 0),
          (assign, ":has_bots", 1),
        (try_end),
      (try_end),
      (team_get_faction, ":my_faction_no", ":my_team_no"),

      (try_begin),
        (eq, ":has_bots", 1),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_deathmatch),
        (neq, "$g_multiplayer_game_type", multiplayer_game_type_duel),

        (assign, ":num_lines", 0),
        (try_begin),
          (eq, ":has_bots", 1),
          (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
            (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
            (eq, ":ai_troop_faction", ":my_faction_no"),
            (val_add, ":num_lines", 1),
          (try_end),
        (try_end),

        (store_mul, ":board_height", ":num_lines", 20),
        (val_add, ":board_height", 40),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_r"),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 680),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2500),
        (position_set_y, pos1, 2500),
        (overlay_set_size, reg0, pos1),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_border_l"),
        (position_set_x, pos1, 650),
        (position_set_y, pos1, 680),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 2500),
        (position_set_y, pos1, 2500),
        (overlay_set_size, reg0, pos1),

        (create_mesh_overlay, reg0, "mesh_mp_ui_command_panel"),
        (position_set_x, pos1, 350),
        (store_sub, ":board_pos_y", 750, ":board_height"),
        (position_set_y, pos1, ":board_pos_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 3000),
        (position_set_y, pos1, 3000),
        (overlay_set_size, reg0, pos1),

         (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
          (multiplayer_get_my_troop, ":troop_no"),
#          (neq, ":troop_no", ":selected_troop_no"),

       (this_or_next|eq, ":troop_no", "trp_mercenario1"),
       (this_or_next|eq, ":troop_no", "trp_mercenario2"),
       (this_or_next|eq, ":troop_no", "trp_mercenario3"),
       (this_or_next|eq, ":troop_no", "trp_mercenario4"),
       (this_or_next|eq, ":troop_no", "trp_mercenario5"),
       (this_or_next|eq, ":troop_no", "trp_capitan1"),
       (this_or_next|eq, ":troop_no", "trp_capitan2"),
       (this_or_next|eq, ":troop_no", "trp_capitan3"),
       (this_or_next|eq, ":troop_no", "trp_capitan4"),
       (this_or_next|eq, ":troop_no", "trp_capitan5"),
       (this_or_next|eq, ":troop_no", "trp_capitan6"),
       (this_or_next|eq, ":troop_no", "trp_capitan7"),
       (this_or_next|eq, ":troop_no", "trp_capitan8"),
       (this_or_next|eq, ":troop_no", "trp_capitan9"),
       (this_or_next|eq, ":troop_no", "trp_capitan10"),
       (this_or_next|eq, ":troop_no", "trp_capitan11"),
       (this_or_next|eq, ":troop_no", "trp_capitan12"),
       (this_or_next|eq, ":troop_no", "trp_capitan13"),
       (this_or_next|eq, ":troop_no", "trp_capitan14"),
       (this_or_next|eq, ":troop_no", "trp_capitan15"),
       (this_or_next|eq, ":troop_no", "trp_capitan16"),
       (this_or_next|eq, ":troop_no", "trp_capitan17"),
       (this_or_next|eq, ":troop_no", "trp_capitan18"),
       (this_or_next|eq, ":troop_no", "trp_capitan19"),
       (this_or_next|eq, ":troop_no", "trp_capitan20"),
       (this_or_next|eq, ":troop_no", "trp_capitan21"),
       (this_or_next|eq, ":troop_no", "trp_capitan22"),
       (this_or_next|eq, ":troop_no", "trp_capitan23"),
       (this_or_next|eq, ":troop_no", "trp_capitan24"),
       (this_or_next|eq, ":troop_no", "trp_capitan25"),
       (this_or_next|eq, ":troop_no", "trp_capitan26"),
       (this_or_next|eq, ":troop_no", "trp_capitan27"),
       (this_or_next|eq, ":troop_no", "trp_capitan28"),
       (this_or_next|eq, ":troop_no", "trp_capitan29"),
       (this_or_next|eq, ":troop_no", "trp_capitan30"),
       (eq, ":troop_no", "trp_capitan31"),

                (create_text_overlay, reg0, "str_buy_tropas", 0),
	 (else_try),
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
        (create_text_overlay, reg0, "str_nopuedes_comprar", 0),
	 (else_try),
        (create_text_overlay, reg0, "str_command", 0),
         (try_end), #chief capitan acaba

        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 370),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (val_sub, ":cur_y", 20),

        (assign, ":cur_ai_troop_index", 0),
        (try_for_range, ":ai_troop_no", multiplayer_ai_troops_begin, multiplayer_ai_troops_end),
          (store_troop_faction, ":ai_troop_faction", ":ai_troop_no"),
          (eq, ":ai_troop_faction", ":my_faction_no"),

         (try_begin), #chief capitan
                (eq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
          (multiplayer_get_my_troop, ":troop_no"),
#          (neq, ":troop_no", ":selected_troop_no"),

       (this_or_next|eq, ":troop_no", "trp_mercenario1"),
       (this_or_next|eq, ":troop_no", "trp_mercenario2"),
       (this_or_next|eq, ":troop_no", "trp_mercenario3"),
       (this_or_next|eq, ":troop_no", "trp_mercenario4"),
       (this_or_next|eq, ":troop_no", "trp_mercenario5"),
       (this_or_next|eq, ":troop_no", "trp_capitan1"),
       (this_or_next|eq, ":troop_no", "trp_capitan2"),
       (this_or_next|eq, ":troop_no", "trp_capitan3"),
       (this_or_next|eq, ":troop_no", "trp_capitan4"),
       (this_or_next|eq, ":troop_no", "trp_capitan5"),
       (this_or_next|eq, ":troop_no", "trp_capitan6"),
       (this_or_next|eq, ":troop_no", "trp_capitan7"),
       (this_or_next|eq, ":troop_no", "trp_capitan8"),
       (this_or_next|eq, ":troop_no", "trp_capitan9"),
       (this_or_next|eq, ":troop_no", "trp_capitan10"),
       (this_or_next|eq, ":troop_no", "trp_capitan11"),
       (this_or_next|eq, ":troop_no", "trp_capitan12"),
       (this_or_next|eq, ":troop_no", "trp_capitan13"),
       (this_or_next|eq, ":troop_no", "trp_capitan14"),
       (this_or_next|eq, ":troop_no", "trp_capitan15"),
       (this_or_next|eq, ":troop_no", "trp_capitan16"),
       (this_or_next|eq, ":troop_no", "trp_capitan17"),
       (this_or_next|eq, ":troop_no", "trp_capitan18"),
       (this_or_next|eq, ":troop_no", "trp_capitan19"),
       (this_or_next|eq, ":troop_no", "trp_capitan20"),
       (this_or_next|eq, ":troop_no", "trp_capitan21"),
       (this_or_next|eq, ":troop_no", "trp_capitan22"),
       (this_or_next|eq, ":troop_no", "trp_capitan23"),
       (this_or_next|eq, ":troop_no", "trp_capitan24"),
       (this_or_next|eq, ":troop_no", "trp_capitan25"),
       (this_or_next|eq, ":troop_no", "trp_capitan26"),
       (this_or_next|eq, ":troop_no", "trp_capitan27"),
       (this_or_next|eq, ":troop_no", "trp_capitan28"),
       (this_or_next|eq, ":troop_no", "trp_capitan29"),
       (this_or_next|eq, ":troop_no", "trp_capitan30"),
       (eq, ":troop_no", "trp_capitan31"),

          (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 377),
          (store_add, ":special_cur_y", ":cur_y", 2),
          (position_set_y, pos1, ":special_cur_y"),
          (overlay_set_position, reg0, pos1),
          (try_begin),
            (eq, ":cur_ai_troop_index", 0),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
            (assign, "$g_presentation_obj_item_select_13", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 1),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
            (assign, "$g_presentation_obj_item_select_14", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 2),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
            (assign, "$g_presentation_obj_item_select_15", reg0),
          (else_try),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
            (assign, "$g_presentation_obj_item_select_16", reg0),
          (try_end),

          (str_store_troop_name, s0, ":ai_troop_no"),
          (create_text_overlay, reg0, "str_s0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 397),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
          (val_add, ":cur_ai_troop_index", 1),
      (try_end), #chief capitan acaba

          (try_begin),
               (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
          (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 377),
          (store_add, ":special_cur_y", ":cur_y", 2),
          (position_set_y, pos1, ":special_cur_y"),
          (overlay_set_position, reg0, pos1),
          (try_begin),
            (eq, ":cur_ai_troop_index", 0),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
            (assign, "$g_presentation_obj_item_select_13", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 1),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
            (assign, "$g_presentation_obj_item_select_14", reg0),
          (else_try),
            (eq, ":cur_ai_troop_index", 2),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
            (assign, "$g_presentation_obj_item_select_15", reg0),
          (else_try),
            (overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
            (assign, "$g_presentation_obj_item_select_16", reg0),
          (try_end),

          (str_store_troop_name, s0, ":ai_troop_no"),
          (create_text_overlay, reg0, "str_s0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, 397),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
          (val_add, ":cur_ai_troop_index", 1),
         (try_end), #chief capitan acaba

#          (create_check_box_overlay, reg0, "mesh_checkbox_off", "mesh_checkbox_on"),
##          (position_set_x, pos1, 800),
##          (position_set_y, pos1, 800),
##          (overlay_set_size, reg0, pos1),
##          (position_set_x, pos1, 377),
##          (store_add, ":special_cur_y", ":cur_y", 2),
##          (position_set_y, pos1, ":special_cur_y"),
##          (overlay_set_position, reg0, pos1),
##          (try_begin),
##            (eq, ":cur_ai_troop_index", 0),
##            (overlay_set_val, reg0, "$g_multiplayer_bot_type_1_wanted"),
##            (assign, "$g_presentation_obj_item_select_13", reg0),
##          (else_try),
##            (eq, ":cur_ai_troop_index", 1),
##            (overlay_set_val, reg0, "$g_multiplayer_bot_type_2_wanted"),
##            (assign, "$g_presentation_obj_item_select_14", reg0),
##          (else_try),
##            (eq, ":cur_ai_troop_index", 2),
##            (overlay_set_val, reg0, "$g_multiplayer_bot_type_3_wanted"),
##            (assign, "$g_presentation_obj_item_select_15", reg0),
##          (else_try),
##            (overlay_set_val, reg0, "$g_multiplayer_bot_type_4_wanted"),
##            (assign, "$g_presentation_obj_item_select_16", reg0),
##          (try_end),
##
##          (str_store_troop_name, s0, ":ai_troop_no"),
##          (create_text_overlay, reg0, "str_s0", 0),
##          (overlay_set_color, reg0, 0xFFFFFF),
##          (position_set_x, pos1, 800),
##          (position_set_y, pos1, 800),
##          (overlay_set_size, reg0, pos1),
##          (position_set_x, pos1, 397),
##          (position_set_y, pos1, ":cur_y"),
##          (overlay_set_position, reg0, pos1),
##          (val_sub, ":cur_y", 20),
##          (val_add, ":cur_ai_troop_index", 1),
        (try_end),
        (val_sub, ":cur_y", 20),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_gold, ":player_gold", ":my_player_no"),
      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
      (create_text_overlay, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0", tf_left_align|tf_single_line|tf_with_outline),
      (try_begin),
        (ge, ":player_gold", reg0),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
      (else_try),
        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
      (try_end),
      (position_set_x, pos1, 680),
      (position_set_y, pos1, 652),
      (overlay_set_position, "$g_presentation_obj_item_select_12", pos1),
      
      (store_add, "$g_presentation_obj_item_select_next", "$g_presentation_obj_item_select_12", 1),

      (player_get_troop_id, ":my_troop_no", ":my_player_no"),
      (try_begin),
        (eq, "$g_presentation_state", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 474),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 515),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 2),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 374),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 415),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 3),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 274),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 315),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 4),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_weapons_begin, multi_item_class_type_weapons_end, 781, 174),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_right_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 881),
        (position_set_y, pos1, 215),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 5),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_heads_begin, multi_item_class_type_heads_end, 117, 524),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 565),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 6),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_bodies_begin, multi_item_class_type_bodies_end, 117, 424),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 465),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 7),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_feet_begin, multi_item_class_type_feet_end, 117, 324),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 365),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 8),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_gloves_begin, multi_item_class_type_gloves_end, 117, 224),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 265),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (eq, "$g_presentation_state", 9),
        (eq, "$g_horses_are_avaliable", 1),
        (call_script, "script_multiplayer_display_available_items_for_troop_and_item_classes", ":my_troop_no", multi_item_class_type_horses_begin, multi_item_class_type_horses_end, 117, 124),
        (create_mesh_overlay, reg0, "mesh_mp_inventory_left_arrow"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 106),
        (position_set_y, pos1, 165),
        (overlay_set_position, reg0, pos1),
      (try_end),
      (presentation_set_duration, 999999),
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),

        (try_begin),
          (eq, "$g_close_equipment_selection", 0),
          (try_begin),
            (eq, ":enter_leave", 0),

            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (store_mod, ":mod_value", ":tested_object", 2),
              (store_sub, ":mod_value", 1, ":mod_value"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

              (assign, ":target_obj", ":object"),
              (val_add, ":target_obj", ":mod_value"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (ge, ":item_no", 0),
              (overlay_get_position, pos0, ":target_obj"),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_troop_id, ":my_player_troop_no", ":my_player_no"),
              (try_begin),
                (call_script, "script_cf_multiplayer_is_item_default_for_troop", ":item_no", ":my_player_troop_no"),
                (show_item_details, ":item_no", pos0, 0),
              (else_try),
                (store_troop_faction, ":my_player_faction_no", ":my_player_troop_no"),
                (store_sub, ":faction_slot", ":my_player_faction_no", npc_kingdoms_begin),
                (val_add, ":faction_slot", slot_item_multiplayer_faction_price_multipliers_begin),
                (item_get_slot, ":price_multiplier", ":item_no", ":faction_slot"),
                (show_item_details, ":item_no", pos0, ":price_multiplier"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":item_no"),
            (try_end),
          (else_try),
            (assign, ":item_no", -1), 
            (try_begin),
              (ge, ":object", "$g_presentation_obj_item_select_next"),
              (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
              (val_div, ":tested_object", 2),
              (store_add, ":cur_slot", multi_data_item_button_indices_begin, ":tested_object"),
              (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 1),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_1"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 2),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_2"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 3),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_3"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 4),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_4"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 5),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_5"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 6),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_6"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 7),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_7"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 8),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),   
              (assign, ":target_obj", "$g_inside_obj_8"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, 9),
              (val_sub, ":player_slot_index", 1),
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_slot, ":item_no", ":my_player_no", ":player_slot_index"),
              (assign, ":target_obj", "$g_inside_obj_9"),
            (try_end),

            (try_begin),
              (eq, "$g_current_opened_item_details", ":item_no"),
              (close_item_details),
              (assign, "$g_current_opened_item_details", -1),
            (try_end),
          (try_end),
        (else_try),
          (assign, "$g_close_equipment_selection", 0),
          (presentation_set_duration, 0),
        (try_end),
      ]),
        
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),
      (multiplayer_get_my_player, ":my_player_no"),
      (player_get_troop_id, ":my_troop_no", ":my_player_no"),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, "$g_presentation_state", 0),
          (try_begin),
            (eq, ":object", "$g_presentation_obj_item_select_1"),
            (assign, "$g_presentation_state", 1),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_2"),
            (assign, "$g_presentation_state", 2),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_3"),
            (assign, "$g_presentation_state", 3),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_4"),
            (assign, "$g_presentation_state", 4),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_5"),
            (assign, "$g_presentation_state", 5),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_6"),
            (assign, "$g_presentation_state", 6),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_7"),
            (assign, "$g_presentation_state", 7),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_8"),
            (assign, "$g_presentation_state", 8),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (else_try),
            (eq, ":object", "$g_presentation_obj_item_select_9"),
            (eq, "$g_horses_are_avaliable", 1),
            (assign, "$g_presentation_state", 9),
            (presentation_set_duration, 0),
            (start_presentation, "prsnt_multiplayer_item_select"),
          (try_end),
        (else_try),
          (gt, "$g_presentation_state", 0),        
          (store_sub, ":tested_object", ":object", "$g_presentation_obj_item_select_next"),
          (val_div, ":tested_object", 2),
          (assign, ":end_cond", multi_data_item_button_indices_end),
          (try_for_range, ":cur_slot", multi_data_item_button_indices_begin, ":end_cond"),
            (neg|troop_slot_eq, "trp_multiplayer_data", ":cur_slot", -1),
            (store_sub, ":button_id", ":cur_slot", multi_data_item_button_indices_begin),
            (eq, ":tested_object", ":button_id"),
            (troop_get_slot, ":item_no", "trp_multiplayer_data", ":cur_slot"),

            (store_add, ":player_slot_index", slot_player_selected_item_indices_begin, "$g_presentation_state"),
            (val_sub, ":player_slot_index", 1),
            (player_set_slot, ":my_player_no", ":player_slot_index", ":item_no"),

            (player_get_gold, ":player_gold", ":my_player_no"),
            (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),
            (overlay_set_text, "$g_presentation_obj_item_select_12", "str_total_item_cost_reg0"),
            (try_begin),
              (ge, ":player_gold", reg0),
              (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
            (else_try),
              (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
            (try_end),
        
            (assign, ":end_cond", 0), #break
          (try_end),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (try_end),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_item_select_10"),
          (call_script, "script_multiplayer_set_default_item_selections_for_troop", ":my_troop_no"),
          (presentation_set_duration, 0),
          (assign, "$g_presentation_state", 0),
          (start_presentation, "prsnt_multiplayer_item_select"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_11"),
          (call_script, "script_multiplayer_send_item_selections"),
          (presentation_set_duration, 0),

          (try_begin),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (gt, "$g_multiplayer_number_of_respawn_count", 0),
          
              (ge, "$g_my_spawn_count", "$g_multiplayer_number_of_respawn_count"),
         
              (multiplayer_get_my_player, ":my_player_no"),
              (player_get_team_no, ":my_player_team", ":my_player_no"),

              (this_or_next|eq, ":my_player_team", 0),
              (ge, "$g_my_spawn_count", 999),
        
              (assign, "$g_show_no_more_respawns_remained", 1),
            (else_try),
              (assign, "$g_show_no_more_respawns_remained", 0),
            (try_end),

            (eq, "$g_show_no_more_respawns_remained", 1),

            (store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
            (start_presentation, "prsnt_multiplayer_respawn_time_counter"),
          (try_end),      
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_13"),
          (assign, "$g_multiplayer_bot_type_1_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_1_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_14"),
          (assign, "$g_multiplayer_bot_type_2_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_2_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_15"),
          (assign, "$g_multiplayer_bot_type_3_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_3_wanted, ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_item_select_16"),
          (assign, "$g_multiplayer_bot_type_4_wanted", ":value"),
          (multiplayer_send_2_int_to_server, multiplayer_event_set_bot_selection, slot_player_bot_type_4_wanted, ":value"),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    
    (ti_on_presentation_mouse_press,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":mouse_state"),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (eq, ":mouse_state", 1), #right click (clears the item slot)
          (try_begin),
            (eq, "$g_presentation_state", 0),
            (multiplayer_get_my_player, ":my_player_no"),
            (try_begin),
              (eq, ":object", "$g_presentation_obj_item_select_1"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 0),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_2"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 1),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_3"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 2),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_4"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 3),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_5"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 4),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_6"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 5),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_7"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 6),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_8"),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 7),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (else_try),
              (eq, ":object", "$g_presentation_obj_item_select_9"),
              (eq, "$g_horses_are_avaliable", 1),
              (store_add, ":selected_item_index", slot_player_selected_item_indices_begin, 8),
              (player_set_slot, ":my_player_no", ":selected_item_index", -1),
              (presentation_set_duration, 0),
              (assign, "$g_presentation_state", 0),
              (start_presentation, "prsnt_multiplayer_item_select"),
            (try_end),
          (else_try),
            (gt, "$g_presentation_state", 0),
            (presentation_set_duration, 0),
            (assign, "$g_presentation_state", 0),
            (start_presentation, "prsnt_multiplayer_item_select"),      
          (try_end),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        (presentation_set_duration, 0),
      (try_end),      
      ]),
    
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),

## this causes an error sometimes
##      (multiplayer_get_my_player, ":my_player_no"),
##      (player_get_gold, ":player_gold", ":my_player_no"),
##      (call_script, "script_multiplayer_calculate_cur_selected_items_cost", ":my_player_no", 1),      
##      (try_begin),
##        (ge, ":player_gold", reg0),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFFFFFF),
##      (else_try),
##        (overlay_set_color, "$g_presentation_obj_item_select_12", 0xFF0000),
##      (try_end),

      (try_begin),
        (eq, "$g_close_equipment_selection", 0),
        (try_begin),
          (this_or_next|key_clicked, key_escape),
		  (key_clicked, key_xbox_start),
          (try_begin),
            (neq, "$g_current_opened_item_details", -1),
            (close_item_details),
            (assign, "$g_current_opened_item_details", -1),
          (try_end),
          (gt, ":cur_time", 200),
          (presentation_set_duration, 0),
        (try_end),
      (else_try),
        (assign, "$g_close_equipment_selection", 0),
        #daha sonra buraya siege modundaysa ve takimini yeni degistirdigi icin spawn olamiyorsa start_presentation, spawn_counter satirini ekle sdsd.
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_message_1", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_battle_mode),
        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin),
          (eq, ":winner_agent_team", -1),
          (assign, ":text_font_color", 0xFFFFFFFF),

          (str_store_string, s0, "str_round_draw_no_one_remained"),
        (else_try),
          (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
            (eq, ":winner_agent_team", 0),
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end), #initializing ends
          (try_begin),
            (lt, "$my_team_at_start_of_round", 2),
            (try_begin),
              (eq, "$my_team_at_start_of_round", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        #(try_end), #chief off por 1143 de warband

          (team_get_faction, ":faction_of_winner_team", ":winner_agent_team"),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
          (str_store_string, s0, "str_s1_won_round"),
        (try_end),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, ":winner_agent_team", -1),
          (position_set_x, pos1, 375), #375
        (else_try),
          (position_set_x, pos1, 400), #400
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_score),

        (agent_get_team, ":winner_agent_team", "$g_multiplayer_message_value_1"), #assign given agent's team to winner agent team.
        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),      

        (str_store_string, s0, "str_s1_captured_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_returned_home),

        (try_begin),
          (ge, "$g_multiplayer_message_value_1", 0),
          (agent_get_team, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"), 
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_returned_flag"),
        (else_try),
          (val_add, "$g_multiplayer_message_value_1", 1),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":returned_flag_agent_team", "$g_multiplayer_message_value_1"),
          (team_get_faction, ":returned_flag_agent_faction", ":returned_flag_agent_team"),
          (str_store_faction_name, s1, ":returned_flag_agent_faction"),
          (str_store_string, s0, "str_s1_auto_returned_flag"),
        (try_end),

        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),
      (assign, ":text_font_color", 0xFFFFFFFF),

        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 325),
        (position_set_y, pos1, 400),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_capture_the_flag_stole),

        (agent_get_team, ":stolen_flag_agent_team", "$g_multiplayer_message_value_1"), 
        (team_get_faction, ":stolen_flag_agent_faction", ":stolen_flag_agent_team"),
        (str_store_faction_name, s1, ":stolen_flag_agent_faction"),

        (assign, ":text_font_color", 0xFFFFFFFF),
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":stolen_flag_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),

        (str_store_string, s0, "str_s1_taken_flag"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 365),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_captured),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
              (play_sound, "snd_team_scored_a_point"),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
              (play_sound, "snd_enemy_scored_a_point"),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_captured_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_is_pulling),
      
        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (play_sound, "snd_enemy_flag_taken"),
            (else_try),
              (play_sound, "snd_your_flag_taken"),
            (try_end),
          (try_end),
        (try_end),
      
        (assign, ":text_font_color", 0xFFFFFFFF),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),      

        (str_store_string, s0, "str_s1_pulling_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_flag_neutralized),      

        (store_div, ":winner_agent_team", "$g_multiplayer_message_value_1", 100),
        (store_mod, reg0, "$g_multiplayer_message_value_1", 100),
        (val_sub, ":winner_agent_team", 1),
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (play_sound, "snd_flag_returned"),
          (try_end),
        (try_end),
      
        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (team_get_faction, ":winner_agent_faction", ":winner_agent_team"),
        (str_store_faction_name, s1, ":winner_agent_faction"),

        (str_store_string, s0, "str_s1_neutralized_flag_reg0"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 345),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),     
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),      

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 0),
          (str_store_string, s0, "str_s1_defended_castle"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_captured_castle"),
        (else_try),
          (str_store_string, s0, "str_round_draw"),
          (assign, ":text_font_color", 0xFFFFFFFF),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (try_begin),
          (neq, "$g_multiplayer_message_value_1", -1),
          (position_set_x, pos1, 325),
        (else_try),
          (position_set_x, pos1, 400),
        (try_end),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_draw),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_round_draw"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_start_death_mode),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_death_mode_started"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_start_capitan_mode), #chief capitan
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (try_begin),
          (eq, "$g_round_tropas", 0), #chief capitan      
       (str_store_string, s0, "str_capitan_mode_started"),
      (else_try),
          (eq, "$g_round_tropas", 1), #chief capitan      
        (str_store_string, s0, "str_capitan_mode_started2"),
         (try_end),
       (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_target_destroyed),

        (try_begin),
          (lt, "$g_multiplayer_message_value_1", 0),
          (val_mul, "$g_multiplayer_message_value_1", -1),
          (assign, ":scene_prop_team", 0),

          (team_get_faction, ":faction_of_winner_team", 1),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (else_try),
          (assign, ":scene_prop_team", 1),

          (team_get_faction, ":faction_of_winner_team", 0),
          (str_store_faction_name, s1, ":faction_of_winner_team"),
        (try_end),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_multiplayer_message_value_1", 1),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (player_get_team_no, ":my_team_no", ":my_player_no"),
            (neq, ":scene_prop_team", ":my_team_no"), #if scene prop and I have different teams this means we won
            (assign, ":text_font_color", 0xFF33DD11),
          (else_try),
            (assign, ":text_font_color", 0xFFFF4422),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_multiplayer_message_value_1", 9),
          (str_store_string, s0, "str_s1_destroyed_all_targets"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 1),
          (str_store_string, s0, "str_s1_destroyed_catapult"),
        (else_try),
          (eq, "$g_multiplayer_message_value_1", 2),
          (str_store_string, s0, "str_s1_destroyed_trebuchet"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_defenders_saved_n_targets),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, "$g_defender_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", "$g_defender_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (assign, ":num_targets_saved", "$g_multiplayer_message_value_1"),

        (team_get_faction, ":faction_of_winner_team", "$g_defender_team"),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (try_begin),
          (eq, ":num_targets_saved", 1),
          (str_store_string, s0, "str_s1_saved_1_target"),
        (else_try),
          (eq, ":num_targets_saved", 2),
          (str_store_string, s0, "str_s1_saved_2_targets"),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_attackers_won_the_round),

        (assign, ":winner_agent_team", "$g_multiplayer_message_value_1"),

        (try_begin), #for spectators initializing, we assume spectators are fan of team0 so coloring is applied as they are at team0.
          (eq, ":winner_agent_team", 0),
          (assign, ":text_font_color", 0xFF33DD11),
        (else_try),
          (assign, ":text_font_color", 0xFFFF4422),
        (try_end), #initializing ends
        (multiplayer_get_my_player, ":my_player_no"),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_agent_id, ":my_player_agent", ":my_player_no"),
          (try_begin),
            (ge, ":my_player_agent", 0),
            (agent_get_team, ":my_player_team", ":my_player_agent"),
            (try_begin),
              (eq, ":my_player_team", ":winner_agent_team"),
              (assign, ":text_font_color", 0xFF33DD11),
            (else_try),
              (assign, ":text_font_color", 0xFFFF4422),
            (try_end),
          (try_end),
        (try_end),

        (try_begin),
          (eq, "$g_defender_team", 0),
          (team_get_faction, ":faction_of_winner_team", 1),
        (else_try),
          (team_get_faction, ":faction_of_winner_team", 0),
        (try_end),
        (str_store_faction_name, s1, ":faction_of_winner_team"),

        (str_store_string, s0, "str_s1_won_round"),
        (create_text_overlay, "$g_multiplayer_message_1", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_1", ":text_font_color"),
        (position_set_x, pos1, 350),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_multiplayer_message_1", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_1", pos1),
        (presentation_set_duration, 400),      
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_message_2", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_done),
        (assign, ":text_font_color", 0xFFFFFFFF),
        (str_store_string, s0, "str_auto_team_balance_done"),
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_x, pos1, 375),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (else_try),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_auto_team_balance_next),
        (assign, ":text_font_color", 0xFFFFFFFF),

        (try_begin),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_battle),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_lords_battle), #chief capitan
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_destroy),
          (neq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
          (str_store_string, s0, "str_auto_team_balance_in_20_seconds"),
          (position_set_x, pos1, 375),
        (else_try),
          (str_store_string, s0, "str_auto_team_balance_next_round"),
          (position_set_x, pos1, 375),
        (try_end),
      
        (create_text_overlay, "$g_multiplayer_message_2", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_2", ":text_font_color"),
        (position_set_y, pos1, 550),
        (position_set_x, pos1, 500), #new
        (overlay_set_position, "$g_multiplayer_message_2", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_2", pos1),
        (presentation_set_duration, 300),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),
      
  ("multiplayer_message_3", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),      
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_poll_result),
      
        (assign, ":text_font_color", 0xFFFFFFFF),
        (try_begin),
          (eq, "$g_multiplayer_message_value_3", 1),
          (str_store_string, s0, "str_poll_result_yes"),
        (else_try),
          (str_store_string, s0, "str_poll_result_no"),
        (try_end),
        (create_text_overlay, "$g_multiplayer_message_3", s0, tf_center_justify|tf_with_outline),
        (overlay_set_color, "$g_multiplayer_message_3", ":text_font_color"),
        (position_set_x, pos1, 380),
        (position_set_x, pos1, 500), #new
        (position_set_y, pos1, 475),
        (overlay_set_position, "$g_multiplayer_message_3", pos1),
        (position_set_x, pos1, 2000),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_multiplayer_message_3", pos1),
        (presentation_set_duration, 400),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [
       ]),
     ]),

  ("multiplayer_round_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_last_round_time_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_round_time_counter_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_round_time_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 690),
      (overlay_set_position, "$g_multiplayer_round_time_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_round_time_counter_overlay", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_round", ":current_time", "$g_round_start_time"),
      (store_sub, ":seconds_left_in_round", "$g_multiplayer_round_max_seconds", ":seconds_past_in_round"),
      (val_max, ":seconds_left_in_round", 0),
      (try_begin),
        (neq, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (assign, "$g_multiplayer_last_round_time_counter_value", ":seconds_left_in_round"),
        (store_div, reg0, ":seconds_left_in_round", 60),
        (store_div, reg1, ":seconds_left_in_round", 10),
        (val_mod, reg1, 6),
        (assign, reg2, ":seconds_left_in_round"),
        (val_mod, reg2, 10),
        (str_store_string, s0, "str_reg0_dd_reg1reg2"),
        (overlay_set_text, "$g_multiplayer_round_time_counter_overlay", s0),
      (try_end),
      ]),
    ]),

  ("multiplayer_team_score_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),
      (assign, "$g_multiplayer_team_1_last_displayed_score", -1),
      (assign, "$g_multiplayer_team_2_last_displayed_score", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_team_1_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_1_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 700),
      (overlay_set_position, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_1_score_display_overlay", pos1),
      (create_text_overlay, "$g_multiplayer_team_2_score_display_overlay", s0, tf_left_align|tf_single_line|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_team_2_score_display_overlay", 0xFFFFFF),
      (position_set_x, pos1, 40),
      (position_set_y, pos1, 645),
      (overlay_set_position, "$g_multiplayer_team_2_score_display_overlay", pos1),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, "$g_multiplayer_team_2_score_display_overlay", pos1),

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
#chiefamplia multiplayer chief
      (else_try),
       (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_7"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_8"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_8"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_9"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_9"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_10"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_10"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_11"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_12"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_12"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_13"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_13"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_14"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_14"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_15"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_15"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_16"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_16"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_17"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_17"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_18"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_18"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_19"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_19"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_20"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_20"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_21"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_21"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_22"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_22"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_23"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_23"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_24"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_24"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_25"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_25"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_26"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_26"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_27"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_27"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_28"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_28"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_29"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_29"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_30"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_30"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_31"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_31"),
      (else_try),
        (eq, "$g_multiplayer_team_1_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
#chief acaba
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 715),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (try_begin),
        (eq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_4"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_2"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_3"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_5"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_6"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
#chief amplia multiplayer chief
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_7"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_8"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_8"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_9"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_9"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_10"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_10"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_11"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_12"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_12"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_13"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_13"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_14"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_14"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_15"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_15"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_16"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_16"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_17"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_17"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_18"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_18"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_19"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_19"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_20"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_20"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_21"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_21"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_22"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_22"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_23"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_23"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_24"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_24"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_25"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_25"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_26"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_26"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_27"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_27"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_28"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_28"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_29"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_29"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_30"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_30"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_31"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_31"),
      (else_try),
        (eq, "$g_multiplayer_team_2_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
#chief acaba
      (try_end),

      (position_set_x, pos3, 25),
      (position_set_y, pos3, 660),
      (overlay_set_position, reg0, pos3),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),      

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (team_get_score, ":team_1_score", 0),
      (team_get_score, ":team_2_score", 1),
      (try_begin),
        (this_or_next|neq, ":team_1_score", "$g_multiplayer_team_1_last_displayed_score"),
        (neq, ":team_2_score", "$g_multiplayer_team_2_last_displayed_score"),
        (assign, "$g_multiplayer_team_1_last_displayed_score", ":team_1_score"),
        (assign, "$g_multiplayer_team_2_last_displayed_score", ":team_2_score"),
      
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (assign, reg0, ":team_1_score"),
        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_reg0"),
        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
        (assign, reg0, ":team_2_score"),
        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_reg0"),

##        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
##        (assign, reg0, ":team_1_score"),
##        (overlay_set_text, "$g_multiplayer_team_1_score_display_overlay", "str_s0_dd_reg0"),
##        (str_store_faction_name, s0, "$g_multiplayer_team_2_faction"),
##        (assign, reg0, ":team_2_score"),
##        (overlay_set_text, "$g_multiplayer_team_2_score_display_overlay", "str_s0_dd_reg0"),
      (try_end),
      ]),
    ]),


  ("multiplayer_flag_projection_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, 
    [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
      (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),
      
      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (val_sub, ":flag_mesh", multiplayer_flag_projections_begin),
        (val_add, ":flag_mesh", multiplayer_flag_taken_projections_begin),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),
        (assign, ":flag_mesh", "mesh_flag_project_rb_miss"),
        (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_4", ":flag_mesh"),      
      (try_end),
      
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_4", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (presentation_set_duration, 999999),
      ]),
      
    (ti_on_presentation_run, 
    [
      (set_fixed_point_multiplier, 1000),
      
      (scene_prop_get_instance, ":flag_red_id", "$team_1_flag_scene_prop", 0),      
      (team_get_slot, ":team_0_flag_situation", 0, slot_team_flag_situation),      
      (try_begin),
        (neq, ":team_0_flag_situation", 1),
        (prop_instance_get_position, pos1, ":flag_red_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos1, multi_base_point_team_1), #moved from above to here after auto-set position      
      (try_end),            
      (position_move_z, pos1, 200, 1),
      
      (scene_prop_get_instance, ":flag_blue_id", "$team_2_flag_scene_prop", 0),      
      (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),            
      (try_begin),
        (neq, ":team_1_flag_situation", 1),
        (prop_instance_get_position, pos2, ":flag_blue_id"), #hold position of flag of team 1 (red flag) at pos1
      (else_try),
        (entry_point_get_position, pos2, multi_base_point_team_2), #moved from above to here after auto-set position      
      (try_end),      
      (position_move_z, pos2, 200, 1),
            
      (position_get_screen_projection, pos3, pos1),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 1), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_0_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (else_try), #if our flag is stolen
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),

            (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_0_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
          (try_end),
        (try_end),      
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (try_end),
      
      (position_get_screen_projection, pos3, pos2),
      (position_get_x, ":x_pos", pos3),
      (position_get_y, ":y_pos", pos3),
      (position_set_y, pos3, ":y_pos"),
      (try_begin),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),

        (team_get_slot, ":team_1_flag_situation", 1, slot_team_flag_situation),

        (multiplayer_get_my_player, ":my_player_number"),
        (try_begin),
          (ge, ":my_player_number", 0),
          (player_get_team_no, ":my_player_team", ":my_player_number"),
        (else_try),
          (assign, ":my_player_team", multi_team_spectator),
        (try_end),

        (try_begin),
          (neq, ":my_player_team", 0), #if I am at team 0 or spectator
          (try_begin),
            (neq, ":team_1_flag_situation", 1), #if our flag is not stolen
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (else_try), #if our flag is stolen      
            (try_begin),
              (eq, ":my_player_team", 0), 
              (assign, ":our_base_entry_id", multi_base_point_team_1),
            (else_try), 
              (assign, ":our_base_entry_id", multi_base_point_team_2),
            (try_end),

            (entry_point_get_position, pos5, ":our_base_entry_id"), #moved from above to here after auto-set position
            (position_get_screen_projection, pos3, pos5),
      
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_4", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
          (try_end),
        (else_try),
          (try_begin),
            (neq, ":team_1_flag_situation", 1),
            (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
            (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
          (try_end),
        (try_end),
      (else_try),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (overlay_set_display, "$g_presentation_obj_flag_projection_display_4", 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_flag_projection_display_bt", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),

      (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),

      (try_begin),
        (neq, "$g_multiplayer_team_1_faction", "$g_multiplayer_team_2_faction"),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
        (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (else_try),
        (assign, ":flag_mesh", "mesh_flag_project_rb"),
      (try_end),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_3", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_3", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":flag_1_id", "$team_1_flag_scene_prop", 0),
        (prop_instance_get_position, pos1, ":flag_1_id"), #hold position of flag of team 1 at pos1
        (position_move_z, pos1, 250, 1),
      
        (scene_prop_get_instance, ":flag_2_id", "$team_2_flag_scene_prop", 0),
        (prop_instance_get_position, pos2, ":flag_2_id"), #hold position of flag of team 2 at pos2
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_3", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_3", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_destructible_targets_display", prsntf_read_only|prsntf_manual_end_only, 0, [ #this is for search and destroy death mode flags.
    (ti_on_presentation_load, [
      (set_fixed_point_multiplier, 1000),     

      (try_begin),
        (eq, "$g_defender_team", 0),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_1_faction", npc_kingdoms_begin),
      (else_try),
        (store_sub, ":flag_mesh", "$g_multiplayer_team_2_faction", npc_kingdoms_begin),
      (try_end),
      
      (val_add, ":flag_mesh", multiplayer_flag_projections_begin),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_1", ":flag_mesh"),
      (create_mesh_overlay, "$g_presentation_obj_flag_projection_display_2", ":flag_mesh"),

      (position_set_x, pos1, 250),
      (position_set_y, pos1, 250),

      (overlay_set_size, "$g_presentation_obj_flag_projection_display_1", pos1),
      (overlay_set_size, "$g_presentation_obj_flag_projection_display_2", pos1),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
      (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run, [
      (try_begin),
        (eq, "$g_round_ended", 0),
        (set_fixed_point_multiplier, 1000),
        (scene_prop_get_instance, ":target_1_id", "$g_destructible_target_1", 0),
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (prop_instance_get_position, pos1, ":target_1_id"), 
        (position_move_z, pos1, 250, 1),
        (scene_prop_get_instance, ":target_2_id", "$g_destructible_target_2", 0),
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (prop_instance_get_position, pos2, ":target_2_id"), 
        (position_move_z, pos2, 250, 1),
      
        (position_get_screen_projection, pos3, pos1),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),
      
          (prop_instance_get_starting_position, pos0, ":target_1_id"),
          (prop_instance_get_position, pos1, ":target_1_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_1", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_1", 0),
        (try_end),
      
        (position_get_screen_projection, pos3, pos2),
        (position_get_x, ":x_pos", pos3),
        (position_get_y, ":y_pos", pos3),
        (position_set_y, pos3, ":y_pos"),
        (try_begin),
          (is_between, ":x_pos", -100, 1100),
          (is_between, ":y_pos", -100, 850),

          (prop_instance_get_starting_position, pos0, ":target_2_id"),
          (prop_instance_get_position, pos1, ":target_2_id"),
          (get_sq_distance_between_positions_in_meters, ":dist", pos0, pos1),
          (le, ":dist", 2), #this can be 0 or 1 too.

          (overlay_set_position, "$g_presentation_obj_flag_projection_display_2", pos3),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 1),
        (else_try),
          (overlay_set_display, "$g_presentation_obj_flag_projection_display_2", 0),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_respawn_time_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_respawn_counter_overlay", -1),
      (assign, "$g_multiplayer_respawn_remained_overlay", -1),
      
      (assign, ":do_not_show_respawn_counter", 0),
      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (assign, ":do_not_show_respawn_counter", 1),
      (try_end),
      (eq, ":do_not_show_respawn_counter", 0),

      (assign, "$g_multiplayer_last_respawn_counter_value", -1),
      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_respawn_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_respawn_counter_overlay", pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_respawn_remained_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_respawn_remained_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 570),
      (overlay_set_position, "$g_multiplayer_respawn_remained_overlay", pos1),
      (position_set_x, pos1, 1400),
      (position_set_y, pos1, 1400),
      (overlay_set_size, "$g_multiplayer_respawn_remained_overlay", pos1),

      #(store_mission_timer_a, "$g_multiplayer_respawn_start_time"),
      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_respawn_counter_overlay", 0),
      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (ge, ":my_player_no", 0),
        (player_get_team_no, ":player_team", ":my_player_no"),
        (try_begin),
          (eq, ":player_team", multi_team_spectator),
          (presentation_set_duration, 0),
        (else_try),
          (store_mission_timer_a, ":current_time"),
          (store_sub, ":seconds_past_in_respawn", ":current_time", "$g_multiplayer_respawn_start_time"),
          (try_begin),
            (eq, "$g_show_no_more_respawns_remained", 0),
            (assign, ":total_respawn_time", "$g_multiplayer_respawn_period"),
            (try_begin),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_siege),
              (player_get_team_no, ":player_team", ":my_player_no"),
              (eq, ":player_team", 0),
              (val_add, ":total_respawn_time", multiplayer_siege_mod_defender_team_extra_respawn_time),
            (try_end),
          (else_try),
            (assign, ":total_respawn_time", 6),
          (try_end),
          (store_sub, ":seconds_left_in_respawn", ":total_respawn_time", ":seconds_past_in_respawn"),
          (try_begin),
            (le, ":seconds_left_in_respawn", 0),
            (presentation_set_duration, 0),
          (else_try),
            (neq, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (assign, "$g_multiplayer_last_respawn_counter_value", ":seconds_left_in_respawn"),
            (try_begin),
              (eq, "$g_show_no_more_respawns_remained", 0),
              (assign, reg0, ":seconds_left_in_respawn"),
              (str_store_string, s0, "str_respawning_in_reg0_seconds"),
              (try_begin),
                (gt, "$g_multiplayer_number_of_respawn_count", 0),
                (store_sub, reg0, "$g_multiplayer_number_of_respawn_count", "$g_my_spawn_count"),

                (multiplayer_get_my_player, ":my_player_no"),
                (player_get_team_no, ":my_player_team", ":my_player_no"),
                (eq, ":my_player_team", 0),
      
                (try_begin),
                  (gt, reg0, 1),
                  (str_store_string, s1, "str_reg0_respawns_remained"),
                (else_try),
                  (str_store_string, s1, "str_this_is_your_last_respawn"),
                (try_end),
              (else_try),
                (str_clear, s1),                
              (try_end),
            (else_try),
              (eq, "$g_show_no_more_respawns_remained", 1),
              ##(assign, "$g_informed_about_no_more_respawns_remained", 1),
              (str_store_string, s0, "str_no_more_respawns_remained_this_round"),
              (str_clear, s1),
              (str_store_string, s1, "str_wait_next_round"),
            (try_end),
            (overlay_set_text, "$g_multiplayer_respawn_counter_overlay", s0),
            (overlay_set_text, "$g_multiplayer_respawn_remained_overlay", s1),
          (try_end),
        (try_end),
      (else_try),
        (presentation_set_duration, 0),
      (try_end),

      (try_begin),
        (eq, "$g_multiplayer_message_type", multiplayer_message_type_round_result_in_siege_mode),
        (this_or_next|eq, "$g_round_ended", 1),
        (eq, "$g_flag_is_not_ready", 1),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_stats_chart", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_b"),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 100),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_1_rows", 0),
      (assign, ":team_2_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (eq, ":player_team", 0),
            (val_add, ":team_1_rows", 1),
          (else_try),
            (eq, ":player_team", 1),
            (val_add, ":team_2_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_1", 0),
        (val_add, ":team_1_rows", 1),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_2_rows", 1),
      (try_end),

      (assign, ":total_rows", ":team_1_rows"),
      (val_max, ":total_rows", ":team_2_rows"),
      (val_add, ":total_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 100),
      (position_set_y, pos1, 120),#120
      (overlay_set_position, "$g_presentation_obj_stats_chart_container", pos1),
      (position_set_x, pos1, 746),
      (position_set_y, pos1, 530),#530
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 100),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),       

      (try_begin),
        (gt, ":y_needed", 490),
        (assign, "$g_stats_chart_update_period", 8),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (try_begin), #counting number of flags each team has.
        (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
        (call_script, "script_get_headquarters_scores"),
        (assign, ":team_1_num_flags", reg0),
        (assign, ":team_2_num_flags", reg1),
      (try_end),

      #assuming only 2 teams in scene
      (try_for_range, ":i_team", 0, multi_team_spectator),
        (assign, ":number_of_players", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_team_no, ":team_no", ":player_no"),
          (eq, ":team_no", ":i_team"),
          (val_add, ":number_of_players", 1),
        (try_end),
        (assign, reg0, ":number_of_players"),
        (try_begin),
          (neq, ":number_of_players", 1),
          (create_text_overlay, reg1, "str_reg0_players", 0),
        (else_try),
          (create_text_overlay, reg1, "str_reg0_player", 0),
        (try_end),

        (assign, ":cur_y", ":y_needed"),
        (team_get_faction, ":cur_faction", ":i_team"),
        (str_store_faction_name, s1, ":cur_faction"),
        (create_text_overlay, reg0, s1, 0),
        (try_begin),
          (eq, ":i_team", 0),
          (overlay_set_color, reg0, 0xFF0000),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (overlay_set_color, reg0, 0x0099FF),
          (overlay_set_color, reg1, 0x0099FF),
        (try_end),
        (assign, ":distance_between_teams", 373),
        (store_mul, ":cur_x", ":distance_between_teams", ":i_team"),
        (val_add, ":cur_x", 42),
        (store_add, ":cur_x_add_15", ":cur_x", 15),
        (position_set_x, pos3, ":cur_x_add_15"),
        (position_set_y, pos3, ":cur_y"),
        (store_add, ":cur_x_add_35", ":cur_x", 35),
        (position_set_x, pos1, ":cur_x_add_35"),
        (position_set_y, pos1, ":cur_y"),
        (copy_position, pos2, pos1),
        (store_sub, ":cur_y_sub_10", ":cur_y", 10),
        (position_set_x, pos2, ":cur_x_add_35"),
        (position_set_y, pos2, ":cur_y_sub_10"),
        (overlay_set_position, reg0, pos1),
        (overlay_set_position, reg1, pos2),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (position_set_x, pos2, 600),
        (position_set_y, pos2, 600),
        (overlay_set_size, reg0, pos1),
        (overlay_set_size, reg1, pos2),

        (team_get_faction, ":faction_of_team_1", 0),
        (team_get_faction, ":faction_of_team_2", 1),
          
        (try_begin),
          (eq, ":faction_of_team_1", ":faction_of_team_2"),
          (eq, ":i_team", 1),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_4"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_4"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_2"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_2"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_3"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_3"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_5"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_5"),
        (else_try),
          (eq, ":cur_faction", "fac_kingdom_6"),
          (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_6"),
#chief amplia multiplayer chief
     (else_try),
        (eq, ":cur_faction", "fac_kingdom_7"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_7"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_8"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_8"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_9"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_9"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_10"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_10"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_11"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_11"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_12"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_12"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_13"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_13"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_14"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_14"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_15"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_15"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_16"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_16"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_17"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_17"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_18"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_18"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_19"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_19"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_20"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_20"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_21"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_21"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_22"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_22"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_23"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_23"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_24"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_24"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_25"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_25"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_26"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_26"),
     (else_try),
        (eq, ":cur_faction", "fac_kingdom_27"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_27"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_28"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_28"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_29"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_29"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_30"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_30"),
      (else_try),
        (eq, ":cur_faction", "fac_kingdom_31"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_31"),
     (else_try),
        (eq, ":cur_faction", "fac_kingdom_1"),
        (create_mesh_overlay, reg0, "mesh_ui_kingdom_shield_1"),
#chief acaba
      (try_end),
      
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos3),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),      

        (team_get_score, reg0, ":i_team"),
        (create_text_overlay, reg0, "str_score_reg0", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 325), #325
        (store_add, ":sub_cur_y", ":cur_y", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
        (overlay_set_size, reg0, pos1),      

        (try_begin), #counting number of flags each team has only at hq mod.
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),
          (try_begin),
            (eq, ":i_team", 0),
            (assign, reg0, ":team_1_num_flags"),
          (else_try),
            (eq, ":i_team", 1),
            (assign, reg0, ":team_2_num_flags"),
          (try_end),
          (create_text_overlay, reg0, "str_flags_reg0", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 258),
          (store_add, ":sub_cur_y", ":cur_y", -10),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":sub_cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 600),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg0, pos1),      
        (try_end),

        (val_sub, ":cur_y", 60),
      
        (create_text_overlay, reg0, "str_player_name", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (try_begin), #at headquarters and capture the flag write score instead before kill count
          (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
          (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
          (create_text_overlay, reg0, "str_score", 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (store_add, ":sub_cur_x", ":cur_x", 138),
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
        (try_end),
      
        (create_text_overlay, reg0, "str_kills", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 206), #191
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_deaths", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 260), #232
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 308), #291
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),
      
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 16500),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 35),
      
        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":unused", 0, ":end_cond"),
          (assign, ":max_score_plus_death", -30030),
          (assign, ":max_score_plus_death_player_no", -1),
          (try_for_range, ":player_no", 0, ":num_players"),            
            (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
            (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
            (player_get_team_no, ":player_team", ":player_no"),
            (eq, ":player_team", ":i_team"),

            (try_begin),
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      
              (player_get_score, ":kill_count", ":player_no"), #get score in "capture the flag" or "headquarters"
            (else_try),
              (player_get_kill_count, ":kill_count", ":player_no"), #get kill count in "siege" or "battle" or "team deathmatch" or "deathmatch"
            (try_end),
      
            (player_get_death_count, ":death_count", ":player_no"), #get_death_count

            (store_mul, ":player_score_plus_death", ":kill_count", 1000),
            (val_sub, ":player_score_plus_death", ":death_count"),
      
            (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
            (eq, ":player_score_plus_death", -30030),
      
            (assign, ":max_score_plus_death", ":player_score_plus_death"),
            (assign, ":max_score_plus_death_player_no", ":player_no"),
          (try_end),
          (try_begin),
            (ge, ":max_score_plus_death_player_no", 0),
            (store_add, ":slot_index", ":max_score_plus_death_player_no", multi_data_player_index_list_begin),
            (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
      
            (try_begin),
              (eq, ":my_player_no", ":max_score_plus_death_player_no"),
              (create_mesh_overlay, reg0, "mesh_white_plane"),
              (overlay_set_color, reg0, 0xFFFFFF),
              (overlay_set_alpha, reg0, 0x35),
              (store_add, ":sub_cur_x", ":cur_x", 0),
              (position_set_x, pos1, ":sub_cur_x"),
              (store_add, ":sub_cur_y", ":cur_y", 0),
              (position_set_y, pos1, ":sub_cur_y"),
              (overlay_set_position, reg0, pos1),
              (position_set_x, pos1, 16500),
              (position_set_y, pos1, 1000),
              (overlay_set_size, reg0, pos1),
            (try_end),
  
            (try_begin), #at headquarters and capture the flag write score instead dead label before kill count
              (this_or_next|eq, "$g_multiplayer_game_type", multiplayer_game_type_capture_the_flag),
              (eq, "$g_multiplayer_game_type", multiplayer_game_type_headquarters),      

              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
              (try_end),

              (player_get_score, reg0, ":max_score_plus_death_player_no"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),      
              (store_add, ":sub_cur_x", ":cur_x", 165), #150
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
            (else_try),
              (assign, ":font_color", 0xFFFFFF),
              (player_get_agent_id, ":max_score_plus_death_agent_id", ":max_score_plus_death_player_no"),
              (try_begin),
                (this_or_next|lt, ":max_score_plus_death_agent_id", 0),
                (neg|agent_is_alive, ":max_score_plus_death_agent_id"),
                (assign, ":font_color", 0xFF0000),
                (create_text_overlay, reg0, "str_dead", 0),
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (store_add, ":sub_cur_x", ":cur_x", 130),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),
            (try_end),

            (str_store_player_username, s1, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, s1, 0),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (position_set_x, pos1, ":cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_kill_count, reg0, ":max_score_plus_death_player_no"), #get_kill_count
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 215), #200
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_death_count, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),      
            (store_add, ":sub_cur_x", ":cur_x", 265), #250
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
      
            (player_get_ping, reg0, ":max_score_plus_death_player_no"),
            (create_text_overlay, reg0, "str_reg0", tf_right_align),
            (overlay_set_color, reg0, ":font_color"),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
            (overlay_set_size, reg0, pos1),
            (store_add, ":sub_cur_x", ":cur_x", 315), #300
            (position_set_x, pos1, ":sub_cur_x"),
            (position_set_y, pos1, ":cur_y"),
            (overlay_set_position, reg0, pos1),
            (val_sub, ":cur_y", 20),
          (else_try),
            (try_begin),
              (try_begin),
                (eq, ":i_team", 0),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_1"),
              (else_try),
                (assign, ":number_of_bots_in_cur_team", "$g_multiplayer_num_bots_team_2"),
              (try_end),
             
              (team_get_bot_kill_count, reg0, ":i_team"),
              (team_get_bot_death_count, reg1, ":i_team"),
              (try_begin),
                (this_or_next|neq, reg0, 0),
                (this_or_next|neq, reg1, 0),
                (neq, ":number_of_bots_in_cur_team", 0),
                (assign, ":write_bot_informations_of_team", 1),
              (else_try),
                (assign, ":write_bot_informations_of_team", 0),
              (try_end),
      
              (eq, ":write_bot_informations_of_team", 1),

              (assign, ":number_of_alive_bots", 0),
              (try_for_agents, ":cur_agent"),
                (agent_is_non_player, ":cur_agent"),
                (agent_is_alive, ":cur_agent"),
                (agent_get_team, ":cur_agent_team", ":cur_agent"),
                (eq, ":cur_agent_team", ":i_team"),
                (val_add, ":number_of_alive_bots", 1),
              (try_end),
              (store_sub, ":number_of_dead_bots", ":number_of_bots_in_cur_team", ":number_of_alive_bots"),
              (try_begin),
                (eq, ":number_of_alive_bots", 0),
                (assign, ":font_color", 0xFF0000),
              (else_try),
                (assign, ":font_color", 0xD0D0D0),
              (try_end),

              (try_begin),
                (gt, ":number_of_dead_bots", 0),
                (try_begin),
                  (eq, ":number_of_bots_in_cur_team", 1),
                  (create_text_overlay, reg0, "str_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 130),
                (else_try),
                  (assign, reg0, ":number_of_dead_bots"),
                  (create_text_overlay, reg0, "str_reg0_dead", 0),
                  (store_add, ":sub_cur_x", ":cur_x", 123),
                (try_end),      
                (overlay_set_color, reg0, ":font_color"),
                (position_set_x, pos1, 750),
                (position_set_y, pos1, 750),
                (overlay_set_size, reg0, pos1),
                (position_set_x, pos1, ":sub_cur_x"),
                (position_set_y, pos1, ":cur_y"),
                (overlay_set_position, reg0, pos1),
              (try_end),

              (try_begin),
                (gt, ":number_of_bots_in_cur_team", 1),
                (assign, reg0, ":number_of_bots_in_cur_team"),
                (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
              (else_try),
                (create_text_overlay, reg0, "str_bot_1_agent", 0),
              (try_end),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (position_set_x, pos1, ":cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_kill_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 215), #200
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
      
              (team_get_bot_death_count, reg0, ":i_team"),
              (create_text_overlay, reg0, "str_reg0", tf_right_align),
              (overlay_set_color, reg0, ":font_color"),
              (position_set_x, pos1, 750),
              (position_set_y, pos1, 750),
              (overlay_set_size, reg0, pos1),
              (store_add, ":sub_cur_x", ":cur_x", 265), #250
              (position_set_x, pos1, ":sub_cur_x"),
              (position_set_y, pos1, ":cur_y"),
              (overlay_set_position, reg0, pos1),
              (val_sub, ":cur_y", 20),
            (try_end),
            (assign, ":end_cond", 0), #all players are written for this team, break
          (try_end),
        (try_end),

        (try_begin),
          (eq, ":i_team", 0),
          (assign, ":old_cur_y", ":cur_y"),
        (try_end),
      (try_end),

      (try_begin),
        (le, ":old_cur_y", ":cur_y"),
        (assign, ":cur_y", ":old_cur_y"),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 36000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 280),
        (val_sub, ":cur_y", 50),

        #"spectators" text 
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_right_align),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 215), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1),

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart"),
      (try_end),
      ]),
    ]),

  #this score table is used in only deathmatch
  ("multiplayer_stats_chart_deathmatch", prsntf_read_only|prsntf_manual_end_only, 0, [ 
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_score_a"),
      (position_set_x, pos1, 295),
      (position_set_y, pos1, 115),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (assign, ":team_rows", 0),
      (assign, ":spectator_rows", 0),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 0, ":num_players"),
        (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
        (try_begin),
          (player_is_active, ":player_no"),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (try_begin),
            (this_or_next|eq, ":player_team", 0),
            (eq, ":player_team", 1),
            (val_add, ":team_rows", 1),
          (else_try),
            (eq, ":player_team", multi_team_spectator),
            (val_add, ":spectator_rows", 1),
          (try_end),
        (else_try),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
        (try_end),
      (try_end),
      (try_begin),
        (this_or_next|gt, "$g_multiplayer_num_bots_team_1", 0),
        (gt, "$g_multiplayer_num_bots_team_2", 0),
        (val_add, ":team_rows", 1),
      (try_end),

      (store_add, ":total_rows", ":team_rows", ":spectator_rows"),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_stats_chart_deathmatch_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 300),
      (position_set_y, pos1, 140),
      (overlay_set_position, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (position_set_x, pos1, 346),
      (position_set_y, pos1, 530),
      (overlay_set_area_size, "$g_presentation_obj_stats_chart_deathmatch_container", pos1),
      (set_container_overlay, "$g_presentation_obj_stats_chart_deathmatch_container"),

      (store_mul, ":y_needed", ":total_rows", 20),
      (val_add, ":y_needed", 80),
      (try_begin),
        (gt, ":spectator_rows", 0),
        (val_add, ":y_needed", 70),
      (try_end),

      (try_begin),
        (ge, ":total_rows", 17),
        (assign, "$g_stats_chart_update_period", 10),
      (else_try),
        (assign, "$g_stats_chart_update_period", 1),
      (try_end),

      (multiplayer_get_my_player, ":my_player_no"),

      #assuming only 2 teams in scene
      (assign, ":cur_y", ":y_needed"),
      (assign, ":cur_x", 42),
      
      (create_text_overlay, reg0, "str_player_name", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, ":cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_kills", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 179), #164
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_deaths", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 233), #205
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_text_overlay, reg0, "str_ping", tf_center_justify),
      (overlay_set_color, reg0, 0xFFFFFF),
      (store_add, ":sub_cur_x", ":cur_x", 282), #264
      (position_set_x, pos1, ":sub_cur_x"),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 750),
      (position_set_y, pos1, 750),
      (overlay_set_size, reg0, pos1),
      
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", -10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1),

      (val_sub, ":cur_y", 35),
      
      (store_add, ":end_cond", ":num_players", 1),
      (try_for_range, ":unused", 0, ":end_cond"),
        (assign, ":max_score_plus_death", -30030),
        (assign, ":max_kills_player_no", -1),
        (try_for_range, ":player_no", 0, ":num_players"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),
          (player_get_team_no, ":player_team", ":player_no"),
          (this_or_next|eq, ":player_team", 0),
          (eq, ":player_team", 1),

          (player_get_kill_count, ":kill_count", ":player_no"),
          (player_get_death_count, ":death_count", ":player_no"), #get_death_count
          (store_mul, ":player_score_plus_death", ":kill_count", 1000),
          (val_sub, ":player_score_plus_death", ":death_count"),
      
          (this_or_next|gt, ":player_score_plus_death", ":max_score_plus_death"),
          (eq, ":player_score_plus_death", -30030),
      
          (assign, ":max_score_plus_death", ":player_score_plus_death"),
          (assign, ":max_kills_player_no", ":player_no"),
        (try_end),
        (try_begin),
          (ge, ":max_kills_player_no", 0),
          (store_add, ":slot_index", ":max_kills_player_no", multi_data_player_index_list_begin),
          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 0),
          (str_store_player_username, s1, ":max_kills_player_no"),
      
          (try_begin),
            (eq, ":my_player_no", ":max_kills_player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 16000),
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_kill_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_death_count, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),      
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (player_get_ping, reg0, ":max_kills_player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xFFFFFF),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 288), #273
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),
        (else_try),
          (store_add, ":number_of_bots", "$g_multiplayer_num_bots_team_1", "$g_multiplayer_num_bots_team_2"),
          (ge, ":number_of_bots", 1),

          (try_begin),
            (gt, ":number_of_bots", 1),
            (assign, reg0, ":number_of_bots"),
            (create_text_overlay, reg0, "str_bots_reg0_agents", 0),
          (else_try),
            (create_text_overlay, reg0, "str_bot_1_agent", 0),
          (try_end),
      
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_kill_count, reg0, 0),
          (assign, ":bot_kill_count", reg0),
          (team_get_bot_kill_count, reg0, 1),
          (val_add, ":bot_kill_count", reg0),
          (assign, reg0, ":bot_kill_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 188), #173
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
      
          (team_get_bot_death_count, reg0, 0),
          (assign, ":bot_death_count", reg0),
          (team_get_bot_death_count, reg0, 1),
          (val_add, ":bot_death_count", reg0),
          (assign, reg0, ":bot_death_count"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, 0xD0D0D0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 238), #223
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),

          (assign, ":end_cond", 0), #all players are written, break
        (else_try),
          (assign, ":end_cond", 0), #all players are written, break
        (try_end),
      (try_end),

      (assign, ":cur_x", 42),

      #white line between playing players and spectators
      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0xFFFFFF),
      (overlay_set_alpha, reg0, 0xD0),
      (store_add, ":sub_cur_x", ":cur_x", 0),
      (position_set_x, pos1, ":sub_cur_x"),
      (store_add, ":sub_cur_y", ":cur_y", 10),
      (position_set_y, pos1, ":sub_cur_y"),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 15250),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg0, pos1), 

      (try_begin),
        (gt, ":spectator_rows", 0),

        (assign, ":cur_x", 75),
        (val_sub, ":cur_y", 50),

        #"spectators" text
        (create_text_overlay, reg0, "str_spectators", 0),
        (overlay_set_color, reg0, 0xFFFFFF),
        (position_set_x, pos1, ":cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),

        (create_text_overlay, reg0, "str_ping", tf_center_justify),
        (overlay_set_color, reg0, 0xFFFFFF),
        (store_add, ":sub_cur_x", ":cur_x", 218), #200
        (position_set_x, pos1, ":sub_cur_x"),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg0, pos1),

        #white line for spectators list
        (create_mesh_overlay, reg0, "mesh_white_plane"),
        (overlay_set_color, reg0, 0xFFFFFF),
        (overlay_set_alpha, reg0, 0xD0),
        (store_add, ":sub_cur_x", ":cur_x", 0),
        (position_set_x, pos1, ":sub_cur_x"),
        (store_add, ":sub_cur_y", ":cur_y", -10),
        (position_set_y, pos1, ":sub_cur_y"),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 12000),
        (position_set_y, pos1, 50),
        (overlay_set_size, reg0, pos1), 

        (val_sub, ":cur_y", 30),

        (assign, ":font_color", 0xC0C0C0),

        (store_add, ":end_cond", ":num_players", 1),
        (try_for_range, ":player_no", 0, ":end_cond"),
          (store_add, ":slot_index", ":player_no", multi_data_player_index_list_begin),
          (troop_slot_eq, "trp_multiplayer_data", ":slot_index", 1),

          (player_get_team_no, ":player_team", ":player_no"),
          (eq, ":player_team", multi_team_spectator), #to not to allow dedicated server to pass below, dedicated servers have -1 for team_no not 2(multi_team_spectator).

          (troop_set_slot, "trp_multiplayer_data", ":slot_index", 1),

          (try_begin),
            (eq, ":my_player_no", ":player_no"),
            (create_mesh_overlay, reg0, "mesh_white_plane"),
            (overlay_set_color, reg0, 0xFFFFFF),
            (overlay_set_alpha, reg0, 0x35),
            (store_add, ":sub_cur_x", ":cur_x", 0),
            (position_set_x, pos1, ":sub_cur_x"),
            (store_add, ":sub_cur_y", ":cur_y", 0),
            (position_set_y, pos1, ":sub_cur_y"),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 12000), #16500
            (position_set_y, pos1, 1000),
            (overlay_set_size, reg0, pos1),
          (try_end),

          (str_store_player_username, s1, ":player_no"),
          (create_text_overlay, reg0, s1, 0),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          
          (player_get_ping, reg0, ":player_no"),
          (create_text_overlay, reg0, "str_reg0", tf_right_align),
          (overlay_set_color, reg0, ":font_color"),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, reg0, pos1),
          (store_add, ":sub_cur_x", ":cur_x", 215), #200
          (position_set_x, pos1, ":sub_cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg0, pos1),
          (val_sub, ":cur_y", 20),      
        (try_end),
      (try_end),

      (omit_key_once, key_mouse_scroll_up),
      (omit_key_once, key_mouse_scroll_down),
      
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_mouse_scroll_up),
        (key_clicked, key_mouse_scroll_down),
        (omit_key_once, key_mouse_scroll_up),
        (omit_key_once, key_mouse_scroll_down),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_stats_chart_opened_manually", 1),
        (neg|game_key_is_down, gk_leave),
        (assign, "$g_multiplayer_stats_chart_opened_manually", 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (try_begin),
        (store_mul, ":update_period_time_limit", "$g_stats_chart_update_period", 1000),
        (gt, ":cur_time", ":update_period_time_limit"),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_stats_chart_deathmatch"),
      (try_end),
      ]),
    ]),

  ("multiplayer_escape_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_escape_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 75),
      (overlay_set_position, "$g_presentation_obj_escape_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 550),
      (overlay_set_area_size, "$g_presentation_obj_escape_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_escape_menu_container"),

      (assign, ":cur_y", 500),

      (create_text_overlay, reg0, "str_choose_an_option", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (create_button_overlay, "$g_presentation_obj_escape_menu_1", "str_choose_faction", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_1", 0xFFFFFF),
      (multiplayer_get_my_team, ":my_team"),
      (assign, "$g_presentation_obj_escape_menu_2", -1),
      (assign, "$g_presentation_obj_escape_menu_3", -1),
      (assign, "$g_presentation_obj_escape_menu_6", -1),
      (assign, "$g_presentation_obj_escape_menu_7", -1),
      (assign, "$g_presentation_obj_escape_menu_8", -1),
      (assign, "$g_presentation_obj_escape_menu_9", -1),
      (assign, "$g_presentation_obj_escape_menu_10", -1),
      (assign, "$g_presentation_obj_escape_menu_11", -1),
      (assign, "$g_presentation_obj_escape_menu_12", -1),
      (assign, "$g_presentation_obj_escape_menu_13", -1),
      (try_begin),
        (lt, ":my_team", multi_team_spectator),
        (create_button_overlay, "$g_presentation_obj_escape_menu_2", "str_choose_troop", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_2", 0xFFFFFF),
        (multiplayer_get_my_troop, ":my_troop"),
        (try_begin),
          (ge, ":my_troop", 0),
          (create_button_overlay, "$g_presentation_obj_escape_menu_3", "str_choose_items", 0),
          (overlay_set_color, "$g_presentation_obj_escape_menu_3", 0xFFFFFF),
        (try_end),
      (try_end),
      (create_button_overlay, "$g_presentation_obj_escape_menu_4", "str_options", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_4", 0xFFFFFF),
      (create_button_overlay, "$g_presentation_obj_escape_menu_5", "str_redefine_keys", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_5", 0xFFFFFF),

      (create_button_overlay, "$g_presentation_obj_escape_menu_13", "@Show game rules", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_13", 0xFFFFFF),

      (multiplayer_get_my_player, ":my_player_no"),
      (try_begin),
        (this_or_next|eq, "$g_multiplayer_maps_voteable", 1),
        (this_or_next|eq, "$g_multiplayer_factions_voteable", 1),
        (this_or_next|gt, "$g_multiplayer_num_bots_voteable", 0),
        (this_or_next|eq, "$g_multiplayer_kick_voteable", 1),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_6", "str_submit_a_poll", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0xFFFFFF),
        (assign, "$g_presentation_obj_escape_menu_6_available", 1),
        (try_begin),
          (ge, ":my_player_no", 0),
          (player_get_slot, ":last_poll_time", ":my_player_no", slot_player_poll_disabled_until_time),
          (store_mission_timer_a, ":mission_timer"),
          (lt, ":mission_timer", ":last_poll_time"),
          (overlay_set_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (overlay_set_hilight_color, "$g_presentation_obj_escape_menu_6", 0x888888),
          (assign, "$g_presentation_obj_escape_menu_6_available", 0),
        (try_end),
      (try_end),

      (try_begin),
        (ge, ":my_player_no", 0),
        (player_is_admin, ":my_player_no"),
        (create_button_overlay, "$g_presentation_obj_escape_menu_7", "str_administrator_panel", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_7", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_8", "str_kick_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_8", 0xFFFFFF),
        (create_button_overlay, "$g_presentation_obj_escape_menu_9", "str_ban_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_9", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_11", "str_mute_player", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_11", 0xFFFFFF),

      (try_begin),
        (assign, "$g_presentation_obj_escape_menu_12", -1),
        (assign, ":any_muted", 0),
        (get_max_players, ":num_players"),
        (try_for_range, ":player_no", 0, ":num_players"),
          (player_is_active, ":player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":any_muted", 1),
        (try_end),
        (eq, ":any_muted", 1),
        (create_button_overlay, "$g_presentation_obj_escape_menu_12", "str_unmute_player", 0),
        (overlay_set_color, "$g_presentation_obj_escape_menu_12", 0xFFFFFF),
      (try_end),

      (create_button_overlay, "$g_presentation_obj_escape_menu_10", "str_quit", 0),
      (overlay_set_color, "$g_presentation_obj_escape_menu_10", 0xFFFFFF),

      (position_set_x, pos1, 130),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_1", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_2", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_2", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_3", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_3", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_4", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_5", pos1),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_13", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_6", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_6", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_7", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_7", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_8", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_8", pos1),
      (try_end),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_9", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_9", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_11", pos1),
      (try_begin),
        (ge, "$g_presentation_obj_escape_menu_12", 0),
        (val_sub, ":cur_y", escape_menu_item_height),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_escape_menu_12", pos1),
      (try_end),
      (val_sub, ":cur_y", escape_menu_item_height),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, "$g_presentation_obj_escape_menu_10", pos1),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_escape_menu_1"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_team_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_2"),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_troop_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_presentation_state", 0),
        (start_presentation, "prsnt_multiplayer_item_select"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_4"),
        (presentation_set_duration, 0),
        (change_screen_options),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_5"),
        (presentation_set_duration, 0),
        (change_screen_controls),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_6"),
        (eq, "$g_presentation_obj_escape_menu_6_available", 1),
        (presentation_set_duration, 0),
        (start_presentation, "prsnt_multiplayer_poll_menu"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_7"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_admin_panel),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_8"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 3), #admin kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_9"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 4), #admin ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_10"),
        (presentation_set_duration, 0),
        (finish_mission, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_11"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 5), #mute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_12"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 6), #unmute player
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_escape_menu_13"),
        (presentation_set_duration, 0),
        (multiplayer_send_message_to_server, multiplayer_event_open_game_rules),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll_menu", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_poll_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_poll_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_poll_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_poll_menu_container"),

      (assign, "$g_presentation_obj_poll_menu_1", -1),
      (assign, "$g_presentation_obj_poll_menu_4", -1),
      (assign, "$g_presentation_obj_poll_menu_5", -1),

      (assign, ":cur_y", 450),

      (create_text_overlay, reg0, "str_choose_a_poll_type", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (position_set_x, pos1, 60),

      (try_begin),
        (eq, "$g_multiplayer_maps_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_1", "str_poll_for_changing_the_map", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_1", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_1", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_factions_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_4", "str_poll_for_changing_the_map_and_factions", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_4", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_4", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (gt, "$g_multiplayer_num_bots_voteable", 0),
        (create_button_overlay, "$g_presentation_obj_poll_menu_5", "str_poll_for_changing_number_of_bots", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_5", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_5", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_kick_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_2", "str_poll_for_kicking_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_2", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_2", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (try_begin),
        (eq, "$g_multiplayer_ban_voteable", 1),
        (create_button_overlay, "$g_presentation_obj_poll_menu_3", "str_poll_for_banning_a_player", 0),
        (overlay_set_color, "$g_presentation_obj_poll_menu_3", 0xFFFFFF),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, "$g_presentation_obj_poll_menu_3", pos1),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_poll_menu_1"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 1), #poll map
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_2"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 1), #poll kick
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_3"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_players_list_action_type", 2), #poll ban
        (start_presentation, "prsnt_multiplayer_show_players_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_4"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_maps_list_action_type", 2), #poll map and factions
        (start_presentation, "prsnt_multiplayer_show_maps_list"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_poll_menu_5"),
        (presentation_set_duration, 0),
        (assign, "$g_multiplayer_number_of_bots_list_action_type", 1), #for team 1
        (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_players_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_players_1", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_players_1", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_players_1", pos1),
      (set_container_overlay, "$g_presentation_obj_show_players_1"),

      #(assign, ":cur_y", 450),
      (multiplayer_get_my_player, ":my_player_no"),

      (assign, ":cur_y", 10),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
      
        (val_add, ":cur_y", escape_menu_item_height),
      (try_end),

      (create_text_overlay, reg0, "str_choose_a_player", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_set_slot, ":player_no", slot_player_button_index, -1),

        (assign, ":continue", 0),
        (try_begin),
          (neq, "$g_multiplayer_players_list_action_type", 5),
          (neq, "$g_multiplayer_players_list_action_type", 6),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 0),
          (assign, ":continue", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6),
          (neq, ":player_no", ":my_player_no"),
          (player_get_is_muted, ":is_muted", ":player_no"),
          (eq, ":is_muted", 1),
          (assign, ":continue", 1),
        (try_end),
        (eq, ":continue", 1),
        (str_store_player_username, s0, ":player_no"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 130),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
        (player_set_slot, ":player_no", slot_player_button_index, ":overlay_id"),
      (try_end),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (get_max_players, ":num_players"),
      (try_for_range, ":player_no", 1, ":num_players"), #0 is server no need to write it
        (player_is_active, ":player_no"),
        (player_slot_eq, ":player_no", slot_player_button_index, ":object"),
        (try_begin),
          (is_between, "$g_multiplayer_players_list_action_type", 1, 3), #poll kick or poll ban
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, "$g_multiplayer_players_list_action_type", ":player_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 3), #admin kick
          (multiplayer_send_int_to_server, multiplayer_event_admin_kick_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 4), #admin ban
          (multiplayer_send_int_to_server, multiplayer_event_admin_ban_player, ":player_no"),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 5), #mute player
          (player_set_is_muted, ":player_no", 1),
        (else_try),
          (eq, "$g_multiplayer_players_list_action_type", 6), #unmute player
          (player_set_is_muted, ":player_no", 0),
        (try_end),
        (assign, ":num_players", 0), #break
        (presentation_set_duration, 0),
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_maps_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_maps_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_maps_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_maps_list_menu_container"),

      (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
      (assign, ":num_maps", reg0),
      (store_mul, ":cur_y", ":num_maps", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (create_text_overlay, reg0, "str_choose_a_map", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_map", 0, ":num_maps"),
        (store_add, ":map_slot", ":i_map", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":map_no", "trp_multiplayer_data", ":map_slot"),
        (store_sub, ":string_index", ":map_no", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
      
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_maps_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index", ":num_maps"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_maps_list_button_list_first_index", "$g_show_maps_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (call_script, "script_multiplayer_fill_map_game_types", "$g_multiplayer_game_type"),
        (store_sub, ":map_slot", ":object", "$g_show_maps_list_button_list_first_index"),
        (val_add, ":map_slot", multi_data_maps_for_game_type_begin),
        (troop_get_slot, ":scene_id", "trp_multiplayer_data", ":map_slot"),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_maps_list_action_type", 1), #vote for map
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_2_int_to_server, multiplayer_event_start_new_poll, 0, ":scene_id"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for map and factions
          (assign, "$g_multiplayer_factions_list_action_type", 1), #for team 1
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_map", ":scene_id"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_maps_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (key_clicked, key_escape),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_factions_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_factions_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_factions_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_factions_list_menu_container"),

      (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
      (try_begin),
        (eq, "$g_multiplayer_factions_list_action_type", 2),
        (val_sub, ":num_factions", 1),
      (try_end),
      (store_mul, ":cur_y", ":num_factions", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_factions_list_action_type"),
      (create_text_overlay, reg0, "str_choose_a_faction_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_faction", npc_kingdoms_begin, npc_kingdoms_end),
        (this_or_next|eq, "$g_multiplayer_factions_list_action_type", 1),
        (neq, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":i_faction"),
        (str_store_faction_name, s0, ":i_faction"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_factions_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index", ":num_factions"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_factions_list_button_list_first_index", "$g_show_factions_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":faction_no", ":object", "$g_show_factions_list_button_list_first_index"),
        (val_add, ":faction_no", npc_kingdoms_begin),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_factions_list_action_type", 2), #vote for second team
          (try_begin),
            (ge, ":faction_no", "$g_multiplayer_poll_for_map_and_faction_data_faction_1"),
            (val_add, ":faction_no", 1),
          (try_end),
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_4_int_to_server, multiplayer_event_start_new_poll, 3, "$g_multiplayer_poll_for_map_and_faction_data_map", "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_factions_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_for_map_and_faction_data_faction_1", ":faction_no"),
          (start_presentation, "prsnt_multiplayer_show_factions_list"),
        (try_end),
        (assign, "$g_show_factions_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_show_number_of_bots_list", prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_mp_ingame_menu"),
      (position_set_x, pos1, 250),
      (position_set_y, pos1, 80),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 1000),
      (position_set_y, pos1, 1000),
      (overlay_set_size, reg0, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 285),
      (position_set_y, pos1, 125),
      (overlay_set_position, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (position_set_x, pos1, 405),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_show_number_of_bots_list_menu_container", pos1),
      (set_container_overlay, "$g_presentation_obj_show_number_of_bots_list_menu_container"),

      (assign, ":num_options", 0),
      (store_add, ":end_cond", "$g_multiplayer_num_bots_voteable", 1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (val_add, ":num_options", 1),
      (try_end),

      (store_mul, ":cur_y", ":num_options", escape_menu_item_height),
      (val_add, ":cur_y", 10),

      (assign, reg0, "$g_multiplayer_number_of_bots_list_action_type"),
      (create_text_overlay, reg0, "str_choose_number_of_bots_for_team_reg0", 0),
      (overlay_set_color, reg0, 0xFFFFFF),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg0, pos1),
      (val_sub, ":cur_y", escape_menu_item_height),

      (assign, ":overlay_id", -1),
      (try_for_range, ":i_number", 0, ":end_cond"),
        (assign, ":i_number_mod_5", ":i_number"),
        (val_mod, ":i_number_mod_5", 5),
        (this_or_next|lt, ":i_number", 10),
        (eq, ":i_number_mod_5", 0),
        (assign, reg0, ":i_number"),
        (str_store_string, s0, "str_reg0"),
        (create_button_overlay, ":overlay_id", s0, 0),
        (overlay_set_color, ":overlay_id", 0xFFFFFF),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, ":overlay_id", pos1),
        (val_sub, ":cur_y", escape_menu_item_height),
      (try_end),
      (store_add, "$g_show_number_of_bots_list_button_list_end_index", ":overlay_id", 1),
      (store_sub, "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index", ":num_options"),

      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_for_range, ":i_button", "$g_show_number_of_bots_list_button_list_first_index", "$g_show_number_of_bots_list_button_list_end_index"),
        (eq, ":object", ":i_button"),
        (store_sub, ":value_index", ":object", "$g_show_number_of_bots_list_button_list_first_index"),
        (try_begin),
          (lt, ":value_index", 10),
          (assign, ":used_value", ":value_index"),
        (else_try),
          (store_sub, ":used_value", ":value_index", 8),
          (val_mul, ":used_value", 5),
        (try_end),
        (presentation_set_duration, 0),
        (try_begin),
          (eq, "$g_multiplayer_number_of_bots_list_action_type", 2), #vote for second team
          (try_begin),
            (multiplayer_get_my_player, ":my_player_no"),
            (ge, ":my_player_no", 0),
            (multiplayer_send_3_int_to_server, multiplayer_event_start_new_poll, 4, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
            (store_mission_timer_a, ":mission_timer"),
            (val_add, ":mission_timer", multiplayer_poll_disable_period),
            (player_set_slot, ":my_player_no", slot_player_poll_disabled_until_time, ":mission_timer"),
          (try_end),
        (else_try), #vote for first team
          (assign, "$g_multiplayer_number_of_bots_list_action_type", 2), #for team 2
          (assign, "$g_multiplayer_poll_number_of_bots_team_1", ":used_value"),
          (start_presentation, "prsnt_multiplayer_show_number_of_bots_list"),
        (try_end),
        (assign, "$g_show_number_of_bots_list_button_list_end_index", 0), #break;
      (try_end),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(key_clicked, key_xbox_start),
        (gt, ":cur_time", 200),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("multiplayer_poll", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (create_mesh_overlay, reg0, "mesh_white_plane"),
      (overlay_set_color, reg0, 0x000000),
      (overlay_set_alpha, reg0, 0x44),
      (position_set_x, pos1, 50),
      (position_set_y, pos1, 50),
      (overlay_set_position, reg0, pos1),
      (position_set_x, pos1, 37500),
      (position_set_y, pos1, 4500),
      (overlay_set_size, reg0, pos1),

      (try_begin),
        (eq, "$g_multiplayer_poll_to_show", 0),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (create_text_overlay, reg0, "str_poll_change_map", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 1),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_kick_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 2),
        (str_store_player_username, s0, "$g_multiplayer_poll_value_to_show"),
        (create_text_overlay, reg0, "str_poll_ban_player", tf_center_justify),
      (else_try),
        (eq, "$g_multiplayer_poll_to_show", 3),
        (store_sub, ":string_index", "$g_multiplayer_poll_value_to_show", multiplayer_scenes_begin),
        (val_add, ":string_index", multiplayer_scene_names_begin),
        (str_store_string, s0, ":string_index"),
        (str_store_faction_name, s1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s2, "$g_multiplayer_poll_value_3_to_show"),
        (create_text_overlay, reg0, "str_poll_change_map_with_faction", tf_center_justify|tf_scrollable_style_2),
      (else_try),
        (assign, reg0, "$g_multiplayer_poll_value_to_show"),
        (assign, reg1, "$g_multiplayer_poll_value_2_to_show"),
        (str_store_faction_name, s0, "$g_multiplayer_team_1_faction"),
        (str_store_faction_name, s1, "$g_multiplayer_team_2_faction"),
        (create_text_overlay, reg0, "str_poll_change_number_of_bots", tf_center_justify|tf_scrollable_style_2),
      (try_end),
      (overlay_set_color, reg0, 0xFFFFFF),
      (try_begin),
        (neq, "$g_multiplayer_poll_to_show", 3),
        (neq, "$g_multiplayer_poll_to_show", 4),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
      (else_try),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 60),
        (overlay_set_area_size, reg0, pos1),
      (try_end),

      (store_mission_timer_a, ":mission_timer"),
      (store_sub, "$g_multiplayer_poll_last_written_seconds_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),

      (create_text_overlay, "$g_presentation_obj_poll_1", "str_poll_time_left", tf_right_align|tf_single_line),
      (overlay_set_color, "$g_presentation_obj_poll_1", 0xFFFFFF),
      (position_set_x, pos1, 790),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_poll_1", pos1),

      (omit_key_once, key_1),
      (omit_key_once, key_2),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (this_or_next|key_clicked, key_escape),
		(this_or_next|key_clicked, key_xbox_start),
        (key_clicked, key_2),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 0),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (else_try),
        (key_clicked, key_1),
        (gt, ":cur_time", 500),
        (multiplayer_send_int_to_server, multiplayer_event_answer_to_poll, 1),
        (clear_omitted_keys),
        (presentation_set_duration, 0),
      (try_end),
      (store_mission_timer_a, ":mission_timer"),
      (store_sub, ":time_left", "$g_multiplayer_poll_client_end_time", ":mission_timer"),
      (try_begin),
        (neq, ":time_left", "$g_multiplayer_poll_last_written_seconds_left"),
        (try_begin),
          (lt, ":time_left", 0),
          (clear_omitted_keys),
          (presentation_set_duration, 0),
        (else_try),
          (assign, "$g_multiplayer_poll_last_written_seconds_left", ":time_left"),
          (assign, reg0, "$g_multiplayer_poll_last_written_seconds_left"),
          (overlay_set_text, "$g_presentation_obj_poll_1", "str_poll_time_left"),
        (try_end),
      (try_end),
      ]),
    ]),

  ("tutorial_show_mouse_movement",prsntf_read_only|prsntf_manual_end_only,0,[
      (ti_on_presentation_load,
       [
         (try_begin),
           (this_or_next|eq, "$g_tutorial_mouse_dir", -1),
           (eq, "$g_tutorial_mouse_click", -1),
           (presentation_set_duration, 0),
         (else_try),
           (set_fixed_point_multiplier, 1000),
           (assign, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
           (assign, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
           (store_add, ":arrow_mesh", "$g_tutorial_mouse_dir", "mesh_mouse_arrow_down"),
           (create_mesh_overlay, reg0, ":arrow_mesh"),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 380),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (try_begin),
             (eq, "$g_tutorial_mouse_click", 0),
             (create_mesh_overlay, reg0, "mesh_mouse_left_click"),
           (else_try),
             (create_mesh_overlay, reg0, "mesh_mouse_right_click"),
           (try_end),
           (position_set_x, pos1, 800),
           (position_set_y, pos1, 800),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 540),
           (position_set_y, pos1, 500),
           (overlay_set_position, reg0, pos1),
           (create_mesh_overlay, reg0, "mesh_mouse_arrow_plus"),
           (overlay_set_color, reg0, 0xFFFFFF),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, reg0, pos1),
           (position_set_x, pos1, 470),
           (position_set_y, pos1, 510),
           (overlay_set_position, reg0, pos1),
           (presentation_set_duration, 999999),
         (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|neq, "$g_tutorial_displayed_mouse_dir", "$g_tutorial_mouse_dir"),
          (neq, "$g_tutorial_displayed_mouse_click", "$g_tutorial_mouse_click"),
          (presentation_set_duration, 0),
          (try_begin),
            (ge, "$g_tutorial_mouse_dir", 0),
            (ge, "$g_tutorial_mouse_click", 0),
            (start_presentation, "prsnt_tutorial_show_mouse_movement"),
          (try_end),
        (try_end),
        ]),
      ]),

  ("name_kingdom",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_name_kingdom_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),
        (try_begin),
          (eq, "$players_kingdom_name_set", 1),
          (str_store_faction_name, s7, "fac_player_supporters_faction"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
        (else_try),
          (str_store_troop_name, s0, "trp_player"),
          (overlay_set_text, "$g_presentation_obj_name_kingdom_1", "str_default_kingdom_name"),
          (str_store_string, s7, "str_default_kingdom_name"),
        (try_end),
        
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@Continue...", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (str_store_string, s7, s0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          (faction_set_name, "fac_player_supporters_faction", s7),
          (faction_set_color, "fac_player_supporters_faction", 0xFF0000),
          (assign, "$players_kingdom_name_set", 1),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
  
  ("banner_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_banner_selection_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_banner_selection_1", "@Next Page", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_banner_selection_1", pos1),

        (assign, ":x_pos", 150),
        (assign, ":y_pos", 575),
        (assign, ":try_end", banner_meshes_end_minus_one),
        (store_sub, ":num_npc_kingdoms", npc_kingdoms_end, npc_kingdoms_begin),
        (val_sub, ":try_end", ":num_npc_kingdoms"), #do not allow kingdom banners to be selected
        (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        (val_add, ":begin_mesh", banner_meshes_begin),
        (store_add, ":try_end_2", ":begin_mesh", 16),
        (val_min, ":try_end", ":try_end_2"),
        (store_add, "$g_presentation_banner_start", "$g_presentation_obj_banner_selection_1", 1),
        (try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
          (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          (position_set_x, pos1, ":x_pos"),
          (position_set_y, pos1, ":y_pos"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (val_add, ":x_pos", 100),
          (ge, ":x_pos", 900),
          (assign, ":x_pos", 150),
          (val_sub, ":y_pos", 250),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_banner_selection_1"),
          (val_add, "$g_presentation_page_no", 1),
          (val_mod, "$g_presentation_page_no", 3), #chief cambiado para mas paginas para banners
          (start_presentation, "prsnt_banner_selection"),
        (else_try),
          (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
          (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
          (val_add, ":selected_banner", ":page_adder"),
          (store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
          (party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
          (store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
          (troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),
          ## Dunde's BEGIN chief creacion pj
          (jump_to_menu, "mnu_auto_return"),
          ## Dunde's END
        
          #Correcting banners according to the player banner
          #(assign, ":end_cond", active_npcs_end),
          #(try_for_range, ":cur_troop", original_kingdom_heroes_begin, ":end_cond"),
          #  (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
          #  (str_store_troop_name, s7, ":cur_troop"),
          #  (display_message, "@DEBUGS : {s7}'s banner is changed"),
          #  (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
          #  (assign, ":end_cond", 0),
          #(try_end),
                    
          (presentation_set_duration, 0),
          (assign, ":troop_to_change", 0),
          (assign, ":end_cond", active_npcs_end),
          (try_for_range, ":cur_troop", active_npcs_begin, ":end_cond"),
            (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
            (assign, ":troop_to_change", ":cur_troop"),
            (assign, ":end_cond", 0),
            (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
            (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
            (gt, ":cur_party", 0),
            (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),             
          (try_end),
          (try_for_range, ":cur_center", walled_centers_begin, walled_centers_end),
            (try_begin),
              (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
              (party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
            (else_try),
              (party_slot_eq, ":cur_center", slot_town_lord, ":troop_to_change"),
              (party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one), 
            (try_end),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
		  (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
         ## Dunde's BEGIN chief creacion pj
          (jump_to_menu, "mnu_auto_return"),
          ## Dunde's END
          (presentation_set_duration, 0),
        (try_end),

        ]),
      ]),

  ("custom_banner", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (troop_get_slot, ":flag_type", "trp_player", slot_troop_custom_banner_flag_type),
        (val_max, ":flag_type", 0),
        (val_add, ":flag_type", custom_banner_flag_types_begin),
        (troop_get_slot, ":map_flag_type", "trp_player", slot_troop_custom_banner_map_flag_type),
        (val_max, ":map_flag_type", 0),
        (val_add, ":map_flag_type", custom_banner_flag_map_types_begin),
##        (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", ":flag_type", "tableau_custom_banner_square", "trp_player"),
        (troop_get_slot, ":bg_color_1", "trp_player", slot_troop_custom_banner_bg_color_1),
        (troop_get_slot, ":bg_color_2", "trp_player", slot_troop_custom_banner_bg_color_2),
        
        (create_text_overlay, reg1, "str_color_no_1", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_color_no_2", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_22", "mesh_color_picker", "tableau_color_picker", ":bg_color_1"),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_23", "mesh_color_picker", "tableau_color_picker", ":bg_color_2"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 565),
        (overlay_set_position, "$g_presentation_obj_custom_banner_22", pos1),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_custom_banner_23", pos1),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 250),
        (overlay_set_size, "$g_presentation_obj_custom_banner_22", pos1),
        (overlay_set_size, "$g_presentation_obj_custom_banner_23", pos1),
        
        (create_button_overlay, "$g_presentation_obj_custom_banner_2", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_3", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_4", "str_change_background", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_5", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_19", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_custom_banner_20", "str_accept", tf_center_justify),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (create_button_overlay, "$g_presentation_obj_custom_banner_16", "str_randomize", tf_center_justify),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_17", ":flag_type", "tableau_custom_banner_default", "trp_player"),
        (try_begin),
          (eq, ":map_flag_type", "mesh_custom_map_banner_01"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_square", "trp_player"),
        (else_try),
          (eq, ":map_flag_type", "mesh_custom_map_banner_02"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_short", "trp_player"),
        (else_try),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_18", ":map_flag_type", "tableau_custom_banner_tall", "trp_player"),
        (try_end),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_1", -1, "tableau_custom_banner_square_no_mesh", "trp_player"),
        (create_text_overlay, reg1, "str_sample_banner", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_sample_map_banner", tf_center_justify),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 315),
        (overlay_set_position, "$g_presentation_obj_custom_banner_18", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_17", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_custom_banner_18", pos1),
        

        (create_text_overlay, reg1, "str_number_of_charges", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),

        (assign, reg1, ":num_charges"),
        (create_text_overlay, reg2, "str_reg1", tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg2, pos1),
        (try_begin),
          (lt, ":num_charges", 4),
          (create_button_overlay, "$g_presentation_obj_custom_banner_15", "str_plus", tf_center_justify),
          (position_set_x, pos1, 385),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_15", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_15", -1),
        (try_end),
        (try_begin),
          (gt, ":num_charges", 0),
          (create_button_overlay, "$g_presentation_obj_custom_banner_21", "str_minus", tf_center_justify),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_custom_banner_21", pos1),
        (else_try),
          (assign, "$g_presentation_obj_custom_banner_21", -1),
        (try_end),

        (try_begin),
          (ge, ":num_charges", 1),
          (create_text_overlay, reg1, "str_charge", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_text_overlay, reg1, "str_color", tf_center_justify),
          (position_set_x, pos1, 550),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_14", "str_change_charge_position", tf_center_justify),
          (position_set_y, pos1, 350),
          (position_set_x, pos1, 550),
          (overlay_set_position, "$g_presentation_obj_custom_banner_14", pos1),

          (create_text_overlay, reg1, "str_charge_no_1", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 240),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_6", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_6", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_7", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_7", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_1),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_24", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_24", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_24", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_1),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_28", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_custom_banner_28", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_28", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_32", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 240),
          (overlay_set_position, "$g_presentation_obj_custom_banner_32", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_33", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_33", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 2),
          (create_text_overlay, reg1, "str_charge_no_2", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 180),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_8", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_8", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_9", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_9", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_2),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_25", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_25", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_25", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_2),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_29", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_custom_banner_29", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_29", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_34", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 180),
          (overlay_set_position, "$g_presentation_obj_custom_banner_34", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_35", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_35", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 3),
          (create_text_overlay, reg1, "str_charge_no_3", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 120),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_10", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_10", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_11", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_11", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_3),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_26", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_26", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_26", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_3),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_30", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_custom_banner_30", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_30", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_36", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 120),
          (overlay_set_position, "$g_presentation_obj_custom_banner_36", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_37", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_37", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 4),
          (create_text_overlay, reg1, "str_charge_no_4", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 60),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_12", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_custom_banner_12", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_13", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_custom_banner_13", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_4),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_custom_banner_27", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_27", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_custom_banner_27", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_4),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_custom_banner_31", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_custom_banner_31", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_custom_banner_31", pos1),

          (create_button_overlay, "$g_presentation_obj_custom_banner_38", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 60),
          (overlay_set_position, "$g_presentation_obj_custom_banner_38", pos1),
          (create_button_overlay, "$g_presentation_obj_custom_banner_39", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_custom_banner_39", pos1),
        (try_end),
        
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_1", pos1),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_custom_banner_2", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_custom_banner_3", pos1),
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_custom_banner_4", pos1),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 575),
        (overlay_set_position, "$g_presentation_obj_custom_banner_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_custom_banner_19", pos1),
        (position_set_y, pos1, 650),
        (position_set_x, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_custom_banner_16", pos1),
        (position_set_y, pos1, 150),
        (position_set_x, pos1, 850),
        (overlay_set_position, "$g_presentation_obj_custom_banner_20", pos1),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_2"),
          (eq, ":object", "$g_presentation_obj_custom_banner_22"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_3"),
          (eq, ":object", "$g_presentation_obj_custom_banner_23"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_4"),
          (eq, ":object", "$g_presentation_obj_custom_banner_1"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_background_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_5"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_6"),
          (eq, ":object", "$g_presentation_obj_custom_banner_24"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_1),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_7"),
          (eq, ":object", "$g_presentation_obj_custom_banner_28"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_8"),
          (eq, ":object", "$g_presentation_obj_custom_banner_25"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_2),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_9"),
          (eq, ":object", "$g_presentation_obj_custom_banner_29"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_10"),
          (eq, ":object", "$g_presentation_obj_custom_banner_26"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_3),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_11"),
          (eq, ":object", "$g_presentation_obj_custom_banner_30"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_3),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_12"),
          (eq, ":object", "$g_presentation_obj_custom_banner_27"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_4),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_custom_banner_13"),
          (eq, ":object", "$g_presentation_obj_custom_banner_31"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_4),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (eq, ":object", "$g_presentation_obj_custom_banner_14"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_charge_positioning"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_15"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_add, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_21"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_sub, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_16"),
          (call_script, "script_get_random_custom_banner", "trp_player"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_17"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_18"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_19"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_32"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_34"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_36"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_38"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_33"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_35"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_37"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_39"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_custom_banner_20"),
          (troop_get_slot, ":flag_icon", "trp_player", slot_troop_custom_banner_map_flag_type),
          (try_begin),
            (ge, ":flag_icon", 0),
            (val_add, ":flag_icon", custom_banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":flag_icon"),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
##     (ti_on_presentation_run,
##      [(try_begin),
##         (this_or_next|key_clicked, key_space),
##         (this_or_next|key_clicked, key_enter),
##         (this_or_next|key_clicked, key_escape),
##         (key_clicked, key_back_space),
##         (presentation_set_duration, 0),
##       (try_end),
##       ]),
     ]),

  ("banner_charge_positioning", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_position", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 125),
        (assign, ":pos_y", 400),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (store_mul, ":x_needed", ":num_positionings", 125),
        (val_sub, ":x_needed", 25),
        (store_div, ":pos_x", ":x_needed", 2),
        (store_sub, ":pos_x", 500, ":pos_x"),
        (try_for_range, ":cur_positioning", 0, ":num_positionings"),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_positioning_selection", ":cur_positioning"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_positioning", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (try_for_range, ":trp_slot_index", 0, ":num_positionings"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_positioning, ":trp_slot_index"),
          (assign, ":num_positionings", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_charge_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_charge", tf_center_justify),

        (position_set_x, pos1, 500),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 100),
        (assign, ":pos_y", 600),
        (try_for_range, ":cur_charge", custom_banner_charges_begin, custom_banner_charges_end),
          (create_image_button_overlay, reg1, ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 100),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 100),
            (val_sub, ":pos_y", 100),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 80),
          (position_set_y, pos1, 80),
          (overlay_set_size, reg1, pos1),
          (store_sub, ":slot_index", ":cur_charge", custom_banner_charges_begin),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_charges_end),
        (val_sub, ":end_cond", custom_banner_charges_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_background_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 75),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_banner", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
          (store_sub, ":slot_index", ":cur_banner", custom_banner_backgrounds_begin),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_background_selection", ":slot_index"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 75),
            (val_sub, ":pos_y", 125),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_backgrounds_end),
        (val_sub, ":end_cond", custom_banner_backgrounds_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_bg_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 435),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":slot_index"),
          (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_default", "trp_player"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 130),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_types_end),
        (val_sub, ":end_cond", custom_banner_flag_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("banner_flag_map_type_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_map_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (troop_get_slot, ":bg_type", "trp_player", slot_troop_custom_banner_bg_type),
        (val_add, ":bg_type", custom_banner_backgrounds_begin),
        (assign, ":pos_x", 250),
        (assign, ":pos_y", 150),
        (try_for_range, ":cur_flag", custom_banner_flag_map_types_begin, custom_banner_flag_map_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_map_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":slot_index"),
          (try_begin),
            (eq, ":cur_flag", "mesh_custom_map_banner_01"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_square", "trp_player"),
          (else_try),
            (eq, ":cur_flag", "mesh_custom_map_banner_02"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_short", "trp_player"),
          (else_try),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_tall", "trp_player"),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 200),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_map_types_end),
        (val_sub, ":end_cond", custom_banner_flag_map_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  ("color_selection", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_color", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 125),
        (assign, ":pos_y", 450),
        (try_for_range, ":i_color", 0, 42),
          (call_script, "script_get_custom_banner_color_from_index", ":i_color"),
          (assign, ":cur_color", reg0),
          (create_image_button_overlay_with_tableau_material, reg1, "mesh_color_picker", "tableau_color_picker", ":cur_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 50),
          (try_begin),
            (store_mod, ":mod_i_color", ":i_color", 7),
            (eq, ":mod_i_color", 6),
            (assign, ":pos_x", 125),
            (val_sub, ":pos_y", 50),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 500),
          (overlay_set_size, reg1, pos1),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_index", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_color", ":cur_color"),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", 64),
        (try_for_range, ":i_color", 0, ":end_cond"),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_get_slot, ":output_color", "trp_temp_array_a", ":trp_slot_color"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":output_color"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
     ]),

  # ("marshall_selection", 0, mesh_load_window,
   # [
     # (ti_on_presentation_load,
      # [
        # (assign, "$g_presentation_obj_marshall_selection_1", -1),
        # (assign, "$g_presentation_obj_marshall_selection_2", -1),
        # (assign, "$g_presentation_obj_marshall_selection_3", -1),
        # (set_fixed_point_multiplier, 1000),
        # (assign, "$g_presentation_next_presentation", -1),

        # (store_add, ":total_renown", "$g_presentation_marshall_selection_max_renown_1", "$g_presentation_marshall_selection_max_renown_2"),
        # (faction_get_slot, ":king", "$players_kingdom", slot_faction_leader),

        # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
        # (create_text_overlay, reg1, "@Candidate #1: {s1}", tf_center_justify),
        # (position_set_x, pos1, 200),
        # (position_set_y, pos1, 600),
        # (overlay_set_position, reg1, pos1),
        # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
        # (create_text_overlay, reg1, "@Candidate #2: {s1}", tf_center_justify),
        # (position_set_x, pos1, 800),
        # (position_set_y, pos1, 600),
        # (overlay_set_position, reg1, pos1),
        # (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_1_troop"),
        # (position_set_x, pos1, 500),
        # (position_set_y, pos1, 500),
        # (overlay_set_size, reg1, pos1),
        # (position_set_x, pos1, 100),
        # (position_set_y, pos1, 300),
        # (overlay_set_position, reg1, pos1),
        # (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$g_presentation_marshall_selection_max_renown_2_troop"),
        # (position_set_x, pos1, 500),
        # (position_set_y, pos1, 500),
        # (overlay_set_size, reg1, pos1),
        # (position_set_x, pos1, 700),
        # (position_set_y, pos1, 300),
        # (overlay_set_position, reg1, pos1),

        # (assign, ":lord_index", "$g_presentation_input"),
        # (val_add, "$g_presentation_input", 1),

        # (try_begin),
          # (lt, ":lord_index", 0),
          # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          # (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
          # (str_store_troop_name, s3, ":king"),
          # (str_store_faction_name, s4, "$players_kingdom"),
          # (create_text_overlay, reg1, "@{s3} of {s4} wishes to select a new marshall and invites his vassals for a counsel. {s1} and {s2} are the likely candidates.", tf_center_justify),
          # (position_set_x, pos1, 500),
          # (position_set_y, pos1, 200),
          # (overlay_set_position, reg1, pos1),

          # (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          # (position_set_x, pos1, 500),
          # (position_set_y, pos1, 100),
          # (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
          # (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),
        # (else_try),
          # (assign, ":cur_index", ":lord_index"),
          # (try_for_range_backwards, ":loop_var", "trp_kingdom_heroes_including_player_begin", active_npcs_end),
            # (ge, ":cur_index", 0),
            # (assign, ":cur_troop", ":loop_var"),
            # (assign, ":continue", 0),
            # (try_begin),
              # (eq, ":loop_var", "trp_kingdom_heroes_including_player_begin"),
              # (assign, ":cur_troop", "trp_player"),
              # (try_begin),
                # (eq, "$g_player_is_captive", 0),
                # (assign, ":continue", 1),
              # (try_end),
            # (else_try),
              # (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
              # (eq, "$players_kingdom", ":cur_troop_faction"),
              # #(troop_slot_eq, ":cur_troop", slot_troop_is_prisoner, 0),
              # (neg|troop_slot_ge, ":cur_troop", slot_troop_prisoner_of_party, 0),
              # (troop_slot_ge, ":cur_troop", slot_troop_leaded_party, 1),
              # (troop_slot_eq, ":cur_troop", slot_troop_occupation, slto_kingdom_hero),
              # (neg|faction_slot_eq, ":cur_troop_faction", slot_faction_leader, ":cur_troop"),
              # (assign, ":continue", 1),
            # (try_end),
            # (eq, ":continue", 1),

            # (neq, "$g_presentation_marshall_selection_max_renown_1_troop", ":cur_troop"),
            # (neq, "$g_presentation_marshall_selection_max_renown_2_troop", ":cur_troop"),

            # (val_sub, ":cur_index", 1),
            # (lt, ":cur_index", 0),

            # (assign, "$g_presentation_next_presentation", "prsnt_marshall_selection"),

            # (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", ":cur_troop"),
            # (position_set_x, pos1, 300),
            # (position_set_y, pos1, 300),
            # (overlay_set_size, reg1, pos1),
            # (position_set_x, pos1, 440),
            # (position_set_y, pos1, 400),
            # (overlay_set_position, reg1, pos1),

            # (try_begin),
              # (eq, ":cur_troop", "trp_player"),
              # (create_text_overlay, reg1, "@Who do you wish to support?", tf_center_justify),
              # (position_set_x, pos1, 500),
              # (position_set_y, pos1, 200),
              # (overlay_set_position, reg1, pos1),
              # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
              # (create_button_overlay, "$g_presentation_obj_marshall_selection_2", "@{!}{s1}", tf_center_justify),
              # (position_set_x, pos1, 300),
              # (position_set_y, pos1, 100),
              # (overlay_set_position, "$g_presentation_obj_marshall_selection_2", pos1),
              # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_2_troop"),
              # (create_button_overlay, "$g_presentation_obj_marshall_selection_3", "@{!}{s1}", tf_center_justify),
              # (position_set_x, pos1, 700),
              # (position_set_y, pos1, 100),
              # (overlay_set_position, "$g_presentation_obj_marshall_selection_3", pos1),
            # (else_try),
              # (str_store_troop_name, s1, ":cur_troop"),
              # (store_random_in_range, ":random_renown", 0, ":total_renown"),
              # (val_sub, ":random_renown", "$g_presentation_marshall_selection_max_renown_1"),
              # (try_begin),
                # (lt, ":random_renown", 0),
                # (val_add, "$g_presentation_marshall_selection_1_vote", 1),
                # (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_1_troop"),
              # (else_try),
                # (val_add, "$g_presentation_marshall_selection_2_vote", 1),
                # (str_store_troop_name, s2, "$g_presentation_marshall_selection_max_renown_2_troop"),
              # (try_end),
              # (create_text_overlay, reg1, "@{s1} gives his support to {s2}.", tf_center_justify),
              # (position_set_x, pos1, 500),
              # (position_set_y, pos1, 200),
              # (overlay_set_position, reg1, pos1),

              # (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
              # (position_set_x, pos1, 500),
              # (position_set_y, pos1, 100),
              # (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
            # (try_end),
          # (try_end),
        # (try_end),

        # (assign, reg0, "$g_presentation_marshall_selection_1_vote"),
        # (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        # (position_set_x, pos1, 200),
        # (position_set_y, pos1, 550),
        # (overlay_set_position, reg1, pos1),
        # (assign, reg0, "$g_presentation_marshall_selection_2_vote"),
        # (create_text_overlay, reg1, "@Number of Supporters: {reg0}", tf_center_justify),
        # (position_set_x, pos1, 800),
        # (position_set_y, pos1, 550),
        # (overlay_set_position, reg1, pos1),

        # (try_begin),
          # (lt, "$g_presentation_next_presentation", 0),
          # (try_begin),
            # (gt, "$g_presentation_marshall_selection_2_vote", "$g_presentation_marshall_selection_1_vote"),
            # (assign, ":local_temp", "$g_presentation_marshall_selection_max_renown_1_troop"),
            # (assign, "$g_presentation_marshall_selection_max_renown_1_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
            # (assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":local_temp"),
          # (try_end),
          # #Winner is set to g_presentation_marshall_selection_max_renown_1_troop
          # (str_store_troop_name, s1, "$g_presentation_marshall_selection_max_renown_1_troop"),
          # (str_store_troop_name, s2, ":king"),
          # (str_store_faction_name, s3, "$players_kingdom"),
          # (create_text_overlay, reg1, "@{s2} has heard his vassals' counsel. He selects {s1} as the marshall of {s3}.", tf_center_justify),
          # (position_set_x, pos1, 500),
          # (position_set_y, pos1, 200),
          # (overlay_set_position, reg1, pos1),
          # (create_button_overlay, "$g_presentation_obj_marshall_selection_1", "@Continue...", tf_center_justify),
          # (position_set_x, pos1, 500),
          # (position_set_y, pos1, 100),
          # (overlay_set_position, "$g_presentation_obj_marshall_selection_1", pos1),
        # (try_end),

        # (presentation_set_duration, 999999),
        # ]),
     # (ti_on_presentation_event_state_change,
      # [
        # (store_trigger_param_1, ":object"),
        # (try_begin),
          # (eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          # (val_add, "$g_presentation_marshall_selection_1_vote", 1),
          # (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", 2),
          # (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -2),
        # (else_try),
          # (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          # (val_add, "$g_presentation_marshall_selection_2_vote", 1),
          # (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_1_troop", -2),
          # (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", 2),
        # (try_end),
        # (try_begin),
          # (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_1"),
          # (this_or_next|eq, ":object", "$g_presentation_obj_marshall_selection_2"),
          # (eq, ":object", "$g_presentation_obj_marshall_selection_3"),
          # (try_begin),
            # (ge, "$g_presentation_next_presentation", 0),
            # (start_presentation, "$g_presentation_next_presentation"),
          # (else_try),
            # (try_begin),
              # (neg|faction_slot_eq, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
              # (call_script, "script_check_and_finish_active_army_quests_for_faction", "$players_kingdom"),
            # (try_end),

           # (faction_get_slot, ":old_marshall", "$players_kingdom", slot_faction_marshall),
           # (try_begin),
             # (ge, ":old_marshall", 0),
             # (party_is_active, ":old_marshall"),
             # (party_set_marshall, ":old_marshall", 0),
           # (try_end),  

            # (faction_set_slot, "$players_kingdom", slot_faction_marshall, "$g_presentation_marshall_selection_max_renown_1_troop"),
            # (try_begin),
              # (eq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
              # (call_script, "script_change_player_relation_with_troop", "$g_presentation_marshall_selection_max_renown_2_troop", -3),
            # (try_end),
            # (assign, "$g_recalculate_ais", 1),
            # (assign, "$g_presentation_marshall_selection_ended", 1),
            # (presentation_set_duration, 0),
          # (try_end),
        # (try_end),
        # ]),
     # ]),
  
  ("battle",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_group0_selected", 0),
        (assign, "$g_formation_group1_selected", 0),
        (assign, "$g_formation_group2_selected", 0),
        (assign, "$g_formation_group3_selected", 0),
        (assign, "$g_formation_group4_selected", 0),
        (assign, "$g_formation_group5_selected", 0),
        (assign, "$g_formation_group6_selected", 0),
        (assign, "$g_formation_group7_selected", 0),
        (assign, "$g_formation_group8_selected", 0),
        (assign, "$g_presentation_obj_battle_but0", -1),
        (assign, "$g_presentation_obj_battle_but1", -1),
        (assign, "$g_presentation_obj_battle_but2", -1),
        (assign, "$g_presentation_obj_battle_but3", -1),
        (assign, "$g_presentation_obj_battle_but4", -1),
        (assign, "$g_presentation_obj_battle_but5", -1),
        (assign, "$g_presentation_obj_battle_but6", -1),
        (assign, "$g_presentation_obj_battle_but7", -1),
        (assign, "$g_presentation_obj_battle_but8", -1),
        (str_clear, s7),

        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        (try_end),

        (get_player_agent_no, ":player_agent"),
        (agent_get_troop_id, ":player_troop_id", ":player_agent"),

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@Action", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 270),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Mount", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, reg1, 0xFFAAAAAA),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (assign, "$group0_has_troops", 0),
        (assign, "$group1_has_troops", 0),
        (assign, "$group2_has_troops", 0),
        (assign, "$group3_has_troops", 0),
        (assign, "$group4_has_troops", 0),
        (assign, "$group5_has_troops", 0),
        (assign, "$group6_has_troops", 0),
        (assign, "$group7_has_troops", 0),
        (assign, "$group8_has_troops", 0),
        (party_get_num_companion_stacks, ":num_stacks", "p_main_party"),
        (assign, "$num_classes", 0),
        (try_for_range, ":troop_iterator", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":cur_troop_id", "p_main_party", ":troop_iterator"),
          (troop_get_class, ":troop_class", ":cur_troop_id"),
          (neq, ":player_troop_id", ":cur_troop_id"),
          (try_begin),
            (eq, ":troop_class", 0),
            (try_begin),
              (neq, "$group0_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group0_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 1),
            (try_begin),
              (neq, "$group1_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group1_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 2),
            (try_begin),
              (neq, "$group2_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group2_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 3),
            (try_begin),
              (neq, "$group3_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group3_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 4),
            (try_begin),
              (neq, "$group4_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group4_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 5),
            (try_begin),
              (neq, "$group5_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group5_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 6),
            (try_begin),
              (neq, "$group6_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group6_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 7),
            (try_begin),
              (neq, "$group7_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group7_has_troops", 1),
          (else_try),
            (eq, ":troop_class", 8),
            (try_begin),
              (neq, "$group8_has_troops", 1),
              (val_add, "$num_classes", 1),
            (try_end),
            (assign, "$group8_has_troops", 1),
          (try_end),
        (try_end),

        (assign, ":stat_position_x", 0),
        (assign, ":stat_position_y", 653),
        (assign, ":stat_position_check_x", 20),
        (assign, ":stat_position_check_y", 662),
        (assign, ":stat_position_name_x", 50),
        (assign, ":stat_position_name_y", 660),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but0", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but0", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but0", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but0", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but0", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check0", pos2),
          (val_add, ":stat_position_check_y", -40),

          (create_text_overlay, "$g_presentation_obj_battle_name0", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name0", pos3),
        
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but0_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but0_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group1_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but1", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but1", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but1", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but1", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but1", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check1", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name1", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name1", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but1_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but1_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group2_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but2", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but2", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but2", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but2", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but2", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check2", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check2", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name2", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name2", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but2_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but2_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group3_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but3", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but3", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but3", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but3", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but3", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check3", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check3", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name3", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name3", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but3_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but3_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group4_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but4", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but4", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but4", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but4", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but4", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check4", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check4", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name4", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name4", pos3),
          (val_add, ":stat_position_name_y", -40),
        
          (create_text_overlay, "$g_presentation_but4_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but4_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group5_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but5", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but5", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but5", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but5", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but5", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check5", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check5", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name5", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name5", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but5_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but5_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group6_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but6", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but6", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but6", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but6", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but6", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check6", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check6", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name6", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name6", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but6_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but6_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group7_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but7", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but7", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but7", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but7", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but7", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check7", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check7", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name7", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name7", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but7_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but7_weapon_usage", s7, tf_center_justify),
        (try_end),
        (try_begin),
          (eq, "$group8_has_troops", 1),
          (create_image_button_overlay, "$g_presentation_obj_battle_but8", "mesh_white_plane", "mesh_white_plane"),
          (position_set_x, pos1, ":stat_position_x"),
          (position_set_y, pos1, ":stat_position_y"),
          (overlay_set_position, "$g_presentation_obj_battle_but8", pos1),
          (val_add, ":stat_position_y", -40),

          (position_set_x, pos1, 32500),
          (position_set_y, pos1, 2000),
          (overlay_set_size, "$g_presentation_obj_battle_but8", pos1),
          (overlay_set_alpha, "$g_presentation_obj_battle_but8", 0),
          (overlay_set_color, "$g_presentation_obj_battle_but8", 0xFFFF00),

          (create_check_box_overlay, "$g_presentation_obj_battle_check8", "mesh_checkbox_off", "mesh_checkbox_on"),          
          (position_set_x, pos2, ":stat_position_check_x"),
          (position_set_y, pos2, ":stat_position_check_y"),
          (overlay_set_position, "$g_presentation_obj_battle_check8", pos2),
          (val_add, ":stat_position_check_y", -40),        

          (create_text_overlay, "$g_presentation_obj_battle_name8", s7, 0),
          (position_set_x, pos3, ":stat_position_name_x"),
          (position_set_y, pos3, ":stat_position_name_y"),
          (overlay_set_position, "$g_presentation_obj_battle_name8", pos3),
          (val_add, ":stat_position_name_y", -40),

          (create_text_overlay, "$g_presentation_but8_movement", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_riding", s7, tf_center_justify),
          (create_text_overlay, "$g_presentation_but8_weapon_usage", s7, tf_center_justify),
        (try_end),
        
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),
        
        (call_script, "script_update_order_panel", ":player_team"),

        #(create_button_overlay, "$g_presentation_obj_battle_10", "@Hold This Position", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_11", "@Follow Me", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_12", "@Charge", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_13", "@Advance", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_14", "@Fall Back", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_16", "@Spread Out", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_17", "@Stand Ground", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_18", "@Mount", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_19", "@Dismount", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_20", "@Use Any Weapon", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_21", "@Use Blunt Weapons", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_28", "@Hold Your Fire", tf_center_justify),
        #(create_button_overlay, "$g_presentation_obj_battle_29", "@Fire At Will", tf_center_justify),
        
        (assign, ":y_position_for_order_buttons", 640),
        (assign, ":addition_y_position", "$num_classes"),
        (val_mul, ":addition_y_position", -40),
        (val_add, ":y_position_for_order_buttons", ":addition_y_position"),

        (create_listbox_overlay, "$g_presentation_obj_battle_10", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_11", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_12", "str_space", 0),
        (create_listbox_overlay, "$g_presentation_obj_battle_13", "str_space", 0),
        
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Ground"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Spread Out"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Stand Closer"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Fall Back"),
        ##(overlay_add_item, "$g_presentation_obj_battle_10", "@Advance"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Charge"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Follow Me"),
        (overlay_add_item, "$g_presentation_obj_battle_10", "@Hold This Position"),

        (create_button_overlay, "$g_presentation_obj_battle_14", "@Spread Out", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_14", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_15", "@Stand Closer", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_15", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_16", "@Fall Back", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_16", 0xFFFFFFFF),
        (create_button_overlay, "$g_presentation_obj_battle_17", "@Advance", tf_center_justify|tf_single_line|tf_with_outline),
        (overlay_set_color, "$g_presentation_obj_battle_17", 0xFFFFFFFF),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_10", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 205),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_10", pos1),
        (overlay_set_alpha, "$g_presentation_obj_battle_10", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_10", "$g_latest_order_1"),

        (val_add, ":y_position_for_order_buttons", -40), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 40), #new
        (overlay_set_position, "$g_presentation_obj_battle_14", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_14", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -20), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 20), #new
        (overlay_set_position, "$g_presentation_obj_battle_15", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_15", 0x60), #new

        (val_add, ":y_position_for_order_buttons", -0), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", 0), #new
        (overlay_set_position, "$g_presentation_obj_battle_16", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_16", 0x60), #new

        (val_add, ":y_position_for_order_buttons", 20), #new
        (position_set_x, pos1, 130), #new
        (position_set_y, pos1, ":y_position_for_order_buttons"), #new
        (val_add, ":y_position_for_order_buttons", -20), #new
        (overlay_set_position, "$g_presentation_obj_battle_17", pos1), #new
        #(overlay_set_alpha, "$g_presentation_obj_battle_17", 0x60), #new



        (overlay_add_item, "$g_presentation_obj_battle_11", "@Dismount"),
        (overlay_add_item, "$g_presentation_obj_battle_11", "@Mount"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_11", pos1),

        (position_set_x, pos1, 350),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_11", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_11", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_11", "$g_latest_order_2"),



        (overlay_add_item, "$g_presentation_obj_battle_12", "@Fire At Will"),
        (overlay_add_item, "$g_presentation_obj_battle_12", "@Hold Your Fire"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_12", pos1),

        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (overlay_set_position, "$g_presentation_obj_battle_12", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_12", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_12", "$g_latest_order_3"),



        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Blunt Weapons"),
        (overlay_add_item, "$g_presentation_obj_battle_13", "@Use Any Weapon"),
        
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, "$g_presentation_obj_battle_13", pos1),

        (val_add, ":y_position_for_order_buttons", -35),
        (position_set_x, pos1, 495),
        (position_set_y, pos1, ":y_position_for_order_buttons"),
        (val_add, ":y_position_for_order_buttons", 35),
        (overlay_set_position, "$g_presentation_obj_battle_13", pos1),

        (overlay_set_alpha, "$g_presentation_obj_battle_13", 0x60),
        (overlay_set_val, "$g_presentation_obj_battle_13", "$g_latest_order_4"),



        (create_text_overlay, "$g_presentation_obj_battle_22", "str_us_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_23", "str_allies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_24", "str_enemies_", 0),
        (create_text_overlay, "$g_presentation_obj_battle_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_28", "str_routed", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_battle_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),
        
        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_routed", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),


        (create_image_button_overlay, "$g_battle_report_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_report_plane", 0),
        (position_set_x, pos1, 15500),
        (position_set_y, pos1, 6000),
        (overlay_set_size, "$g_battle_report_plane", pos1),
        (position_set_x, pos1, 672),
        (position_set_y, pos1, 275),
        (overlay_set_position, "$g_battle_report_plane", pos1),
        (overlay_set_alpha, "$g_battle_report_plane", 0x44),
        (overlay_set_color, "$g_battle_report_plane", 0x1166BB),


        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),

        (overlay_set_size, "$g_presentation_obj_battle_14", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_15", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_16", pos1), #new
        (overlay_set_size, "$g_presentation_obj_battle_17", pos1), #new

        (overlay_set_size, "$g_presentation_obj_battle_22", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_23", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_24", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_25", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_26", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_27", pos1),
        (overlay_set_size, "$g_presentation_obj_battle_28", pos1),
        (overlay_set_size, "$g_battle_us_ready", pos1),
        (overlay_set_size, "$g_battle_us_wounded", pos1),
        (overlay_set_size, "$g_battle_us_routed", pos1),
        (overlay_set_size, "$g_battle_us_dead", pos1),
        (overlay_set_size, "$g_battle_enemies_ready", pos1),
        (overlay_set_size, "$g_battle_enemies_wounded", pos1),
        (overlay_set_size, "$g_battle_enemies_routed", pos1),
        (overlay_set_size, "$g_battle_enemies_dead", pos1),
        (overlay_set_size, "$g_battle_allies_ready", pos1),        
        (overlay_set_size, "$g_battle_allies_wounded", pos1),
        (overlay_set_size, "$g_battle_allies_routed", pos1),
        (overlay_set_size, "$g_battle_allies_dead", pos1),

        (assign, ":stat_position_x", 675),
        (assign, ":stat_position_y", 280),

        (val_add, ":stat_position_x", 70),
        (val_add, ":stat_position_y", 90),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_25", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_26", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_28", pos1),
        (val_add, ":stat_position_x", 70),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_battle_27", pos1),

        (val_add, ":stat_position_x", -280),
        (val_add, ":stat_position_y", -30),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_22", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_23", pos1),
        (val_add, ":stat_position_y", -30),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_battle_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (assign, "$g_battle_map_width", 300),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (assign, "$g_battle_map_height", 300),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),
        
        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x44),

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

        (call_script, "script_update_order_panel_checked_classes"),
        (call_script, "script_update_order_panel_statistics_and_map"),

        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, "$group0_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check0"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group0_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group1_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group1_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group2_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group2_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group3_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group3_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group4_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group4_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group5_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group5_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group6_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group6_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group7_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check7"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group7_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, "$group8_has_troops", 1),
          (eq, ":object", "$g_presentation_obj_battle_check8"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_group8_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (assign, ":update_listeners", 1),
        
          (assign, "$g_formation_group0_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check0", 1),

          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group1_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check1", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group2_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check2", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group3_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check3", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group4_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check4", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group5_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check5", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group6_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check6", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group7_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check7", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group8_has_troops", 1),
            (assign, "$g_formation_group8_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check8", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (assign, ":update_listeners", 1),

          (assign, "$g_formation_group8_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_battle_but8", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_battle_check8", 1),

          (try_begin),
            (eq, "$group0_has_troops", 1),
            (assign, "$g_formation_group0_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check0", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but0", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group1_has_troops", 1),
            (assign, "$g_formation_group1_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check1", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but1", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group2_has_troops", 1),
            (assign, "$g_formation_group2_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check2", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but2", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group3_has_troops", 1),
            (assign, "$g_formation_group3_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check3", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but3", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group4_has_troops", 1),
            (assign, "$g_formation_group4_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check4", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but4", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group5_has_troops", 1),
            (assign, "$g_formation_group5_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check5", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but5", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group6_has_troops", 1),
            (assign, "$g_formation_group6_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check6", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but6", 250, 0),
          (try_end),
          (try_begin),
            (eq, "$group7_has_troops", 1),
            (assign, "$g_formation_group7_selected", 0),
            (overlay_set_val, "$g_presentation_obj_battle_check7", 0),
            (overlay_animate_to_alpha, "$g_presentation_obj_battle_but7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_10"),
          (try_begin),
            (eq, ":value", 3),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 3),
          (else_try),
            (eq, ":value", 2),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 2),
          (else_try),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 4),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 3),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 2),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
##            (call_script, "script_update_order_panel", ":player_team"),
##          (else_try),
##            (eq, ":value", 1),
##            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
##            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_1", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_11"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_2", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_12"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold_fire),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_3", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_3", 0),
          (try_end),        
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_13"),
          (try_begin),
            (eq, ":value", 1),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 1),
          (else_try),
            (eq, ":value", 0),
            (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
            (call_script, "script_update_order_panel", ":player_team"),
            (assign, "$g_latest_order_4", 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_group0_selected", 1),
            (team_give_order, ":player_team", 0, mordr_hold),
            (team_set_order_position, ":player_team", 0, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group1_selected", 1),
            (team_give_order, ":player_team", 1, mordr_hold),
            (team_set_order_position, ":player_team", 1, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group2_selected", 1),
            (team_give_order, ":player_team", 2, mordr_hold),
            (team_set_order_position, ":player_team", 2, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group3_selected", 1),
            (team_give_order, ":player_team", 3, mordr_hold),
            (team_set_order_position, ":player_team", 3, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group4_selected", 1),
            (team_give_order, ":player_team", 4, mordr_hold),
            (team_set_order_position, ":player_team", 4, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group5_selected", 1),
            (team_give_order, ":player_team", 5, mordr_hold),
            (team_set_order_position, ":player_team", 5, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group6_selected", 1),
            (team_give_order, ":player_team", 6, mordr_hold),
            (team_set_order_position, ":player_team", 6, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group7_selected", 1),
            (team_give_order, ":player_team", 7, mordr_hold),
            (team_set_order_position, ":player_team", 7, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_group8_selected", 1),
            (team_give_order, ":player_team", 8, mordr_hold),
            (team_set_order_position, ":player_team", 8, pos3),
          (try_end),        
# formations by motomataru
		  (assign, ":fixed_point_multiplier", 1),
		  (convert_to_fixed_point, ":fixed_point_multiplier"),
		  (set_fixed_point_multiplier, 100),
		  (call_script, "script_team_get_position_of_enemies", Enemy_Team_Pos, "$fplayer_team_no", grc_everyone),
		  
		  (try_for_range, ":division", 0, 9),
			(assign, ":do_it", 0),
			(try_begin),
				(eq, ":division", 0),
				(eq, "$g_formation_group0_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 1),
				(eq, "$g_formation_group1_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 2),
				(eq, "$g_formation_group2_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 3),
				(eq, "$g_formation_group3_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 4),
				(eq, "$g_formation_group4_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 5),
				(eq, "$g_formation_group5_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 6),
				(eq, "$g_formation_group6_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 7),
				(eq, "$g_formation_group7_selected", 1),
				(assign, ":do_it", 1),
			(else_try),
				(eq, ":division", 8),
				(eq, "$g_formation_group8_selected", 1),
				(assign, ":do_it", 1),
			(try_end),
			(eq, ":do_it", 1),
			
			(store_add, ":slot", slot_team_d0_formation, ":division"),
			(team_get_slot, ":formation", "$fplayer_team_no", ":slot"),
			(neq, ":formation", formation_none),
			(copy_position, pos1, pos3),
			(call_script, "script_point_y_toward_position", pos1, Enemy_Team_Pos),			
			(call_script, "script_set_formation_destination", "$fplayer_team_no", ":division", pos1),
			
			(store_add, ":slot", slot_team_d0_size, ":division"),
			(team_get_slot, ":troop_count", "$fplayer_team_no", ":slot"),
			
			(store_add, ":slot", slot_team_d0_formation_space, ":division"),
			(team_get_slot, ":spacing", "$fplayer_team_no", ":slot"),
			
			(store_add, ":slot", slot_team_d0_type, ":division"),
			(try_begin),
				(team_slot_eq, "$fplayer_team_no", ":slot", sdt_archer),
				(call_script, "script_get_centering_amount", formation_default, ":troop_count", ":spacing"),
				(val_mul, reg0, -1),
				(position_move_x, pos1, reg0),
				(call_script, "script_form_archers", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0, ":formation"),
			(else_try),
			    (this_or_next|team_slot_eq, "$fplayer_team_no", ":slot", sdt_cavalry),
				(team_slot_eq, "$fplayer_team_no", ":slot", sdt_harcher),
				(call_script, "script_form_cavalry", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0),
			(else_try),
				(call_script, "script_get_centering_amount", ":formation", ":troop_count", ":spacing"),
				(position_move_x, pos1, reg0),
				(call_script, "script_form_infantry", "$fplayer_team_no", ":division", "$fplayer_agent_no", ":spacing", 0, ":formation"),
			(try_end),

			(store_add, ":slot", slot_team_d0_move_order, ":division"),
			(team_set_slot, "$fplayer_team_no", ":slot", mordr_hold),	
		  (try_end),	#try_for_range ":division"
		  (set_fixed_point_multiplier, ":fixed_point_multiplier"),
# end formations
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
###horse stamina chief CC
##               (try_begin),
##        ## horse stamina
##        (create_text_overlay, "$g_presentation_obj_40", "@0", tf_right_align|tf_vertical_align_center),
##        (position_set_x, pos1, 990),
##        (position_set_y, pos1, 735),
##        (overlay_set_position, "$g_presentation_obj_40", pos1),
##        (position_set_x, pos1, 500),
##        (position_set_y, pos1, 500),
##        (overlay_set_size, "$g_presentation_obj_40", pos1),
##        (overlay_set_color, "$g_presentation_obj_40", 0xFFFFFF),
##        (overlay_set_alpha, "$g_presentation_obj_40", 0),
##        
##        (call_script, "script_update_order_panel_map"),
##      (try_end),
###horse stamina acaba chief
        (try_end),
        
        (try_begin),
          (eq, ":update_listeners", 1),
          (team_set_order_listener, ":player_team", -1),
          (try_begin),
            (this_or_next|eq, "$g_formation_group0_selected", 1),
            (eq, "$group0_has_troops", 0),
            (this_or_next|eq, "$g_formation_group1_selected", 1),
            (eq, "$group1_has_troops", 0),
            (this_or_next|eq, "$g_formation_group2_selected", 1),
            (eq, "$group2_has_troops", 0),
            (this_or_next|eq, "$g_formation_group3_selected", 1),
            (eq, "$group3_has_troops", 0),
            (this_or_next|eq, "$g_formation_group4_selected", 1),
            (eq, "$group4_has_troops", 0),
            (this_or_next|eq, "$g_formation_group5_selected", 1),
            (eq, "$group5_has_troops", 0),
            (this_or_next|eq, "$g_formation_group6_selected", 1),
            (eq, "$group6_has_troops", 0),
            (this_or_next|eq, "$g_formation_group7_selected", 1),
            (eq, "$group7_has_troops", 0),
            (this_or_next|eq, "$g_formation_group8_selected", 1),
            (eq, "$group8_has_troops", 0),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_group0_selected", 1),
            (team_set_order_listener, ":player_team", 0, 1),
          (else_try),
            (eq, "$g_formation_group1_selected", 1),
            (team_set_order_listener, ":player_team", 1, 1),
          (else_try),
            (eq, "$g_formation_group2_selected", 1),
            (team_set_order_listener, ":player_team", 2, 1),
          (else_try),
            (eq, "$g_formation_group3_selected", 1),
            (team_set_order_listener, ":player_team", 3, 1),
          (else_try),
            (eq, "$g_formation_group4_selected", 1),
            (team_set_order_listener, ":player_team", 4, 1),
          (else_try),
            (eq, "$g_formation_group5_selected", 1),
            (team_set_order_listener, ":player_team", 5, 1),
          (else_try),
            (eq, "$g_formation_group6_selected", 1),
            (team_set_order_listener, ":player_team", 6, 1),
          (else_try),
            (eq, "$g_formation_group7_selected", 1),
            (team_set_order_listener, ":player_team", 7, 1),
          (else_try),
            (eq, "$g_formation_group8_selected", 1),
            (team_set_order_listener, ":player_team", 8, 1),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_battle_but0"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but0_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but0_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name0", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but1_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but1_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but2_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but2_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but3_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but3_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but4"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but4_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but4_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name4", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but5"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but5_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but5_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name5", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but6"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but6_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but6_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name6", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but7"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but7_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but7_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_but8"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_but8_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_but8_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_battle_name8", 250, 0),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_group0_hear),
          (this_or_next|game_key_clicked, gk_group1_hear),
          (this_or_next|game_key_clicked, gk_group2_hear),
          (this_or_next|game_key_clicked, gk_group3_hear),
          (this_or_next|game_key_clicked, gk_group4_hear),
          (this_or_next|game_key_clicked, gk_group5_hear),
          (this_or_next|game_key_clicked, gk_group6_hear),
          (this_or_next|game_key_clicked, gk_group7_hear),
          (this_or_next|game_key_clicked, gk_group8_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_1),
          (this_or_next|game_key_clicked, gk_order_2),
          (this_or_next|game_key_clicked, gk_order_3),
          (this_or_next|game_key_clicked, gk_order_4),
          (this_or_next|game_key_clicked, gk_order_5),
          (game_key_clicked, gk_order_6),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),


    ("sliders",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (create_slider_overlay, "$g_presentation_obj_sliders_1", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_2", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_3", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_sliders_4", 0, 100),
        (assign, reg1, 25),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_sliders_5", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_6", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_7", s1),
        (create_text_overlay, "$g_presentation_obj_sliders_8", s1),
        (assign, "$g_presentation_obj_sliders_1_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_1", 25),
        (assign, "$g_presentation_obj_sliders_2_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_2", 25),
        (assign, "$g_presentation_obj_sliders_3_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_3", 25),
        (assign, "$g_presentation_obj_sliders_4_val", 25),
        (overlay_set_val, "$g_presentation_obj_sliders_4", 25),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_3", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_4", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_sliders_5", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_sliders_6", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_sliders_7", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_8", pos1),
        (position_set_x, pos1, 500),
        (overlay_set_size, "$g_presentation_obj_sliders_3", pos1),
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":val_changed", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, "$g_presentation_obj_sliders_1_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_2"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, "$g_presentation_obj_sliders_2_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_3"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, "$g_presentation_obj_sliders_3_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_4"),
          (try_begin),
            (neq, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, "$g_presentation_obj_sliders_4_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":val_changed", 1),
          (assign, ":sum_values", 0),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_1_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_2_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_3_val"),
          (val_add, ":sum_values", "$g_presentation_obj_sliders_4_val"),
          (store_sub, ":difference", 100, ":sum_values"),
          (assign, ":obj_1_new_val", "$g_presentation_obj_sliders_1_val"),
          (assign, ":obj_2_new_val", "$g_presentation_obj_sliders_2_val"),
          (assign, ":obj_3_new_val", "$g_presentation_obj_sliders_3_val"),
          (assign, ":obj_4_new_val", "$g_presentation_obj_sliders_4_val"),
          (assign, ":adder", 1),
          (assign, ":between_1", 0),
          (assign, ":between_2", 100),
          (try_begin),
            (lt, ":difference", 0),
            (val_mul, ":difference", -1),
            (assign, ":adder", -1),
            (assign, ":between_1", 1),
            (assign, ":between_2", 101),
          (try_end),
          (store_sub, ":sum_non_changed_values", ":sum_values", ":value"),
          (val_add, ":sum_non_changed_values", 30),
          (try_for_range, ":unused", 0, ":difference"),
            (store_random_in_range, ":random_no", 0, ":sum_non_changed_values"),
            (try_begin),
              (neq, ":object", "$g_presentation_obj_sliders_1"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_1_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_1_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_1_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_2"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_2_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_2_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_2_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_sliders_3"),
              (val_sub, ":random_no", "$g_presentation_obj_sliders_3_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_3_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_3_new_val", ":adder"),
            (else_try),
              (is_between, ":obj_4_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_4_new_val", ":adder"),
            (else_try),
              (val_add, ":difference", 1),
            (try_end),
          (try_end),
          (assign, "$g_presentation_obj_sliders_1_val", ":obj_1_new_val"),
          (assign, "$g_presentation_obj_sliders_2_val", ":obj_2_new_val"),
          (assign, "$g_presentation_obj_sliders_3_val", ":obj_3_new_val"),
          (assign, "$g_presentation_obj_sliders_4_val", ":obj_4_new_val"),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_sliders_1", "$g_presentation_obj_sliders_1_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_2", "$g_presentation_obj_sliders_2_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_3", "$g_presentation_obj_sliders_3_val"),
        (overlay_set_val, "$g_presentation_obj_sliders_4", "$g_presentation_obj_sliders_4_val"),
        (assign, reg1, "$g_presentation_obj_sliders_1_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_5", s1),
        (assign, reg1, "$g_presentation_obj_sliders_2_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_6", s1),
        (assign, reg1, "$g_presentation_obj_sliders_3_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_7", s1),
        (assign, reg1, "$g_presentation_obj_sliders_4_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_sliders_8", s1),
        ]),
      ]),

###grueso tempered chief########
##########diplomacy chief empieza
    ("dplmc_policy_management",0,mesh_load_window,[
      (ti_on_presentation_load,
       [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),
       		##nested diplomacy start+ insert g_presentation_obj_5, g_presentation_obj_6 and increment others
		
		##Moved up here from below
        (faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
        (faction_get_slot, ":aristocratcy", "fac_player_supporters_faction", dplmc_slot_faction_aristocracy),
        (faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
        (faction_get_slot, ":quality", "fac_player_supporters_faction", dplmc_slot_faction_quality),
		(faction_get_slot, ":mercantilism", "fac_player_supporters_faction", dplmc_slot_faction_quality),#<- dplmc+ added

        # done
        (create_game_button_overlay, "$g_presentation_obj_12", "@Done"),#<- dplmc+ changed obj_10 to obj_12
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_12", pos1),#<- dplmc_ changed obj_10 to obj_12
        
        # title
        (create_text_overlay, reg1, "@Select your domestic policy", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 445),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),

        (create_slider_overlay, "$g_presentation_obj_sliders_1", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_2", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_3", -3, 3),
        (create_slider_overlay, "$g_presentation_obj_sliders_4", -3, 3),
		(create_slider_overlay, "$g_presentation_obj_sliders_5", -3, 3),#<-dplmc+ added
        (assign, reg1, 25),
		##dplmc+ start incremented sliders by 1... (and changed since things might not be at their initial values)
		(store_add, ":text", "str_dplmc_neither_centralize_nor_decentralized", ":centralization"),
        (create_text_overlay, "$g_presentation_obj_sliders_6", ":text"),
		(store_add, ":text", "str_dplmc_neither_aristocratic_nor_plutocratic", ":aristocratcy"),
        (create_text_overlay, "$g_presentation_obj_sliders_7", ":text"),
		(store_add, ":text", "str_dplmc_mixture_serfs", ":serfdom"),
        (create_text_overlay, "$g_presentation_obj_sliders_8", ":text"),
		(store_add, ":text", "str_dplmc_mediocre_quality", ":quality"),
        (create_text_overlay, "$g_presentation_obj_sliders_9", ":text"),
		##dplmc+ end incremented sliders by 1
		(store_add, ":text", "str_dplmc_neither_mercantilist_nor_laissez_faire", ":mercantilism"),
		(create_text_overlay, "$g_presentation_obj_sliders_10", ":text"),#<- dplmc+ added
        
        (create_text_overlay, "$g_presentation_obj_1", "@Centralization:"),
        (create_text_overlay, "$g_presentation_obj_2", "@Aristocracy:"),
        (create_text_overlay, "$g_presentation_obj_3", "@Serfdom:"),
        (create_text_overlay, "$g_presentation_obj_4", "@Troop quality:"),
		(create_text_overlay, "$g_presentation_obj_5", "@Mercantilism:"),#<-- dplmc+ added
		#dplmc+ start incremented obj by 1...
        (create_text_overlay, "$g_presentation_obj_6", "@High centralization reduces tax inefficiency for the king and raises it for vassals. This will interfere  the relations between ruler and vassals."),
        (create_text_overlay, "$g_presentation_obj_7", "@High aristocracy will improve the relations between the king and his vassals who will be able to raise bigger armies but it will decreased trade."),
        (create_text_overlay, "$g_presentation_obj_8", "@High serfdom reduces tax inefficiency for the king and his vassals and vassals can maintain bigger armies but troops loose moral."),
        (create_text_overlay, "$g_presentation_obj_9", "@High troop quality increases the strength of troops but decreases army size."),
		#dplmc+ end incremented obj by 1
		(create_text_overlay, "$g_presentation_obj_10", "@Mercantilistic policies maximize exports while minimizing imports, and increase government regulation of industry."),#<-dplmc+ added
        
		##Moved earlier
        #(faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
        #(faction_get_slot, ":aristocratcy", "fac_player_supporters_faction", dplmc_slot_faction_aristocracy),
        #(faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
        #(faction_get_slot, ":quality", "fac_player_supporters_faction", dplmc_slot_faction_quality),
		#(faction_get_slot, ":mercantilism", "fac_player_supporters_faction", dplmc_slot_faction_quality),#<- dplmc+ added		

        (overlay_set_val, "$g_presentation_obj_sliders_1", ":centralization"),
        (overlay_set_val, "$g_presentation_obj_sliders_2", ":aristocratcy"),
        (overlay_set_val, "$g_presentation_obj_sliders_3", ":serfdom"),
        (overlay_set_val, "$g_presentation_obj_sliders_4", ":quality"),
		(overlay_set_val, "$g_presentation_obj_sliders_5", ":mercantilism"),#<- dplmc+ added
        (position_set_x, pos1, 200),
		
		##SLIDERS
		#dplmc start+ pushed all items by 150, then dropped all items by 75, then decreased the spacing from 150 to 100
        (position_set_y, pos1, 575),#750),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (position_set_y, pos1, 450),#600),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        (position_set_y, pos1, 325),#450),
        (overlay_set_position, "$g_presentation_obj_sliders_3", pos1),
        (position_set_y, pos1, 200),#300),
        (overlay_set_position, "$g_presentation_obj_sliders_4", pos1),
		#dplmc end+ end pushed all items by 150
        (position_set_y, pos1, 75),#150), #<- dplmc+ added
        (overlay_set_position, "$g_presentation_obj_sliders_5", pos1),#<- dplmc+ added

        
		##HEADERS
        (position_set_x, pos1, 100),
		#dplmc+ start pushed all items by 150, then dropped all items by 75, then changed the spacing to 100
        (position_set_y, pos1, 625),#800),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 500),#650),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 375),#500),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_y, pos1, 250),#350),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
		#dplmc+ end pushed all items by 150
		(position_set_y, pos1, 125),#200), #<- dplmc+ added
        (overlay_set_position, "$g_presentation_obj_5", pos1), #<- dplmc+ added
        
		##SLIDER DESCRIPTIONS
        (position_set_x, pos1, 50),
		#dplmc+ start pushed all items by 150, and incremented obj by 1, then dropped all items by 75, then raised it 10, then changed the spacing to 100
        (position_set_y, pos1, 550),#700),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_y, pos1, 425),#550),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (position_set_y, pos1, 300),#400),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (position_set_y, pos1, 175),#250),
        (overlay_set_position, "$g_presentation_obj_9", pos1),
		#dplmc+ end pushed all items by 150, and incremented obj by 1
		(position_set_y, pos1, 50),#100), #<- dplmc+ added
        (overlay_set_position, "$g_presentation_obj_10", pos1), #<- dplmc+ added
        
        (position_set_x, pos1, 775),
        (position_set_y, pos1, 775),
		#dplmc+ start increment obj by 1
        (overlay_set_size, "$g_presentation_obj_6", pos1),
        (overlay_set_size, "$g_presentation_obj_7", pos1),
        (overlay_set_size, "$g_presentation_obj_8", pos1),
        (overlay_set_size, "$g_presentation_obj_9", pos1),
		#dplmc+ end increment obj by 1
		(overlay_set_size, "$g_presentation_obj_10", pos1),#<- dplmc+ added

		##SLIDER LEVEL TEXT
        (position_set_x, pos1, 400),#400),
		#dplmc+ start pushed all items by 150, and incremented sliders by 1, then dropped all items by 75, then changed the spacing to 100
        (position_set_y, pos1, 575),#750),
        (overlay_set_position, "$g_presentation_obj_sliders_6", pos1),
        (position_set_y, pos1, 450),#600),
        (overlay_set_position, "$g_presentation_obj_sliders_7", pos1),
        (position_set_y, pos1, 325),#450),
        (overlay_set_position, "$g_presentation_obj_sliders_8", pos1),
        (position_set_y, pos1, 200),#300),
        (overlay_set_position, "$g_presentation_obj_sliders_9", pos1),
		#dplmc+ end pushed all items by 150, and incremented sliders by 1
		(position_set_y, pos1, 75),#150),#<- dplmc+ added
        (overlay_set_position, "$g_presentation_obj_sliders_10", pos1),#<- dplmc+ added
        
        (position_set_x, pos1, 925),
        (position_set_y, pos1, 925),
		#dplmc+ start incremented sliders by 1
        (overlay_set_size, "$g_presentation_obj_sliders_6", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_7", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_8", pos1),
        (overlay_set_size, "$g_presentation_obj_sliders_9", pos1),
		#dplmc+ end incremented sliders by 1
		(overlay_set_size, "$g_presentation_obj_sliders_10", pos1),#<- dplmc+ added
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        ##nested diplomacy start+
		#Added new option, so had to increment some sliders
        (try_begin),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_centralization, ":value"),
          (val_add, ":value", "str_dplmc_neither_centralize_nor_decentralized"),
          (overlay_set_text, "$g_presentation_obj_sliders_6", ":value"),#dplmc+ incremented "sliders"
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_2"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_aristocracy, ":value"),
          (val_add, ":value", "str_dplmc_neither_aristocratic_nor_plutocratic"),
          (overlay_set_text, "$g_presentation_obj_sliders_7", ":value"),#dplmc+ incremented "sliders"
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_3"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_serfdom, ":value"),
          (val_add, ":value", "str_dplmc_mixture_serfs"),
          (overlay_set_text, "$g_presentation_obj_sliders_8", ":value"),#dplmc+ incremented "sliders"
        (else_try),          
          (eq, ":object", "$g_presentation_obj_sliders_4"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_quality, ":value"),
          (val_add, ":value", "str_dplmc_mediocre_quality"),
          (overlay_set_text, "$g_presentation_obj_sliders_9", ":value"),#dplmc+ incremented "sliders"
		#Finished incremented sliders.
		(else_try),
		  #dplmc+ new option: mercantilism
		  (eq, ":object", "$g_presentation_obj_sliders_5"),
          (faction_set_slot,  "fac_player_supporters_faction", dplmc_slot_faction_mercantilism, ":value"),
          (val_add, ":value", "str_dplmc_neither_mercantilist_nor_laissez_faire"),
          (overlay_set_text, "$g_presentation_obj_sliders_10", ":value"),
		#Change variable associated with "Done" button.
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),#dplmc+ changed 10 to 12
          (assign, "$g_players_policy_set", 1),
          (presentation_set_duration, 0),
        (try_end),
		##nested diplomacy end+
    ]),
  ]),

  ##nested diplomacy start+
  #
  #Make it slightly harder to abuse the AI.
  #For example, some players report randomly starting wars with a faction and
  #demanding a hard-to-take castle until the AI concedes.
  #
  #See changes in logic below for specifics.
  #
  ##nested diplomacy end+
    ("dplmc_peace_terms",0,mesh_load_window,[
      (ti_on_presentation_load,
       [
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 999999),
       
        # done
        (create_game_button_overlay, "$g_presentation_obj_10", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
  
        #cancel
        (create_game_button_overlay, "$g_presentation_obj_9", "@Cancel"),
        (position_set_x, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_9", pos1),
        
        # title
        (create_text_overlay, reg1, "@Dictate the peace terms", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 445),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),

        (position_set_y, pos1, 550),
        (create_text_overlay, "$g_presentation_obj_2", "@Select the castle and the amount of money and check the boxes to activate the demand. The demands are combined if both boxes are checked."),
        (position_set_x, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        (create_slider_overlay, "$g_presentation_obj_sliders_1", 1, 10),
        (overlay_set_val, "$g_presentation_obj_sliders_1", 1),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_sliders_1", pos1),
        (assign, "$demanded_money", 1000),
        (assign, "$diplomacy_var", 1),

        (create_text_overlay, "$g_presentation_obj_sliders_2", "@1000 scillingas"),
        (position_set_x, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_sliders_2", pos1),
        
        (create_check_box_overlay, "$g_presentation_obj_battle_check0", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_battle_check0", pos1),
        (overlay_set_val, "$g_presentation_obj_battle_check0", 1),  

        (assign, "$demanded_castle", 0), 
        (assign, ":castle_count", 0),
        (create_combo_button_overlay, "$g_presentation_obj_1"),     
        (try_for_range, ":castle", castles_begin, castles_end),
 		  ##diplomacy start+
		  (party_slot_eq, ":castle", slot_party_type, spt_castle),
		  ##diplomacy end+
         (store_faction_of_party, ":castle_faction", ":castle"),
          (eq, ":castle_faction", "$g_notification_menu_var1"),
          (str_store_party_name, s2, ":castle"),
          (overlay_add_item, "$g_presentation_obj_1", s2),   
          (assign, "$demanded_castle", ":castle"),   
          (val_add, ":castle_count", 1),         
        (end_try),       
        (assign, "$diplomacy_var2", 0),                 
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 250),
        (overlay_set_position, "$g_presentation_obj_1", pos1), 
        (overlay_set_val, "$g_presentation_obj_1", ":castle_count"), 
              
        (create_check_box_overlay, "$g_presentation_obj_battle_check1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_x, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_battle_check1", pos1),  

        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
   
          (assign, ":cur", 0),
          (try_for_range, ":castle", castles_begin, castles_end),
            (store_faction_of_party, ":castle_faction", ":castle"),
            (eq, ":castle_faction", "$g_notification_menu_var1"),
            (try_begin),
              (eq, ":cur", ":value"),
              (assign, "$demanded_castle", ":castle"),
            (try_end),
            (val_add, ":cur", 1),              
          (try_end),       
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_check0"), 
          (assign, "$diplomacy_var", ":value"),
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_battle_check1"),
          (assign, "$diplomacy_var2", ":value"),
          
        (else_try),
          (eq, ":object", "$g_presentation_obj_sliders_1"),
          (store_mul, "$demanded_money",":value", 1000),
		  ##diplomacy start+
		  ##OLD:
          #(assign, reg0, "$demanded_money"),
          #(overlay_set_text, "$g_presentation_obj_sliders_2", "@{reg0} denars"),
		  ##NEW:
		  (assign, reg1, "$demanded_money"),
		  (overlay_set_text, "$g_presentation_obj_sliders_2", "str_reg1_denars"),
		  ##diplomacy end+
                   
        (else_try),    
          (eq, ":object", "$g_presentation_obj_9"),
          (presentation_set_duration, 0),
        (else_try),      
          (eq, ":object", "$g_presentation_obj_10"),
          (presentation_set_duration, 0),

          (try_begin),
            (eq, "$diplomacy_var", 0),
            (assign, "$demanded_money", 0),                 
          (try_end),

          (try_begin),
            (eq, "$diplomacy_var2", 0),
            (assign, "$demanded_castle", 0),                 
          (try_end),
          
          (assign, ":demand", 0),
          (try_begin),
            (gt, "$demanded_money", 0),
            (store_div, ":demand", "$demanded_money", 1000),
          (try_end),
		  ##nested diplomacy start+
		  #OLD:
		  #(try_begin),
          #   (is_between, "$demanded_castle", castles_begin, castles_end),
          #   (val_add, ":demand", 12),
          #(try_end),
		  #NEW:
		  #
		  #Not all castles are created equal.
		  (assign, ":npc_faction", "$g_notification_menu_var1"),
		  
		  (assign, ":player_faction", "fac_player_supporters_faction"),
		  (try_begin),
		     (neg|faction_slot_eq, ":player_faction", slot_faction_state, sfs_active),
			 (is_between, "$players_kingdom", npc_kingdoms_begin, npc_kingdoms_end),
			 (assign, ":player_faction", "$players_kingdom"),
		  (try_end),

		  #(assign, ":castle_value", 0),
		  (assign, ":was_taken_recently", 0),
		  (assign, ":would_make_lord_fiefless", 0),
		  (assign, ":distance_factor", 100),#If positive, 100 times the ratio of distance of closest friendly center to closest enemy center; if negative, 100 times the ratio of the distance of the closest enemy center to the closest friendly center.
		  (try_begin),
			(is_between, "$demanded_castle", castles_begin, castles_end),
			## (2) Determine whether handing over the demanded castle would cost any lord his last fief.
			## (2a: At the same time, calculate the closest friendly & enemy walled centers)
			(party_slot_ge, "$demanded_castle", slot_town_lord, 1),
			(party_get_slot, ":lord_a", "$demanded_castle", slot_town_lord),
			(assign, ":lord_b", -1),
			(assign, ":would_make_lord_fiefless", 1),
			(assign, ":distance_to_friendly_fortress", 10000),
			(assign, ":distance_to_enemy_fortress", 10000),
			(try_for_range, ":center_no", centers_begin, centers_end),
				(neq, ":center_no", "$demanded_castle"),
				#Check for fieflessness
				(try_begin),
					(party_slot_eq, ":center_no", slot_village_bound_center, "$demanded_castle"),
					(neg|party_slot_eq, ":center_no", slot_town_lord, ":lord_a"),
					(party_slot_ge, ":center_no", slot_town_lord, 1),
					(party_get_slot, ":lord_b", ":center_no", slot_town_lord),
				(else_try),
					(party_slot_eq, ":center_no", slot_town_lord, ":lord_a"),
					(neg|party_slot_eq, ":center_no", slot_village_bound_center, "$demanded_castle"),
					(assign, ":would_make_lord_fiefless", 0),
				(try_end),
				#For walled centers check distance
				(this_or_next|party_slot_eq, ":center_no", slot_party_type, spt_town),
					(this_or_next|party_slot_eq, ":center_no", slot_party_type, spt_castle),
				
				(store_faction_of_party, ":center_faction", ":center_no"),
				(store_distance_to_party_from_party, ":cur_distance", ":center_no", "$demanded_castle"),
				
				(call_script, "script_dplmc_get_faction_truce_length_with_faction", ":center_faction", ":npc_faction"),
				(try_begin),
					(this_or_next|gt, reg0, dplmc_treaty_defense_days_expire),
					(eq, ":center_faction", ":npc_faction"),
					(val_min, ":distance_to_friendly_fortress", ":cur_distance"),
				(else_try),
					(store_relation, reg0, ":center_faction", ":npc_faction"),
					(val_min, ":distance_to_enemy_fortress", ":cur_distance"),
				(try_end),
			(try_end),
			#(2a, set distance factor based on closest other fortress)
			(assign, ":distance_factor", 100),
			(try_begin),
				(this_or_next|ge, ":distance_to_friendly_fortress", 10000),
					(ge, ":distance_to_enemy_fortress", 10000),
				#No fortress found for one or both
			(else_try),
				#Friendly is closer
				(lt, ":distance_to_friendly_fortress", ":distance_to_enemy_fortress"),
				(gt, ":distance_to_enemy_fortress", 25),#Within 25 ignore differences
				(val_max, ":distance_to_friendly_fortress", 1),
				(store_mul, ":distance_factor", ":distance_to_enemy_fortress", 100),
				(val_div, ":distance_factor", ":distance_to_friendly_fortress"),
				(try_begin),
					(le, ":distance_to_enemy_fortress", 50),
					(val_min, ":distance_factor", 200),
				(try_end),
			(else_try),
				#Enemy is closer
				(lt, ":distance_to_enemy_fortress", ":distance_to_friendly_fortress"),
				(gt, ":distance_to_friendly_fortress", 25),#Within 25 ignore differences
				(val_max, ":distance_to_enemy_fortress", 1),
				(store_mul, ":distance_factor", ":distance_to_friendly_fortress", 100),
				(val_div, ":distance_factor", ":distance_to_enemy_fortress"),
				(try_begin),
					(le, ":distance_to_friendly_fortress", 50),
					(val_min, ":distance_factor", 200),
				(try_end),
				(val_mul, ":distance_factor", -1),
			(try_end),##end 2a: distance factor
			
			(neq, ":would_make_lord_fiefless", 1),#If we already know it would make the castle owner fiefless, stop.
			(ge, ":lord_b", 1),
			(assign, ":would_make_lord_fiefless", 1),
			(try_for_range, ":center_no", centers_begin, centers_end),
				(party_slot_eq, ":center_no", slot_town_lord, ":lord_b"),
				(this_or_next|neg|is_between, ":center_no", villages_begin, villages_end),
					(neg|party_slot_eq, ":center_no", slot_village_bound_center, "$demanded_castle"),
					(assign, ":would_make_lord_fiefless", 0),
			(try_end),
		  (try_end),##end 2: would make lord fiefless?
		  (assign, ":castle_strength_ratio", 100),
		  (assign, ":high_ratio", 150),
		  (try_begin),
			(is_between, "$demanded_castle", castles_begin, castles_end),
			#(3) Determine typical castle strength
			(assign, ":typical_strength", 0),
			(assign, ":high_ratio", 0),#<- for now, store max strength seen
			(try_for_range, ":center_no", castles_begin, castles_end),
				(try_begin),
					(eq, "$g_dplmc_terrain_advantage", DPLMC_TERRAIN_ADVANTAGE_ENABLE),
					(call_script, "script_dplmc_party_calculate_strength_in_terrain", ":center_no", dplmc_terrain_code_siege, 0, 1),
					#Outputs to reg0 (using terrain) and reg1 (not using terrain).  We'll be using reg1,
					#but the function will be updating the cached strength using the terrain version (as I want).
					(assign, reg0, reg1),
				(else_try),
					#Use the non-terrain-modified strength script.
					(call_script, "script_party_calculate_strength", ":center_no", dplmc_terrain_code_siege, 0),
				(try_end),
				
				(val_max, reg0, 250),#A certain minimum scale is assumed
				(val_add, ":typical_strength", reg0),
				(val_max, ":high_ratio", reg0),#keep track of max
				(eq, ":center_no", "$demanded_castle"),
				(assign, ":castle_strength_ratio", reg0),
			(try_end),
			(try_begin),
				(gt, castles_end, castles_begin),
				(store_sub, reg0, castles_end, castles_begin),
				(val_div, ":typical_strength", reg0),
			(try_end),
			(val_max, ":typical_strength", 300),#<- A certain minimum scale is assumed
			(val_mul, ":castle_strength_ratio", 100),
			(val_mul, ":high_ratio", 100),
			
			(store_div, reg0, ":typical_strength", 2),
			
			(val_add, ":castle_strength_ratio", reg0),
			(val_add, ":high_ratio", reg0),
			
			(val_div, ":castle_strength_ratio", ":typical_strength"),
			(val_div, ":high_ratio", ":typical_strength"),
			
			(assign, reg0, ":castle_strength_ratio"),
			(val_max, reg0, 100),
			(val_mul, reg0, 12),#Scale so that 100 is 12, 200 is 24, etc.
			(val_add, reg0, 50),
			(val_div, reg0, 100),	
			(val_add, ":demand", reg0),

			(val_sub, ":high_ratio", 100),
			(val_div, ":high_ratio", 2),
			(val_add, ":high_ratio", 100),
			(val_clamp, ":high_ratio", 110, 400),
		  (try_end),##end (3) determine typical castle strength
		 
		  ##Next line: replace fac_player_supporters_faction with :player_faction
          (call_script, "script_npc_decision_checklist_peace_or_war", "$g_notification_menu_var1", ":player_faction", -1),
		  
		  ##Save the unmodified numbers for later
		  (assign, ":check_peace_war_result", reg0),
		  #(assign, ":original_demand", ":demand"),
		  ##diplomacy end+
          (assign, ":goodwill", reg0), 
          (val_mul, ":goodwill", 2),     
          (store_random_in_range, ":random", 0, ":demand"),
          
          (val_div, ":demand", -2),        
    
          (call_script, "script_change_player_relation_with_faction", "$g_notification_menu_var1", ":demand"),
		  ##diplomacy start+
		  #Count "third party" kingdoms: kingdoms that aren't either the player's kingdom
		  #or the other kingdom in the negotiations, and that aren't allied to either.
		  #(faction_get_slot, ":npc_faction_leader", ":npc_faction", slot_faction_leader),
		  (assign, ":other_players", 0),
		  (try_for_range, ":third_faction", kingdoms_begin, kingdoms_end),
			 #Active faction
		     (faction_slot_eq, ":third_faction", slot_faction_state, sfs_active),
			 (neq, ":third_faction", ":npc_faction"),
			 (neq, ":third_faction", "fac_player_supporters_faction"),
			 (neq, ":third_faction", "$players_kingdom"),
			 #Not allied (full alliance or defensive alliance) to either faction
			 (call_script, "script_dplmc_get_faction_truce_length_with_faction", ":third_faction", ":npc_faction"),
			 (le, reg0, dplmc_treaty_defense_days_expire),
			 (call_script, "script_dplmc_get_faction_truce_length_with_faction", ":third_faction", "$players_kingdom"),
			 (le, reg0, dplmc_treaty_defense_days_expire),
			 (val_add, ":other_players", 1),
		  (try_end),
		  #Improve the AI's decision-making somewhat.
		  (options_get_campaign_ai, ":reduce_campaign_ai"),
		  (val_clamp, ":reduce_campaign_ai", 0, 3),#0 is hard, 1 is medium, 2 is easy
		  (try_begin),
            #This should never be reached.
				(lt, ":check_peace_war_result", 0),
            (this_or_next|is_between, "$demanded_castle", castles_begin, castles_end),
               (gt, "$demanded_money", 0),
			(jump_to_menu,"mnu_dplmc_deny_terms"),
        (else_try),
            (is_between, "$demanded_castle", castles_begin, castles_end),
				(lt, ":check_peace_war_result", 2),
            #Don't enable "fishing" for fiefs, hoping to get a lucky
            #result.  Make the chance of giving a fief zero.
            (this_or_next|party_slot_eq,"$demanded_castle",slot_center_original_faction,":npc_faction"),
            (this_or_next|eq, ":would_make_lord_fiefless", 1),
            (this_or_next|ge, ":castle_strength_ratio", ":high_ratio"),
				(this_or_next|eq, ":was_taken_recently", 0),
               (eq, ":other_players", 0),
			(jump_to_menu,"mnu_dplmc_deny_terms"),
        (else_try),
            (is_between, "$demanded_castle", castles_begin, castles_end),
            #Some things will just never be agreed to.
				#If three or more of the following are true, reject:
				#- The demanded castle was not taken recently
				#- The demanded castle is one of the faction's original castles
				#- Giving the castle would make some lords fiefless
				#- The castle has an especially large garrison
				#- Aside from the player's faction and the NPC faction (and their allies),
				#  there are no other kingdoms.
				#- The demanded castle is significantly deeper within the NPC kingdom's territory
				#  than it is close to enemy territory
            (assign, reg0, 1),
			(val_sub, reg0, ":was_taken_recently"),
			(val_max, reg0, 0),
            (try_begin),#Check: is the castle part of the faction's original territory?
               (party_slot_eq,"$demanded_castle",slot_center_original_faction,":npc_faction"),
			   (val_add, reg0, 1),
            (try_end),
			(val_max, ":would_make_lord_fiefless", 0),
			(val_add, reg0, ":would_make_lord_fiefless"),
			(try_begin),#Check: castle has high strength compared to average?
				 (ge, ":castle_strength_ratio", ":high_ratio"),
				 (val_add, reg0, 1),
			(try_end),
			(try_begin),#Check: no one else remaining?
				 (eq, ":other_players", 0),
				 (val_add, reg0, 1),
			(try_end),
			(try_begin),#Check: is it much closer to friendly centers than enemy centers?
				(ge, ":distance_factor", 190),
				(val_add, reg0, 1),
			(try_end),
			(val_add, ":random", reg0),#Even if less than 3 are met, other factors will still decrease likelihood of acceptance.
			
			(ge, reg0, 3),
			(jump_to_menu,"mnu_dplmc_deny_terms"),
        (else_try),
			#SPECIAL CASE: Two Kingdoms Remain
			(eq, ":other_players", 0),
			(this_or_next|is_between, "$demanded_castle", castles_begin, castles_end),
				(gt, "$demanded_money", 0),
			(is_between, ":npc_faction", kingdoms_begin, kingdoms_end),
			(assign, ":minimum_peace_war_result", 2),
			(try_begin),
				#Hard: never accept.
				(eq, ":reduce_campaign_ai", 0),
				(store_add, ":minimum_peace_war_result", ":check_peace_war_result", 1),
				(val_max, ":minimum_peace_war_result", 4),
			(else_try),
				#Medium: never give up fiefs, sometimes accept other deals.
				(eq, ":reduce_campaign_ai", 1),
				(is_between, "$demanded_castle", castles_begin, castles_end),
				(store_add, ":minimum_peace_war_result", ":check_peace_war_result", 1),
				(val_max, ":minimum_peace_war_result", 4),
			(else_try),
				#Easy: sometimes accept.
				(eq, ":reduce_campaign_ai", 2),
			(try_end),
			(lt, ":check_peace_war_result", ":minimum_peace_war_result"),
			(jump_to_menu,"mnu_dplmc_deny_terms"),
		  (else_try),
		  #fall through to other behavior
		  ##diplomacy end+
            (le, ":random", ":goodwill"),
            (try_begin),
              (is_between, "$demanded_castle", castles_begin, castles_end),
				  ##diplomacy start+
				  #Relation hit with the owner of the surrendered castle and its village,
				  #if there was a valid owner.
				  (try_begin),
					(party_slot_ge, "$demanded_castle", slot_town_lord, 1),
					(party_get_slot, reg0, ":center_no", slot_town_lord),
					(call_script, "script_change_player_relation_with_troop", reg0, -1),
				  (try_end),
				  (try_for_range, ":center_no", villages_begin, villages_end),
					(party_slot_eq, ":center_no", slot_village_bound_center, "$demanded_castle"),
					(party_slot_ge, ":center_no", slot_town_lord, 1),
					(party_get_slot, reg0, ":center_no", slot_town_lord),
					(call_script, "script_change_player_relation_with_troop", reg0, -1),
				  (try_end),
			  ##Change next to use :player_faction instead of fac_player_supporters_faction
              (call_script, "script_give_center_to_faction", "$demanded_castle", ":player_faction"),
			  ##diplomacy end+
            (try_end),
            (try_begin),
              (gt, "$demanded_money", 0),
              (call_script, "script_dplmc_pay_into_treasury", "$demanded_money"),
			  ##diplomacy start+ other faction loses money
			  #Since setting terms for surrender is a non-native feature, there is no need to make this optional.
			  (faction_get_slot, ":faction_leader", "$g_notification_menu_var1", slot_faction_leader),
			  (try_begin),
				(ge, ":faction_leader", 1),
				(neq, "$g_notification_menu_var1", "$players_kingdom"),
				(neq, "$g_notification_menu_var1", "fac_player_supporters_faction"),
				(ge, "$demanded_money", 1),
				(assign, ":cost_to_leader", "$demanded_money"),
				#(try_begin),
				#	 (faction_get_slot, ":marshall", "$g_notification_menu_var1", slot_faction_marshall),
				#	 (neq, ":marshall", "trp_player"),
				#	 (neq, ":marshall", ":faction_leader"),
				#	 (ge, ":marshall", 0),
				#	 (store_troop_gold, reg0, ":marshall"),
				#	 (store_troop_gold, reg1, ":faction_leader"),
				#	 (val_add, reg1, reg0),
				#	 (gt, reg1, 0),
				#	 (store_mul, ":cost_to_marshall", "$demanded_money", reg0),
				#	 (val_div, ":cost_to_marshall", reg1),
				#	 (store_div, reg0, "$demanded_money", 2),
				#	 (val_min, ":cost_to_marshall", reg0),#no more than 1/2
				#	 (store_mul, reg0, "$demanded_money", 3),
				#	 (val_div, reg0, 13),#no less than 3/13 (6/26 marshall, 20/26 leader) 
				#	 (val_max, ":cost_to_marshall", reg0),
				#	 (gt, ":cost_to_marshall", 0),
				#	 (call_script, "script_dplmc_remove_gold_from_lord_and_holdings", ":cost_to_marshall", ":marshall"),
				#	 (val_sub, ":cost_to_leader", ":cost_to_marshall"),
				#	 (store_random_in_range, reg0, 0, 1000),
				#	 (val_add, reg0, ":cost_to_marshall"),
				#	 (val_div, reg0, 1000),
				#	 (ge, reg0, 1),
				#	 (val_mul, reg0, -1),
				#	 (call_script, "script_change_player_relation_with_troop", ":marshall", reg0),
				#(try_end),
				(ge, ":cost_to_leader", 1),
				(call_script, "script_dplmc_remove_gold_from_lord_and_holdings", ":cost_to_leader", ":faction_leader"),
				(store_random_in_range, reg0, 0, 1000),
				(val_add, reg0, ":cost_to_leader"),
				(val_div, reg0, 1000),
				(ge, reg0, 1),
				(val_mul, reg0, -1),
				(call_script, "script_change_player_relation_with_troop", ":faction_leader", reg0),
			  (try_end),
			  ##diplomacy end+
            (try_end),
			##diplomacy start+
            (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_notification_menu_var1", ":player_faction", 1),
			##diplomacy end+
            (presentation_set_duration, 0),
            (change_screen_return),
          (else_try),       
            (jump_to_menu,"mnu_dplmc_deny_terms"),
          (try_end),  
         
        (try_end),
    ]),
  ]),
  
#########diplomacy chief acaba

  # Tempered  chief     ##########################  SKIRMISHER SELECTION SLIDER ################################                                                                                                                                                                                             ############ skirmisher slider##################

   ("skirmishers",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,999999),
	    (set_fixed_point_multiplier, 1000),
		(assign,"$max_skirmishers",0),
		(str_store_string,s2,"@_Continue_"),
		(str_store_string,s3,"@Select the number of skirmishers you wish to deploy."),
	    (party_count_members_of_type,"$max_skirmishers","p_main_party","trp_mercenary_skirmisher"),
        (create_slider_overlay, "$g_presentation_obj_1", 5, "$max_skirmishers"),
		(assign, "$g_presentation_obj_1_val", "$max_skirmishers"),
        (assign, reg1, "$g_presentation_obj_1_val"),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_5", s1),
		(create_text_overlay,"$g_presentation_obj_3",s3),
        
        (overlay_set_val, "$g_presentation_obj_1", "$max_skirmishers"),
        (position_set_x, pos1, 300),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
		
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
		
		(create_game_button_overlay,"$g_presentation_obj_6", s2,tf_left_align),
		(assign, "$g_presentation_obj_6_val", 0),
		(overlay_set_val, "$g_presentation_obj_6","$g_presentation_obj_6_val"),
        (position_set_y, pos1, 100),
		(overlay_set_position, "$g_presentation_obj_6", pos1),
		(position_set_x,pos1,200),
		(position_set_y,pos1,650),
		(overlay_set_position,"$g_presentation_obj_3",pos1),
		
		(create_mesh_overlay,"$g_presentation_obj_4","mesh_pic_steppe_bandits1"),
		
        ]),
      (ti_on_presentation_run,
       [
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
		(try_begin),
			(eq,"$g_presentation_obj_6",":object"),
			(call_script,"script_deploy_skirmishers","$g_presentation_obj_1_val"),
			(presentation_set_duration,0),
			(change_screen_map),
		(else_try),
			(eq,"$g_presentation_obj_1",":object"),
			(try_begin),
				(neq, "$g_presentation_obj_1_val", ":value"),
				(assign, "$g_presentation_obj_1_val", ":value"),
				(assign, reg1, "$g_presentation_obj_1_val"),
				(str_store_string, s1, "str_reg1"),
				(overlay_set_text,"$g_presentation_obj_5", s1),
			(try_end),			
		(try_end),
 
		
        ]),
      ]),

#TEMPERED chief  ################################   SPY REPORT  #########################################

   ("spy_reports",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,999999),
	    (set_fixed_point_multiplier, 1000),

		(party_get_slot,":spies_deployed","p_main_party",slot_spies_deployed), #Tempered  number of spy parties deployed, cannot exceed 2x leadership, 
		(store_skill_level,":cur_leadership","skl_leadership","trp_player"),
		(store_mul,":max_spies",":cur_leadership",2),
		(assign,reg2,":max_spies"),
		(assign,reg3,":spies_deployed"),
#                                                                                   header
		(create_text_overlay,"$g_presentation_obj_1","@____SPY REPORTS____",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
		
		(create_text_overlay,"$g_presentation_obj_2","@Based on your current leadership skill, you may deploy up to {reg2} spies.",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
		
		(create_text_overlay,"$g_presentation_obj_3","@You currently have {reg3} spies deployed.",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 620),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
		
#                                                            CREATE CENTER BUTTONS
		(assign,":center_count",0),
		(try_for_range,":cur_center",centers_begin,centers_end),
			(str_store_party_name,s3,":cur_center"),
			(party_get_slot,":spy_days",":cur_center",slot_spy_in_town),
			(try_begin),
				(ge,":spy_days",1),
				(val_add,":center_count",1),
				(try_begin),
					(eq,":center_count",1),
					(create_button_overlay,"$g_presentation_town_obj_1",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 580),
					(overlay_set_position, "$g_presentation_town_obj_1", pos1),
					(assign,"$g_presentation_town_obj_1_val",":cur_center"),
				(else_try),
					(eq,":center_count",2),
					(create_button_overlay,"$g_presentation_town_obj_2",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 560),
					(overlay_set_position, "$g_presentation_town_obj_2", pos1),
					(assign,"$g_presentation_town_obj_2_val",":cur_center"),
				(else_try),
					(eq,":center_count",3),
					(create_button_overlay,"$g_presentation_town_obj_3",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 540),
					(overlay_set_position, "$g_presentation_town_obj_3", pos1),
					(assign,"$g_presentation_town_obj_3_val",":cur_center"),
				(else_try),
					(eq,":center_count",4),
					(create_button_overlay,"$g_presentation_town_obj_4",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 520),
					(overlay_set_position, "$g_presentation_town_obj_4", pos1),
					(assign,"$g_presentation_town_obj_4_val",":cur_center"),
				(else_try),
					(eq,":center_count",5),
					(create_button_overlay,"$g_presentation_town_obj_5",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 500),
					(overlay_set_position, "$g_presentation_town_obj_5", pos1),
					(assign,"$g_presentation_town_obj_5_val",":cur_center"),
				(else_try),
					(eq,":center_count",6),
					(create_button_overlay,"$g_presentation_town_obj_6",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 480),
					(overlay_set_position, "$g_presentation_town_obj_6", pos1),
					(assign,"$g_presentation_town_obj_6_val",":cur_center"),
				(else_try),
					(eq,":center_count",7),
					(create_button_overlay,"$g_presentation_town_obj_7",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 460),
					(overlay_set_position, "$g_presentation_town_obj_7", pos1),
					(assign,"$g_presentation_town_obj_7_val",":cur_center"),
				(else_try),
					(eq,":center_count",8),
					(create_button_overlay,"$g_presentation_town_obj_8",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 440),
					(overlay_set_position, "$g_presentation_town_obj_8", pos1),
					(assign,"$g_presentation_town_obj_8_val",":cur_center"),
				(else_try),
					(eq,":center_count",9),
					(create_button_overlay,"$g_presentation_town_obj_9",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 420),
					(overlay_set_position, "$g_presentation_town_obj_9", pos1),
					(assign,"$g_presentation_town_obj_9_val",":cur_center"),
				(else_try),
					(eq,":center_count",10),
					(create_button_overlay,"$g_presentation_town_obj_10",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 400),
					(overlay_set_position, "$g_presentation_town_obj_10", pos1),
					(assign,"$g_presentation_town_obj_10_val",":cur_center"),
				(else_try),
					(eq,":center_count",11),
					(create_button_overlay,"$g_presentation_town_obj_11",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 380),
					(overlay_set_position, "$g_presentation_town_obj_11", pos1),
					(assign,"$g_presentation_town_obj_11_val",":cur_center"),
				(else_try),
					(eq,":center_count",12),
					(create_button_overlay,"$g_presentation_town_obj_12",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 360),
					(overlay_set_position, "$g_presentation_town_obj_12", pos1),
					(assign,"$g_presentation_town_obj_12_val",":cur_center"),
				(else_try),
					(eq,":center_count",13),
					(create_button_overlay,"$g_presentation_town_obj_13",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 340),
					(overlay_set_position, "$g_presentation_town_obj_13", pos1),
					(assign,"$g_presentation_town_obj_13_val",":cur_center"),
				(else_try),
					(eq,":center_count",14),
					(create_button_overlay,"$g_presentation_town_obj_14",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 320),
					(overlay_set_position, "$g_presentation_town_obj_14", pos1),
					(assign,"$g_presentation_town_obj_14_val",":cur_center"),
				(else_try),
					(eq,":center_count",15),
					(create_button_overlay,"$g_presentation_town_obj_15",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 300),
					(overlay_set_position, "$g_presentation_town_obj_15", pos1),
					(assign,"$g_presentation_town_obj_15_val",":cur_center"),
				(else_try),
					(eq,":center_count",16),
					(create_button_overlay,"$g_presentation_town_obj_16",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 280),
					(overlay_set_position, "$g_presentation_town_obj_16", pos1),
					(assign,"$g_presentation_town_obj_16_val",":cur_center"),
				(else_try),
					(eq,":center_count",17),
					(create_button_overlay,"$g_presentation_town_obj_17",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 260),
					(overlay_set_position, "$g_presentation_town_obj_17", pos1),
					(assign,"$g_presentation_town_obj_17_val",":cur_center"),
				(else_try),
					(eq,":center_count",18),
					(create_button_overlay,"$g_presentation_town_obj_18",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 240),
					(overlay_set_position, "$g_presentation_town_obj_18", pos1),
					(assign,"$g_presentation_town_obj_18_val",":cur_center"),
				(else_try),
					(eq,":center_count",19),
					(create_button_overlay,"$g_presentation_town_obj_19",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 220),
					(overlay_set_position, "$g_presentation_town_obj_19", pos1),
					(assign,"$g_presentation_town_obj_19_val",":cur_center"),
				(else_try),
					(eq,":center_count",20),
					(create_button_overlay,"$g_presentation_town_obj_20",s3),
					(position_set_x, pos1, 50),
					(position_set_y, pos1, 200),
					(overlay_set_position, "$g_presentation_town_obj_20", pos1),
					(assign,"$g_presentation_town_obj_20_val",":cur_center"),
				(try_end),
			(try_end),
		(try_end),
#                                                                                    INFO  AREA
		(try_begin),
			(eq,"$g_presentations_next_presentation",-1),
			(create_mesh_overlay,"$g_presentation_obj_6","mesh_pic_messenger"),
			(position_set_x, pos1,260),
			(position_set_y, pos1,20),
			(overlay_set_position,"$g_presentation_obj_6",pos1),
			(position_set_x, pos2,700),
			(position_set_y, pos2,700),
			(overlay_set_size,"$g_presentation_obj_6",pos2),
		(try_end),
		(val_add,"$g_presentations_next_presentation",1),
		(try_begin),
			(le,"$g_presentations_next_presentation",0),
			(str_store_string,s2,"@__No spy selected.__"),
			(create_text_overlay,"$g_presentation_obj_5",s2),
			(position_set_x, pos1, 220),
			(position_set_y, pos1, 460),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
		(else_try),
			(ge,"$g_presentations_next_presentation",1),
			(create_text_overlay,"$g_presentation_obj_5",s2),
			(position_set_x, pos1, 300),
			(position_set_y, pos1, 320),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
			(create_mesh_overlay_with_tableau_material,"$g_presentation_obj_7",-1, "tableau_faction_note_mesh","$g_presentation_center_faction"),
			(position_set_x, pos1, 500),
			(position_set_y, pos1,20),
			(position_set_x, pos2, 1200),
			(position_set_y, pos2, 1200),
			(overlay_set_position, "$g_presentation_obj_7", pos1),
			(overlay_set_size, "$g_presentation_obj_7", pos2),
		(try_end),
#                                                                                  CONTINUE BUTTON TO END PRESENTATION
		(create_game_button_overlay,"$g_presentation_obj_4","@__CONTINUE__",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
		
        ]),
      (ti_on_presentation_run,
       [
        ]),
		
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(try_begin),
			(eq,"$g_presentation_obj_4",":object"),
			(assign,"$g_presentations_next_presentation",-1),
			(presentation_set_duration,0),
		(else_try),
			(eq,"$g_presentation_town_obj_1",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_1_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_1_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_2",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_2_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_2_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_3",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_3_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_3_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_4",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_4_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_4_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_5",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_5_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_5_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_6",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_6_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_6_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_7",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_7_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_7_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_8",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_8_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_8_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_9",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_9_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_9_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_10",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_10_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_10_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_11",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_11_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_11_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_12",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_12_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_12_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_13",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_13_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_13_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_14",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_14_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_14_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_15",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_15_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_15_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_16",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_16_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_16_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_17",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_17_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_17_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_18",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_18_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_18_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_19",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_19_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_19_val"),
			(start_presentation,"prsnt_spy_reports"),
		(else_try),
			(eq,"$g_presentation_town_obj_20",":object"),
			(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_town_obj_20_val"),
			(call_script,"script_spy_report_info","$g_presentation_town_obj_20_val"),
			(start_presentation,"prsnt_spy_reports"),
		(try_end),
        ]),
      ]),

#TEMPERED  chief   ######################   SPY SABOTAGE MISSIONS  ##########################

   ("sabotage",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,999999),
	    (set_fixed_point_multiplier, 1000),
		(assign,"$g_battle_result",0),
		(assign,":has_hero_prisoner",0),
		(str_store_party_name,s1,"$spy_target"),
		(store_faction_of_party,"$g_presentation_center_faction","$spy_target"),
		(party_get_slot,":party_type","$spy_target",slot_party_type),
		(party_get_num_prisoner_stacks, ":num_stacks","$spy_target"),
		(try_for_range, ":i_stack", 0, ":num_stacks"),
			(party_prisoner_stack_get_troop_id, ":stack_troop","$spy_target",":i_stack"),
			(try_begin),
				(troop_is_hero, ":stack_troop"),
				(val_add,":has_hero_prisoner",1),
			(try_end),
		(try_end),
		(try_begin),
			(eq,":party_type",2),
			(str_store_string,s2,"@castle"),
			(str_store_string,s3,"@food stores."),
		(else_try),
			(eq,":party_type",3),
			(str_store_string,s2,"@town"),
			(str_store_string,s3,"@food stores."),
		(else_try),
			(eq,":party_type",4),
			(str_store_string,s2,"@village"),
			(str_store_string,s3,"@cattle."),
		(try_end),
#                                                            #############   HEADER  ##############		
		(create_text_overlay,"$g_presentation_obj_1","@You prepare a message for your spy in {s1}, ordering him to .....",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
#                                                            ##############  PICTURE  #############		
		(create_mesh_overlay,"$g_presentation_obj_2","mesh_pic_messenger1"),
		(position_set_x, pos1,260),
		(position_set_y, pos1,20),
		(overlay_set_position,"$g_presentation_obj_2",pos1),
		(position_set_x, pos2,700),
		(position_set_y, pos2,700),
		(overlay_set_size,"$g_presentation_obj_2",pos2),
#                                                            ##############  CANCEL  ###############
		(create_game_button_overlay,"$g_presentation_obj_3","@_Return_",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
		(try_begin),
			(ge,"$g_presentations_next_presentation",-1),
#poison well
			(create_game_button_overlay,"$g_presentation_obj_4","@_poison {s2} well._"),
			(position_set_x, pos1, 100),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_presentation_obj_4", pos1),
#poison food/cattle		
			(create_game_button_overlay,"$g_presentation_obj_5","@_poison {s2} {s3}._"),
			(position_set_x, pos1, 300),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
#cause unrest		
			(create_game_button_overlay,"$g_presentation_obj_6","@_cause dissent._"),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_presentation_obj_6", pos1),
		(try_end),
#                                                        ###############   FACTION NOTE   ####################
		(create_mesh_overlay_with_tableau_material,"$g_presentation_obj_8",-1, "tableau_faction_note_mesh","$g_presentation_center_faction"),
		(position_set_x, pos1, -50),
		(position_set_y, pos1,20),
		(position_set_x, pos2, 1200),
		(position_set_y, pos2, 1200),
		(overlay_set_position, "$g_presentation_obj_8", pos1),
		(overlay_set_size, "$g_presentation_obj_8", pos2),
#                                                       ############ COST AND DESCRIPTION  ##################
		(try_begin),
			(eq,"$g_presentations_next_presentation",-1),
			(str_store_string,s4,"@____"),
			(str_store_string,s5,"@____"),
		(else_try),
			(ge,"$g_presentations_next_presentation",0),
			(create_text_overlay,"$g_presentation_obj_9",s4,tf_left_align),
			(position_set_x,pos1,100),
			(position_set_y,pos1,400),
			(overlay_set_position,"$g_presentation_obj_9",pos1),
			
			(create_game_button_overlay,"$g_presentation_obj_10",s5,tf_center_justify),
			(position_set_x,pos1,500),
			(position_set_y,pos1,100),
			(overlay_set_position,"$g_presentation_obj_10",pos1),
		(else_try),
			(eq,"$g_presentations_next_presentation",-2),
			(create_text_overlay,"$g_presentation_obj_9",s4,tf_left_align),
			(position_set_x,pos1,100),
			(position_set_y,pos1,400),
			(overlay_set_position,"$g_presentation_obj_9",pos1),
		(try_end),	
		
        ]),
#                                                                        ON RUN
      (ti_on_presentation_run,
       [
        ]),
#                                                                       EVENT STATE CHANGE
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
#        (store_trigger_param_2, ":value"),
		(party_get_slot,":party_type","$spy_target",slot_party_type),
		(store_troop_gold,":cur_wealth","trp_player"),
		(try_begin),
			(eq,"$g_presentation_obj_3",":object"),
			(assign,"$g_presentations_next_presentation",-1),
			(assign,"$cur_choice",5),
			(presentation_set_duration,0),
		(else_try),
			(eq,"$g_presentation_obj_4",":object"),
			(val_add,"$g_presentations_next_presentation",1),
			(str_store_string,s5,"@Do it."),
			(str_store_string,s4,"str_poison_well_desc"),
			(assign,"$cur_choice",1),
			(start_presentation,"prsnt_sabotage"),
		(else_try),
			(eq,"$g_presentation_obj_5",":object"),
			(val_add,"$g_presentations_next_presentation",1),
			(str_store_string,s5,"@Make it so."),
			(try_begin),
				(eq,":party_type",4),
				(str_store_string,s4,"str_poison_cattle_desc"),
			(else_try),
				(le,":party_type",3),
				(str_store_string,s4,"str_poison_food_desc"),
			(try_end),
			(assign,"$cur_choice",2),
			(start_presentation,"prsnt_sabotage"),
		(else_try),
			(eq,"$g_presentation_obj_6",":object"),
			(val_add,"$g_presentations_next_presentation",1),
			(str_store_string,s5,"@Have your fun."),
			(str_store_string,s4,"str_cause_unrest_desc"),
			(assign,"$cur_choice",3),
			(start_presentation,"prsnt_sabotage"),
		(else_try),
			(eq,"$g_presentation_obj_10",":object"),
			(try_begin),
				(ge,":cur_wealth",500),
				(try_begin),
					(eq,"$cur_choice",1),
					(party_set_slot,"$spy_target",slot_spy_sabotage,1),
					(str_store_string,s4,"@I shall mix the concoction and have it in the well within 12 hours, my {Lord/Lady}.",tf_left_align),
					(troop_remove_gold,"trp_player",500),
					(assign,"$g_presentations_next_presentation",-1),
					(assign,"$cur_choice",5),
					(presentation_set_duration,0),
					#(assign,"$g_presentations_next_presentation",-2),
					#(start_presentation,"prsnt_sabotage"),
				(else_try),
					(eq,"$cur_choice",2),
					(party_set_slot,"$spy_target",slot_spy_sabotage,2),
					(troop_remove_gold,"trp_player",500),
					(try_begin),
						(eq,":party_type",4),
						(str_store_string,s4,"@I'll have the cattle feverish within the next 12 hours my {Lord/Lady}.",tf_left_align),
					(else_try),
						(le,":party_type",3),
						(str_store_string,s4,"@Within the next 12 hours, I'll have the grainery looking like a refuse pile.",tf_left_align),
					(try_end),
					(assign,"$cur_choice",5),
					(assign,"$g_presentations_next_presentation",-1),
					(presentation_set_duration,0),
					#(assign,"$g_presentations_next_presentation",-2),
					#(start_presentation,"prsnt_sabotage"),
				(else_try),
					(eq,"$cur_choice",3),
					(party_set_slot,"$spy_target",slot_spy_sabotage,3),
					(str_store_string,s4,"@It will take 12 hours or more, my {Lord/Lady},^but I shall have every man, woman and child fighting in the streets.",tf_left_align),
					(troop_remove_gold,"trp_player",500),
					(assign,"$g_presentations_next_presentation",-1),
					(assign,"$cur_choice",5),
					(presentation_set_duration,0),
					#(assign,"$g_presentations_next_presentation",-2),
					#(start_presentation,"prsnt_sabotage"),
				(try_end),
			(else_try),
				(le,":cur_wealth",499),
				(str_store_string,s4,"@ You do not have the 500 scillingas to finance this mission.",tf_left_align),
				(assign,"$g_presentations_next_presentation",-1),
				(assign,"$cur_choice",0),
				(start_presentation,"prsnt_sabotage"),
			(try_end),
		(try_end),
 		
        ]),
      ]),
##################grueso tempered chief acaba#######################

  ("arena_training", prsntf_read_only|prsntf_manual_end_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Number of men knocked down: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_1", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_arena_training_1", pos1),
        (assign, reg1, 0),
        (str_store_string, s1, "@Number of men left: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_arena_training_2", s1),
        (overlay_set_color, "$g_presentation_obj_arena_training_2", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 670),
        (overlay_set_position, "$g_presentation_obj_arena_training_2", pos1),
        ]),
      (ti_on_presentation_run,
       [(get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Opponents Beaten: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_1", s1),
        (assign, ":num_left", "$g_arena_training_max_opponents"),
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (neg|agent_is_alive, ":agent_no"),
          (neq, ":agent_no", ":player_agent"),
          (val_sub, ":num_left", 1),
        (try_end),
        (assign, reg1, ":num_left"),
        (str_store_string, s1, "@Opponents Remaining: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_arena_training_2", s1),
        ]),
      ]),

  ("retirement", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_button_overlay, "$g_presentation_obj_retirement_1", "@Remain in retirement.", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_retirement_2", "@Go back to the adventuring.", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_retirement_1", pos1),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$g_presentation_obj_retirement_2", pos1),
        (assign, ":total_effect", 0),
        #wealth
        (store_troop_gold, ":wealth", "trp_player"),
        (store_div, ":wealth_effect", ":wealth", 200),
        (val_add, ":total_effect", ":wealth_effect"),
        #ruled centers and friendly/enemy centers
        (assign, ":num_towns", 0),
        (assign, ":num_castles", 0),
        (assign, ":num_villages", 0),
        (assign, ":num_friendly_towns", 0),
        (assign, ":num_friendly_villages", 0),
        (assign, ":num_enemy_towns", 0),
        (assign, ":num_enemy_villages", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_get_slot, ":type", ":center_no", slot_party_type),
          (try_begin),
            (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_towns", 1),
            (else_try),
              (eq, ":type", spt_castle),
              (val_add, ":num_castles", 1),
            (else_try),
              (val_add, ":num_villages", 1),
            (try_end),
          (try_end),
          (party_get_slot, ":relation", ":center_no", slot_center_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_friendly_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_friendly_villages", 1),
            (try_end),
          (else_try),
            (le, ":relation", -40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_enemy_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_enemy_villages", 1),
            (try_end),
          (try_end),
        (try_end),
        (store_mul, ":num_towns_effect", ":num_towns", 100),
        (store_mul, ":num_castles_effect", ":num_castles", 50),
        (store_mul, ":num_villages_effect", ":num_villages", 20),
        (store_add, ":num_centers", ":num_towns", ":num_castles"),
        (val_add, ":num_centers", ":num_villages"),
        (store_add, ":ruled_centers_effect", ":num_towns_effect", ":num_castles_effect"),
        (val_add, ":ruled_centers_effect", ":num_villages_effect"),
        (val_add, ":total_effect", ":ruled_centers_effect"),
        (store_mul, ":num_friendly_towns_effect", ":num_friendly_towns", 20),
        (store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
        (store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
        (store_add, ":friendly_centers_effect", ":num_friendly_towns_effect", ":num_friendly_villages_effect"),
        (val_add, ":total_effect", ":friendly_centers_effect"),
        (store_mul, ":num_enemy_towns_effect", ":num_enemy_towns", -40),
        (store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
        (store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
        (store_add, ":enemy_centers_effect", ":num_enemy_towns_effect", ":num_enemy_villages_effect"),
        (val_add, ":total_effect", ":enemy_centers_effect"),
        #inventory
        (assign, ":total_item_value", 0),
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (try_for_range, ":i_inv", 0, ":capacity"),
          (troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
          (ge, ":item", 0),
          (store_item_value, ":item_value", ":item"),
          (val_add, ":total_item_value", ":item_value"),
        (try_end),
        (store_div, ":total_item_value_effect", ":total_item_value", 200),
        (val_add, ":total_effect", ":total_item_value_effect"),
        #renown
        (troop_get_slot, ":renown", "trp_player", slot_troop_renown),
        (store_div, ":renown_effect", ":renown", 1),
        (val_add, ":total_effect", ":renown_effect"),
        #enemies and friends
        (assign, ":num_enemies", 0),
        (assign, ":num_friends", 0),
        (try_for_range, ":troop_no", heroes_begin, heroes_end),
          (this_or_next|troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
          (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_lady),
          (call_script, "script_troop_get_player_relation", ":troop_no"),
          (assign, ":relation", reg0),
          #(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (val_add, ":num_friends", 1),
          (else_try),
            (le, ":relation", -40),
            (val_add, ":num_enemies", 1),
          (try_end),
        (try_end),
        (store_mul, ":num_friends_effect", ":num_friends", 10),
        (val_add, ":total_effect", ":num_friends_effect"),
        (store_mul, ":num_enemies_effect", ":num_enemies", -10),
        (val_add, ":total_effect", ":num_enemies_effect"),
        #current day
        (store_current_day, ":cur_day"),
        (store_div, ":cur_day_effect", ":cur_day", -1),
        (val_add, ":total_effect", ":cur_day_effect"),
        #g_total_victories
        (store_mul, ":total_victories_effect", "$g_total_victories", 2),
        (val_add, ":total_effect", ":total_victories_effect"),
        #g_total_defeats
        (store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
        (val_add, ":total_effect", ":total_defeats_effect"),
        #g_total_quests_completed
        (store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
        (val_add, ":total_effect", ":total_quests_completed_effect"),
        #xp
        (troop_get_xp, ":xp", "trp_player"),
        (store_div, ":xp_effect", ":xp", 5000),
        (val_add, ":total_effect", ":xp_effect"),
        #companions joined / departed
        (assign, ":num_companions_joined", 0),
        (assign, ":num_companions_departed", 0),
        (try_for_range, ":troop_no", companions_begin, companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
        (val_add, ":total_effect", ":num_companions_joined_effect"),
        (store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
        (val_add, ":total_effect", ":num_companions_departed_effect"),
        #difficulty
        (get_average_game_difficulty, ":difficulty"),
        (assign, ":difficulty_effect", ":total_effect"),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

        (assign, reg5, ":cur_day"),
        (store_character_level, reg4, "trp_player"),
        (create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 950),
        (overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
        (create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg2, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg2, pos1),
        (assign, reg0, ":num_centers"),
        (create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":ruled_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_friendly_centers"),
        (create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":friendly_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemy_centers"),
        (create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":enemy_centers_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":num_friends"),
        (create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_friends_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_enemies"),
        (create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_enemies_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_victories"),
        (create_text_overlay, reg1, "@Victories: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_victories_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, "$g_total_defeats"),
        (create_text_overlay, reg1, "@Defeats: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_defeats_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_quests_completed"),
        (create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_quests_completed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_joined"),
        (create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_joined_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":num_companions_departed"),
        (create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_departed_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":wealth"),
        (create_text_overlay, reg1, "@Wealth: {reg0} scillingas", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":wealth_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":total_item_value"),
        (create_text_overlay, reg1, "@Inventory: {reg0} scillingas", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_item_value_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":renown"),
        (create_text_overlay, reg1, "@Renown: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":renown_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 410),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":xp"),
        (create_text_overlay, reg1, "@Experience: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":xp_effect"),
        (create_text_overlay, reg1, "@{!}{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (try_end),

        (assign, reg0, ":cur_day"),
        (create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":cur_day_effect"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":difficulty"),
        (create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":difficulty_effect"),
        (assign, reg3, reg0),
        (val_max, reg3, 0),
        (create_text_overlay, reg1, "@{!}{reg3?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":total_effect"),
        (create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg1, pos1),

        (assign, ":total_villages", 0),
        (assign, ":total_castles", 0),
        (assign, ":total_towns", 0),
        (assign, ":total_village_rels", 0),
        (assign, ":total_castle_rels", 0),
        (assign, ":total_town_rels", 0),
        (try_for_range, ":cur_center_no", centers_begin, centers_end),
          (try_begin),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_towns", 1),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castles", 1),
            (else_try),
              (val_add, ":total_villages", 1),
            (try_end),
          (else_try),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_town_rels", ":center_relation"),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castle_rels", ":center_relation"),
            (else_try),
              (val_add, ":total_village_rels", ":center_relation"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (gt, ":total_towns", 0),
          (store_random_in_range, ":random_town", 0, ":total_towns"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_town", 1),
            (lt, ":random_town", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_town_rels", 0),
          (store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
          (try_for_range, ":cur_center_no", towns_begin, towns_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_town_rel", ":center_relation"),
            (lt, ":random_town_rel", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_town", towns_begin, towns_end),
          (str_store_party_name, s9, ":random_town"),
        (try_end),
        (try_begin),
          (gt, ":total_castles", 0),
          (store_random_in_range, ":random_castle", 0, ":total_castles"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_castle", 1),
            (lt, ":random_castle", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_castle_rels", 0),
          (store_random_in_range, ":random_castle_rel", 0, ":total_castle_rels"),
          (try_for_range, ":cur_center_no", castles_begin, castles_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_castle_rel", ":center_relation"),
            (lt, ":random_castle_rel", 0),
            (str_store_party_name, s8, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_castle", castles_begin, castles_end),
          (str_store_party_name, s8, ":random_castle"),
        (try_end),
        (try_begin),
          (gt, ":total_villages", 0),
          (store_random_in_range, ":random_village", 0, ":total_villages"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_village", 1),
            (lt, ":random_village", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_village_rels", 0),
          (store_random_in_range, ":random_village_rel", 0, ":total_village_rels"),
          (try_for_range, ":cur_center_no", villages_begin, villages_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_village_rel", ":center_relation"),
            (lt, ":random_village_rel", 0),
            (str_store_party_name, s7, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_village", villages_begin, villages_end),
          (str_store_party_name, s7, ":random_village"),
        (try_end),

        (try_begin),
          (lt, ":total_effect", 100),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
          (str_store_string, s0, "str_retirement_text_1"),
        (else_try),
          (lt, ":total_effect", 200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
          (str_store_string, s0, "str_retirement_text_2"),
        (else_try),
          (lt, ":total_effect", 400),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
          (str_store_string, s0, "str_retirement_text_3"),
        (else_try),
          (lt, ":total_effect", 700),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
          (str_store_string, s0, "str_retirement_text_4"),
        (else_try),
          (lt, ":total_effect", 1200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
          (str_store_string, s0, "str_retirement_text_5"),
        (else_try),
          (lt, ":total_effect", 1850),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
          (str_store_string, s0, "str_retirement_text_6"),
        (else_try),
          (lt, ":total_effect", 2500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
          (str_store_string, s0, "str_retirement_text_7"),
        (else_try),
          (lt, ":total_effect", 3500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
          (str_store_string, s0, "str_retirement_text_8"),
        (else_try),
          (lt, ":total_effect", 5000),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
          (str_store_string, s0, "str_retirement_text_9"),
        (else_try),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
          (str_store_string, s0, "str_retirement_text_10"),
        (try_end),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 190),
        (overlay_set_area_size, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_retirement_1"),
          (jump_to_menu, "mnu_end_game"),
          (start_presentation, "prsnt_game_credits"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_retirement_2"),
          (presentation_set_duration, 0),
          (change_screen_return),
        (try_end),
        ]),
     ]),

  ("budget_report", 0, mesh_load_window,
   [(ti_on_presentation_load,
     [(presentation_set_duration, 999999),
      (set_fixed_point_multiplier, 1000),
      
      (create_mesh_overlay, reg1, "mesh_pic_recruits"),
      (position_set_x, pos1, 800),
      (position_set_y, pos1, 800),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 170),
      (position_set_y, pos1, 0),
      (overlay_set_position, reg1, pos1),
      
      (create_text_overlay, reg1, "str_weekly_budget", tf_center_justify),
      (position_set_x, pos1, 1500),
      (position_set_y, pos1, 1500),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 260),
      (position_set_y, pos1, 650),
      (overlay_set_position, reg1, pos1),

      (str_clear, s0),
      (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
      (position_set_x, pos1, 0),
      (position_set_y, pos1, 100),
      (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
      (position_set_x, pos1, 505),
      (position_set_y, pos1, 500),
      (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
      (set_container_overlay, "$g_presentation_obj_bugdet_report_container"),

      (options_get_campaign_ai, ":reduce_campaign_ai"),      
      (try_begin),
        (eq, ":reduce_campaign_ai", 0), #hard
        (assign, ":num_centers_needed_for_efficiency_loss", 2),
        (assign, ":tax_efficiency_loss_ratio_per_center", 5),
      (else_try),  
        (eq, ":reduce_campaign_ai", 1), #medium
        (assign, ":num_centers_needed_for_efficiency_loss", 4),
        (assign, ":tax_efficiency_loss_ratio_per_center", 4),
      (else_try),  
        (eq, ":reduce_campaign_ai", 2), #easy
        (assign, ":num_centers_needed_for_efficiency_loss", 6),
        (assign, ":tax_efficiency_loss_ratio_per_center", 3),
      (try_end),  

      (assign, ":num_lines", 0),
      (assign, ":num_owned_center_values_for_tax_efficiency", 0),
      (assign, ":all_centers_accumulated_total", 0),
      (assign, ":all_centers_accumulated_taxes_and_rents", 0),
      (try_for_range, ":center_no", centers_begin, centers_end),	  
	    (try_begin),
		  (party_slot_ge, ":center_no", slot_center_player_enterprise, 1),		  
		  (val_add, ":num_lines", 1),
	    (try_end),	  
	  
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (val_add, ":num_lines", 1),
        (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (val_add, ":num_lines", 1),
          (val_add, ":num_owned_center_values_for_tax_efficiency", 1),
        (try_end),
      (try_end),
      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_supporters_faction"),
        (neq, "$players_kingdom", "fac_player_faction"),
        (eq, "$player_has_homage", 0),
        (val_add, ":num_lines", 1),
      (try_end),
      (try_begin),      
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
      #gt accumulated total is ignored
        (val_add, ":num_lines", 1),
      (try_end),
      (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          (assign, ":garrison_troop", 1),
        (else_try),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
		  (store_faction_of_party, ":center_faction", ":party_no"),
		  (eq, ":center_faction", "fac_player_supporters_faction"),
		  (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),		  
		(try_end),
		
        (this_or_next|eq, ":party_no", "p_main_party"),
        ##diplomacy chief begin
        (assign, ":patrol_troop", 0),
        (try_begin),
          (party_slot_eq, ":party_no",slot_party_type, spt_patrol),
          (party_slot_eq, ":party_no", dplmc_slot_party_mission_diplomacy, "trp_player"),          
          (assign, ":patrol_troop", 1),
        (try_end),
        (this_or_next|eq, ":patrol_troop", 1),
        ##diplomacy end
        (eq, ":garrison_troop", 1),
        (val_add, ":num_lines", 1), #include empty towns/castles
      (try_end),
      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_add, ":num_lines", 2), #include new debt line
      (try_end),
      ##diplomacy chief begin
      (try_begin),
        (this_or_next|gt, "$g_player_minister", 0),
        (this_or_next|troop_slot_ge, "trp_player", slot_troop_spouse, 0),
        (this_or_next|gt, "$g_player_chamberlain", 0),
        (gt, "$g_player_constable", 0),
        (val_add, ":num_lines", 1), # staff salary
      (try_end),

      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (val_add, ":num_lines", 2), #earlier cash, new cash
      (try_end),
      ##diplomacy end   
	  #FLORIS BEGIN seafare duh chief
      (try_begin),
        (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
        (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
        (val_add, ":num_lines", 1),
      (try_end),
      	    (assign, reg20, 0),
		(try_for_parties, ":party_no"),
			(eq, reg20, 0),
			(party_slot_ge,":party_no", slot_ship_center, 1), #Ships are identified by 4 states, towns/player/wilderness/wilderness w/o guard
			(assign, reg20, 1),
			(val_add, ":num_lines", 1),
		(try_end),
      #FLORIS END
      (val_add, ":num_lines", 3),
      (store_mul, ":cur_y", 27, ":num_lines"),
      (assign, ":net_change", 0), #this is the amount added
      (try_for_range, ":center_no", centers_begin, centers_end),		
		#Enterprise
        (try_begin),
		  (party_get_slot, ":enterprise_output", ":center_no", slot_center_player_enterprise),
		  (gt, ":enterprise_output", 1),
		  (neg|party_slot_ge, ":center_no", slot_center_player_enterprise_days_until_complete, 1),
		  
          (str_store_party_name, s0, ":center_no"),
		  
		  (call_script, "script_process_player_enterprise", ":enterprise_output", ":center_no"),
		  (assign, ":net_profit", reg0),
		  (assign, ":price_of_single_output", reg4),
		  (assign, ":price_of_single_input", reg5),
		  (assign, ":price_of_secondary_input", reg10),
		  
		  (store_sub, ":town_order", ":center_no", towns_begin),
		  (store_add, ":craftsman_troop", ":town_order", "trp_town_1_master_craftsman"),

		  (item_get_slot, ":outputs_added_to_market", ":enterprise_output", slot_item_output_per_run),
		  (assign, ":outputs_added_to_warehouse", 0),
		  
		  #Enterprise impact of outputs
		  (try_begin),
		    #output placed in inventory: deduct selling price and add one good
			(party_slot_eq, ":center_no", slot_center_player_enterprise_production_order, 1),
			
			#Count empty slots
			(assign, ":empty_slots", 0),
			(troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
			(try_for_range, ":capacity_iterator", 0, ":total_capacity"),
				(troop_get_inventory_slot, ":slot", ":craftsman_troop", ":capacity_iterator"),
				(lt, ":slot", 1),
				(val_add, ":empty_slots", 1),
			(try_end),
			
			(assign, ":outputs_added_to_warehouse", ":outputs_added_to_market"),
			(val_min, ":outputs_added_to_warehouse",  ":empty_slots"),
			(gt, ":outputs_added_to_warehouse", 0),
			
			(store_mul, ":cancelled_sales", ":price_of_single_output", ":outputs_added_to_warehouse"),
			(val_sub, ":net_profit", ":cancelled_sales"),
			(val_sub, ":outputs_added_to_market", ":outputs_added_to_warehouse"),
		  (try_end),
		  
		  #If the transaction is for real, and not just a budget check
		  (try_begin),
		    (eq, "$g_apply_budget_report_to_gold", 1),
			(troop_add_items, ":craftsman_troop", ":enterprise_output", ":outputs_added_to_warehouse"),

			#Affect prices by outputs added to market
			(store_sub, ":item_slot_no", ":enterprise_output", trade_goods_begin),
			(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
			(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
			(store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
			(val_sub, ":current_index", ":impact_on_price"),
			(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
						
			(gt, "$cheat_mode", 0),
			(str_store_troop_name, s3, ":craftsman_troop"),
			(assign, reg3, ":outputs_added_to_warehouse"),
			(display_message, "@{!}DEBUG -- Adding {reg3} items to {s3}"),
		  (try_end),
		  
		  #Enterprise impact of outputs
		  (item_get_slot, ":inputs_taken_from_market", ":enterprise_output", slot_item_input_number),		  
		  (try_begin),
			(item_slot_ge, ":enterprise_output", slot_item_secondary_raw_material, 1),
		    (assign, ":2ary_inputs_taken_from_market", ":inputs_taken_from_market"),
		  (else_try),
		    (assign, ":2ary_inputs_taken_from_market", 0),
		  (try_end),
		  
		  (assign, ":inputs_taken_from_warehouse", 0),
		  (assign, ":2ary_inputs_taken_from_warehouse", 0),
		  
		  (try_begin),
		    #input present in inventory: reimburse for input cost and remove one good
			(troop_get_inventory_capacity, ":total_capacity", ":craftsman_troop"),
			(try_for_range, ":capacity_iterator", 0, ":total_capacity"),
				(troop_get_inventory_slot, ":item_in_slot", ":craftsman_troop", ":capacity_iterator"),
			
				(lt, ":inputs_taken_from_warehouse", ":inputs_taken_from_market"),
				(item_slot_eq, ":enterprise_output", slot_item_primary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),
				
				(val_add, ":inputs_taken_from_warehouse", 1),
			(else_try),	
				(lt, ":2ary_inputs_taken_from_warehouse", ":2ary_inputs_taken_from_market"),
				(item_slot_eq, ":enterprise_output", slot_item_secondary_raw_material, ":item_in_slot"),
                #(troop_inventory_slot_get_item_amount, ":item_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(troop_inventory_slot_get_item_max_amount, ":item_max_ammo", ":craftsman_troop", ":capacity_iterator"),
                #(eq, ":item_ammo", ":item_max_ammo"),

				(val_add, ":2ary_inputs_taken_from_warehouse", 1),
			(try_end),
		  
		    (try_begin),
				(gt, ":inputs_taken_from_warehouse", 0),
				(val_sub, ":inputs_taken_from_market", ":inputs_taken_from_warehouse"),
				(store_mul, ":savings_from_warehoused_inputs",	":price_of_single_input", ":inputs_taken_from_warehouse"),
				(val_add, ":net_profit", ":savings_from_warehoused_inputs"),
			(try_end),	
		    (try_begin),
				(gt, ":2ary_inputs_taken_from_warehouse", 0),
				(val_sub, ":2ary_inputs_taken_from_market", ":2ary_inputs_taken_from_warehouse"),
				(assign, ":savings_from_warehoused_inputs",	":price_of_secondary_input"),
				(val_add, ":net_profit", ":savings_from_warehoused_inputs"),
			(try_end),					
		  (try_end),
		  
		  #If the transaction is for real, and not just a budget check
		  (try_begin),
		    (eq, "$g_apply_budget_report_to_gold", 1),
			(item_get_slot, ":raw_material", ":enterprise_output", slot_item_primary_raw_material),
			(troop_remove_items, ":craftsman_troop", ":raw_material", ":inputs_taken_from_warehouse"),
			(item_get_slot, ":secondary_raw_material", ":enterprise_output", slot_item_secondary_raw_material),
			(troop_remove_items, ":craftsman_troop", ":secondary_raw_material", ":2ary_inputs_taken_from_warehouse"),
			
			#Affect prices by intputs added to market
			(store_sub, ":item_slot_no", ":raw_material", trade_goods_begin),
			(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
			(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
			(store_mul, ":impact_on_price", ":outputs_added_to_market", 15),
			(val_add, ":current_index", ":impact_on_price"),
			(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
			
			(try_begin),
				(gt, ":2ary_inputs_taken_from_market", 0),
				(store_sub, ":item_slot_no", ":secondary_raw_material", trade_goods_begin),
				(val_add, ":item_slot_no", slot_town_trade_good_prices_begin),
				(party_get_slot, ":current_index", ":center_no", ":item_slot_no"),			
				(val_add, ":current_index", 15),
				(party_set_slot, ":center_no", ":item_slot_no",":current_index"),			
			(try_end),
		  (try_end),		  
		  		  
		  (call_script, "script_get_enterprise_name", ":enterprise_output"),
		  (str_store_string, s5, reg0),
		  
          (create_text_overlay, reg1, "str_enterprise_s5_at_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
		  
          (assign, reg0, ":net_profit"),
		  
		  #Enterprise revenue strings
          (try_begin),
     	    (store_faction_of_party, ":faction_no", ":center_no"),
		    (store_relation, ":relation", ":faction_no", "$players_kingdom"),
		    (lt, ":relation", 0),
		    (assign, reg0, 0), 
		    (assign, ":net_profit", 0), 
		  
            (create_text_overlay, reg1, "str_under_sequestration", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),		  
		  (else_try),
		    (ge, reg0, 0), 
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0xFF0000),
          (try_end),
		  
          (val_add, ":all_centers_accumulated_total", ":net_profit"),
          (val_add, ":net_change", ":net_profit"),		  
		  
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),

		#Enterprise ends, taxes begin
        (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
        (party_get_slot, ":accumulated_rents", ":center_no", slot_center_accumulated_rents),
        (party_get_slot, ":accumulated_tariffs", ":center_no", slot_center_accumulated_tariffs),
		
        (store_add, ":accumulated_total", ":accumulated_rents", ":accumulated_tariffs"),
        (val_add, ":all_centers_accumulated_total", ":accumulated_total"),
        (val_add, ":all_centers_accumulated_taxes_and_rents", ":accumulated_total"),
        (val_add, ":net_change", ":accumulated_total"),
        (str_store_party_name, s0, ":center_no"),
        ##diplomacy chief begin
        (try_begin),
          (neg|is_between, ":center_no", castles_begin, castles_end), 
          (party_get_slot, ":tax_rate", ":center_no", dplmc_slot_center_taxation),
          (neq, ":tax_rate", 0),
          (call_script, "script_dplmc_describe_tax_rate_to_s50", ":tax_rate"),
          (str_store_string, s0, "@{s0} ({s50})"),
        (try_end),
        ##diplomacy end	 
        (create_text_overlay, reg1, "str_rents_from_s0", 0),
        ##diplomacy chief begin
        (str_store_party_name, s0, ":center_no"), 
        ##diplomacy end
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, ":accumulated_rents", 0),
          (assign, reg0, ":accumulated_rents"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0x00AA00),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
		
        (try_begin),
          (is_between, ":center_no", towns_begin, towns_end),
          (create_text_overlay, reg1, "str_tariffs_from_s0", 0),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 25),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (try_begin),
            (gt, ":accumulated_tariffs", 0),
            (assign, reg0, ":accumulated_tariffs"),
            (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
          (else_try),
            (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
          (try_end),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, reg1, pos1),
          (val_sub, ":cur_y", 27),
        (try_end),								
      (try_end),

      (try_begin),
        (gt, "$players_kingdom", 0),
        (neq, "$players_kingdom", "fac_player_supporters_faction"),
        (neq, "$players_kingdom", "fac_player_faction"),
        (eq, "$player_has_homage", 0),
        (str_store_faction_name, s0, "$players_kingdom"),
        (create_text_overlay, reg1, "str_mercenary_payment_from_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (call_script, "script_party_calculate_strength", "p_main_party", 0),
        (assign, ":offer_value", reg0),
        (val_div, ":offer_value", 2),
        (val_add, ":offer_value", 30),
        (call_script, "script_round_value", ":offer_value"),
        (val_add, ":net_change", reg0),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0x00AA00),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      
      (try_begin),
        (gt, ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (gt, ":all_centers_accumulated_total", 0),
        (store_sub, ":ratio_lost", ":num_owned_center_values_for_tax_efficiency", ":num_centers_needed_for_efficiency_loss"),
        (val_mul, ":ratio_lost", ":tax_efficiency_loss_ratio_per_center"),
        (val_min, ":ratio_lost", 65),
                
        #(store_mul, ":tax_lost", ":all_centers_accumulated_total", ":ratio_lost"),
        (store_mul, ":tax_lost", ":all_centers_accumulated_taxes_and_rents", ":ratio_lost"),
        (val_div, ":tax_lost", 100),
        ##diplomacy chief begin  
        (assign, ":percent", 0),
        (try_begin),
          (gt, "$g_player_chamberlain", 0),
          (val_add, ":percent", 30), #chief aumenta a 30, tener chamberlain reduce a 20 el tax loss
        (try_end),
        (try_begin),
          (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
          (try_begin),
            (faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
            (neq, ":centralization", 0),
            (val_mul, ":centralization", 5),
            (val_add, ":percent", ":centralization"),
          (try_end),
          (try_begin),
            (faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
            (neq, ":serfdom", 0),
            (val_mul, ":serfdom", 3),
            (val_add, ":percent", ":serfdom"),
          (try_end),
        (else_try),
          (gt, "$players_kingdom", 0),  
          (faction_get_slot, ":centralization", "$players_kingdom", dplmc_slot_faction_centralization),
          (neq, ":centralization", 0),
          (val_mul, ":centralization", -5),
          (val_add, ":percent", ":centralization"),          
        (try_end),
        (try_begin),
          (gt, ":tax_lost", 0),
          (store_mul, ":save", ":tax_lost", ":percent"),
          (val_div, ":save", 100),
          (store_mul, ":percent", ":save", 100),
          (val_div, ":percent", ":tax_lost"),
          (val_sub, ":tax_lost", ":save"),
        (try_end),
      ##diplomacy end
        (val_sub, ":net_change", ":tax_lost"),
        ##diplomacy chief begin
        (try_begin),
          (gt, "$g_player_chamberlain", 0),
          (str_store_string, s55, "str_loss_due_to_tax_inefficiency"),
          (assign, reg0, ":percent"),
          (val_mul, reg0, -1),
	        (str_store_string, s55, "@{s55} ({reg0}%)"),        
          (create_text_overlay, reg1, "@{s55}", 0),
        (else_try),
        ##diplomacy end
          (create_text_overlay, reg1, "str_loss_due_to_tax_inefficiency", 0),
        ##diplomacy chief begin
        (try_end),
        ##diplomacy end
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (store_mul, reg0, ":tax_lost", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

      (assign, "$g_player_num_creditors", 0), #motomataru chief fix debt morale penalty
      (assign, "$g_player_old_wages", 0), #motomataru chief fix debt morale penalty
	  (try_for_parties, ":party_no"),
        (assign, ":garrison_troop", 0),
        (try_begin),
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
          (party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (party_slot_eq, ":party_no", slot_town_lord, "trp_player"),
          ##diplomacy chief begin
          (neg|party_slot_eq, ":party_no", slot_village_infested_by_bandits, "trp_peasant_woman"),
          ##diplomacy end
          (assign, ":garrison_troop", 1),
		(else_try),  
          (this_or_next|party_slot_eq, ":party_no", slot_party_type, spt_town),
			(party_slot_eq, ":party_no", slot_party_type, spt_castle),
          (neg|party_slot_ge, ":party_no", slot_town_lord, 1), #unassigned
		  (store_faction_of_party, ":center_faction", ":party_no"),
		  (eq, ":center_faction", "fac_player_supporters_faction"),
		  (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
          (assign, ":garrison_troop", 1),			  
        (try_end),
        ##mercenario chief begin
        (assign, ":mercenario_troop", 0),
        (try_begin),
          (party_slot_eq, ":party_no",slot_party_type, spt_companion_raider),
          (assign, ":mercenario_troop", 1),
        (try_end),
        ##mercenario end
        ##diplomacy chief begin
        (assign, ":patrol_troop", 0),
        (try_begin),
          (party_slot_eq, ":party_no",slot_party_type, spt_patrol),
           (party_slot_eq, ":party_no", dplmc_slot_party_mission_diplomacy, "trp_player"),         
          (assign, ":patrol_troop", 1),
        (try_end),
        (this_or_next|eq, ":patrol_troop", 1),
        (this_or_next|eq, ":mercenario_troop", 1),#para capitan mercenario
        ##diplomacy end
        (this_or_next|eq, ":party_no", "p_main_party"),
        (this_or_next|eq, ":party_no", "p_fort"),#para salarios de salt mine y fort chief
        (this_or_next|eq, ":party_no", "p_salt_mine"),#para salarios de salt mine y fort chief
        (this_or_next|eq, ":party_no", "p_temp_loot_wagon"),#para salarios de wagon
			(eq, ":garrison_troop", 1),
        (assign, ":total_wage", 0),
        (party_get_num_companion_stacks, ":num_stacks", ":party_no"),
        (try_for_range, ":i_stack", 0, ":num_stacks"),
          (party_stack_get_troop_id, ":stack_troop", ":party_no", ":i_stack"),
          (party_stack_get_size, ":stack_size", ":party_no", ":i_stack"),
	      (val_add, "$g_player_num_creditors", ":stack_size"), #motomataru chief fix debt morale penalty
          (call_script, "script_game_get_troop_wage", ":stack_troop", ":party_no"),
          (assign, ":cur_wage", reg0),
          (val_mul, ":cur_wage", ":stack_size"),
          (val_add, ":total_wage", ":cur_wage"),
        (try_end),
        (try_begin),
          (this_or_next|eq, ":party_no", "p_fort"), # fuerte olvidado aqui chief en versiones previas.
          (eq, ":garrison_troop", 1),
          (val_div, ":total_wage", 2), #Half payment for garrisons
        (else_try),
          (eq, ":party_no", "p_main_party"),
          (store_sub, ":total_payment_ratio", 14, "$g_cur_week_half_daily_wage_payments"), #between 0 and 7
          (val_mul, ":total_wage", ":total_payment_ratio"),
          (val_div, ":total_wage", 14),
        (else_try),#para salarios de salt mine y fort chief y wagon
        (this_or_next|eq, ":party_no", "p_fort"),
        (this_or_next|eq, ":party_no", "p_temp_loot_wagon"),
          (eq, ":party_no", "p_salt_mine"),
          (party_get_num_companions, ":num_troops", ":party_no"), ## headcount for food cost
          (val_mul, ":num_troops", 12), ##approx weekly food consumption
          (store_sub, ":total_payment_ratio", 14, "$g_cur_week_half_daily_wage_payments"), #between 0 and 7
          (val_mul, ":total_wage", ":total_payment_ratio"),
          (val_div, ":total_wage", 14),
          (val_add, ":total_wage", ":num_troops"), ##food cost
      #salarios fort y salt mine chief acaba
         (else_try),
          (eq, ":party_no", spt_companion_raider),
          (party_get_num_companions, ":num_troops", ":party_no"), ## headcount for food cost
          (val_mul, ":num_troops", 12), ##approx weekly food consumption
          (store_sub, ":total_payment_ratio", 14, "$g_cur_week_half_daily_wage_payments"), #between 0 and 7
          (val_mul, ":total_wage", ":total_payment_ratio"),
          (val_div, ":total_wage", 14),
          (val_add, ":total_wage", ":num_troops"), ##food cost
#salarios capitan mercenario acaban
       (try_end),
##        (gt, ":total_wage", 0),
	    (val_add, "$g_player_old_wages", ":total_wage"), #motomataru chief fix debt morale penalty
        (val_mul, ":total_wage", -1),
        (val_add, ":net_change", ":total_wage"),
        (str_store_party_name, s0, ":party_no"),
        (try_begin),
          (eq, ":party_no", "p_main_party"),
          (str_store_string, s0, "str_s0s_party"),
        (try_end),
        (create_text_overlay, reg1, "str_wages_for_s0", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, ":total_wage", 0),
          (assign, reg0, ":total_wage"),
          (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
          (overlay_set_color, reg1, 0xFF0000),
        (else_try),
          (create_text_overlay, reg1, "@None", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),

	  #Floris Addendum / Crew Wages / Seafaring
		(assign, ":crew_wage", 0),
		(assign, reg20, 0),
		(try_for_parties, ":party_no"),
			(party_slot_ge,":party_no", slot_ship_center, 1), #Ships are identified by 4 states, towns/player/wilderness/wilderness w/o guard
			(party_get_num_companion_stacks, ":num_stacks", ":party_no"), #Calculating Wages
			(try_for_range, ":i_stack", 0, ":num_stacks"),
				(party_stack_get_troop_id, ":stack_troop", ":party_no", ":i_stack"),
				(party_stack_get_size, ":stack_size", ":party_no", ":i_stack"),
				(call_script, "script_game_get_troop_wage", ":stack_troop", ":party_no"),
				(assign, ":cur_wage", reg0),
				(val_mul, ":cur_wage", ":stack_size"),
				(val_mul, ":cur_wage", -1),
				(val_add, ":crew_wage", ":cur_wage"),
			(try_end),
			(assign, reg20, 1),
		(try_end),
		(try_begin),
			(eq, reg20, 1),
			(assign, reg0, ":crew_wage"),
			(val_add, ":net_change", ":crew_wage"),			
			(create_text_overlay, reg1, "@Wages for your Shipcrew's:", 0),
			(position_set_x, pos1, 900),
			(position_set_y, pos1, 900),
			(overlay_set_size, reg1, pos1),
			(position_set_x, pos1, 25),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg1, pos1),

			(create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line), #Display Wages
			(overlay_set_color, reg1, 0xFF0000),
			(position_set_x, pos1, 900),
			(position_set_y, pos1, 900),
			(overlay_set_size, reg1, pos1),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg1, pos1),
			(val_sub, ":cur_y", 27),
		(try_end),	
	#Floris End

      (try_begin),
        (gt, "$g_player_debt_to_party_members", 0),
        (val_sub, ":net_change", "$g_player_debt_to_party_members"),
        (create_text_overlay, reg1, "str_earlier_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (store_mul, reg0, "$g_player_debt_to_party_members", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy chief begin
      (assign, ":staff_salary", 0),
      (try_begin),
        (gt, "$g_player_minister", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (troop_slot_ge, "trp_player", slot_troop_spouse, 0),
        (val_add, ":staff_salary", 10),
      (try_end),
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (gt, "$g_player_constable", 0),
        (val_add, ":staff_salary", 15),
      (try_end),
      (try_begin),
        (gt, "$g_player_chancellor", 0),
        (val_add, ":staff_salary", 20),
      (try_end),
        
      (try_begin),
        (gt, ":staff_salary", 0),
        (val_sub, ":net_change", ":staff_salary"),
        (create_text_overlay, reg1, "@Staff:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (store_mul, reg0, ":staff_salary", -1),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0xFF0000),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy end
#floris da dinero al player de vasallos
       
      (try_begin),
        (faction_slot_eq, "fac_player_supporters_faction", slot_faction_state, sfs_active),
        (faction_slot_eq, "fac_player_supporters_faction", slot_faction_leader, "trp_player"),
        (assign, ":rents_from_vassals", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
            (party_slot_eq, ":center_no", slot_village_infested_by_bandits, 0), #Isn't infested
            (party_slot_ge, ":center_no", slot_town_lord, 1), #unassigned centers do not accumulate rents ; changed to 1, excludes player since the player is troop 0   
            (party_get_slot, ":lord", ":center_no", slot_town_lord),
            (store_troop_faction, ":faction", ":lord"),
            (eq, ":faction", "fac_player_supporters_faction"),

            (assign, ":cur_rents", 0),
            (try_begin),
                (party_slot_eq, ":center_no", slot_party_type, spt_village),
                (party_slot_eq, ":center_no", slot_village_state, svs_normal),
                (assign, ":cur_rents", 1200),
            (else_try),
                (party_slot_eq, ":center_no", slot_party_type, spt_castle),
                (assign, ":cur_rents", 1200),
            (else_try),
                (party_slot_eq, ":center_no", slot_party_type, spt_town),
                (assign, ":cur_rents", 2400),
            (try_end),
           
            (party_get_slot, ":prosperity", ":center_no", slot_town_prosperity), #prosperty changes between 0..100     
            (store_add, ":multiplier", 20, ":prosperity"), #multiplier changes between 20..120
            (val_mul, ":cur_rents", ":multiplier"),
            (val_div, ":cur_rents", 120),#Prosperity of 100 gives the default values
                         
            (game_get_reduce_campaign_ai, ":reduce_campaign_ai"),
            (try_begin),
                (eq, ":reduce_campaign_ai", 0), #hard (less money from rents)
                (val_mul, ":cur_rents", 3),
                (val_div, ":cur_rents", 4),
            (else_try),
                (eq, ":reduce_campaign_ai", 1), #medium (normal money from rents)
                #same
            (else_try),
                (eq, ":reduce_campaign_ai", 2), #easy (more money from rents)
                (val_mul, ":cur_rents", 4),
                (val_div, ":cur_rents", 3),
            (try_end),       

            (assign, ":base_rent", ":cur_rents"),       
                       
              ##Floris + diplomacy begin
            (try_begin),           
                (party_get_slot, ":tax_rate", ":center_no", dplmc_slot_center_taxation),
                (neq, ":tax_rate", 0),
                (store_div, ":rent_change", ":base_rent", 100),
                (val_mul, ":rent_change", ":tax_rate"),
                (val_add, ":cur_rents", ":rent_change"),
            (try_end),
            (try_begin),
                (faction_get_slot, ":aristocracy", "fac_player_supporters_faction", dplmc_slot_faction_aristocracy),
                (neq, ":aristocracy", 0),
                (val_mul, ":aristocracy", 5), #10
                (store_div, ":rent_change", ":base_rent", 100),
                (val_mul, ":rent_change", ":aristocracy"),
                (val_add, ":cur_rents", ":rent_change"),
            (try_end),
            (try_begin),
                (faction_get_slot, ":centralization", "fac_player_supporters_faction", dplmc_slot_faction_centralization),
                (neq, ":centralization", 0),
                (val_mul, ":centralization", 10), #20
                (store_div, ":rent_change", ":base_rent", 100),
                (val_mul, ":rent_change", ":centralization"),
                (val_add, ":cur_rents", ":rent_change"),
            (try_end),
            (try_begin),
                (faction_get_slot, ":serfdom", "fac_player_supporters_faction", dplmc_slot_faction_serfdom),
                (neq, ":serfdom", 0),
                (val_mul, ":serfdom", 2), #5
                (store_div, ":rent_change", ":base_rent", 100),
                (val_mul, ":rent_change", ":serfdom"),
                (val_add, ":cur_rents", ":rent_change"),
            (try_end),       
              ##Floris + diplomacy end
             
            (val_div, ":cur_rents", 5), #Only collect 20% of the above adjusted income
            (val_div, ":base_rent", 2), #Max Rent 50% of the Lord's take
            (val_clamp, ":cur_rents", 0, ":base_rent"),
            (val_add, ":rents_from_vassals", ":cur_rents"),
        (try_end), #Center Loop 
        (create_text_overlay, reg1, "@Tributes from your nobles:", 0), ##Report for new Taxes from Vassals/Floris
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (try_begin),           
            (gt, ":rents_from_vassals", 0),
            (val_add, ":net_change", ":rents_from_vassals"),
            (assign, reg0, ":rents_from_vassals"),
            (create_text_overlay, reg1, "str_reg0", tf_right_align|tf_single_line),
            (overlay_set_color, reg1, 0x00AA00),
        (else_try),
            (create_text_overlay, reg1, "str_none", tf_right_align|tf_single_line),
        (try_end),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),   
     #FLORIS END acaba

      (create_mesh_overlay, reg1, "mesh_white_plane"),
      (overlay_set_color, reg1, 0x000000),
      (position_set_x, pos1, 24000),
      (position_set_y, pos1, 50),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (store_add, ":line_y", ":cur_y", 25),
      (position_set_y, pos1, ":line_y"),
      (overlay_set_position, reg1, pos1),
      (create_text_overlay, reg1, "str_net_change", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (assign, reg0, ":net_change"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (try_begin),
        (gt, reg0, 0),
        (overlay_set_color, reg1, 0x00AA00),
      (else_try),
        (lt, reg0, 0),
        (overlay_set_color, reg1, 0xFF0000),
      (try_end),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (create_text_overlay, reg1, "str_earlier_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      ##diplomacy chief begin
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (store_troop_gold, ":player_wealth", "trp_household_possessions"),
      (else_try),
      ##diplomacy end
      (store_troop_gold, ":player_wealth", "trp_player"),
      ##diplomacy chief begin
      (try_end),
      ##diplomacy end
      (assign, reg0, ":player_wealth"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      (val_mul, ":net_change", -1),
      ##diplomacy chief begin
      (assign, ":cash_to_pay", 0),
      ##diplomacy end      
      (try_begin),
        (ge, ":player_wealth", ":net_change"),
        (assign, ":player_wealth_dif", ":net_change"),
        (assign, ":player_new_debt_to_party_members", 0),
      (else_try),
        (assign, ":player_wealth_dif", ":player_wealth"),
        (store_sub, ":player_new_debt_to_party_members", ":net_change", ":player_wealth"),
        ##diplomacy chief begin
        (try_begin),        
          (gt, "$g_player_chamberlain", 0),
          (store_troop_gold, ":player_inv_wealth", "trp_player"),
                
          (try_begin), #drawing debts from personal money
            (ge, ":player_inv_wealth", ":player_new_debt_to_party_members"),
            (assign, ":cash_to_pay", ":player_new_debt_to_party_members"),    
            (assign, ":player_new_debt_to_party_members", 0),
          (else_try),
            (assign, ":cash_to_pay", ":player_inv_wealth"),
            (val_sub, ":player_new_debt_to_party_members",":player_inv_wealth"),
          (try_end),
  
          (try_begin),
            (eq, "$g_apply_budget_report_to_gold", 1), 
            (troop_remove_gold, "trp_player", ":cash_to_pay"),  
            (assign, reg0, ":cash_to_pay"),
            (display_message, "@You paid {reg0} cash to liquidate a debt"),
          (try_end),
        (try_end),
        ##diplomacy end
      (try_end),
      (create_text_overlay, reg1, "str_new_wealth", 0),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 25),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (store_sub, reg0, ":player_wealth", ":player_wealth_dif"),
      (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
      (position_set_x, pos1, 900),
      (position_set_y, pos1, 900),
      (overlay_set_size, reg1, pos1),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, ":cur_y"),
      (overlay_set_position, reg1, pos1),
      (val_sub, ":cur_y", 27),
      ##diplomacy chief begin
      (try_begin),
        (gt, "$g_player_chamberlain", 0),
        (gt, ":cash_to_pay", 0),
        (create_text_overlay, reg1, "@Earlier cash:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),          
        (assign, reg0, ":player_inv_wealth"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
            
        (create_text_overlay, reg1, "@New cash:", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),          
        (store_sub, reg0, ":player_inv_wealth", ":cash_to_pay"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
      (try_end),
      ##diplomacy end

      (try_begin),
        (gt, ":player_new_debt_to_party_members", 0),
        (create_text_overlay, reg1, "str_new_debts", 0),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 25),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":player_new_debt_to_party_members"),
        (create_text_overlay, reg1, "@{!}{reg0}", tf_right_align|tf_single_line),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, ":cur_y"),
        (overlay_set_position, reg1, pos1),
        (val_sub, ":cur_y", 27),
        (neq, "$g_apply_budget_report_to_gold", 0),
        (call_script, "script_objectionable_action", tmt_egalitarian, "str_men_unpaid"),
      (try_end),

      (set_container_overlay, -1),

      (create_button_overlay, "$g_presentation_obj_budget_report_1", "@Continue..."),
      (position_set_x, pos1, 225),
      (position_set_y, pos1, 60),
      (overlay_set_position, "$g_presentation_obj_budget_report_1", pos1),

     (try_begin),
       (eq, "$g_apply_budget_report_to_gold", 1),
       (assign, "$g_player_debt_to_party_members", ":player_new_debt_to_party_members"),
       (try_begin), #bas chief anade Motomataru cambia aqui
           (gt, "$g_player_debt_to_party_members", 0),
           (display_message, "@Your troops are unpaid!  Morale has dropped.",0xFFFFAAAA),
           (call_script, "script_get_player_party_morale_values"),
           (store_mul, reg0, "$g_player_party_morale_modifier_debt", -1),
           (call_script, "script_change_player_party_morale", reg0),
       (try_end), #bas chief acaba
       (try_begin),
         (gt, ":player_wealth_dif", 0),
         ##diplomacy chief begin
          (try_begin),
            (gt, "$g_player_chamberlain", 0),
            (call_script, "script_dplmc_withdraw_from_treasury", ":player_wealth_dif"),
          (else_try),
          ##diplomacy end
          (troop_remove_gold, "trp_player", ":player_wealth_dif"),
          ##diplomacy chief begin
          (try_end),
          ##diplomacy end
        (else_try),
          (val_mul, ":player_wealth_dif", -1),
          ##diplomacy chief  begin
          (try_begin),
            (gt, "$g_player_chamberlain", 0),
            (call_script, "script_dplmc_pay_into_treasury", ":player_wealth_dif"),
          (else_try),
          ##diplomacy end
          (troop_add_gold, "trp_player", ":player_wealth_dif"),
          ##diplomacy chief begin
          (try_end),
          ##diplomacy end
        (try_end),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
          (party_set_slot, ":center_no", slot_center_accumulated_rents, 0),
          (party_set_slot, ":center_no", slot_center_accumulated_tariffs, 0),
        (try_end),
        (assign, "$g_cur_week_half_daily_wage_payments", 0),#Reseting the weekly half wage payments
      (try_end),
      ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_budget_report_1"),
        (presentation_set_duration, 0),
      (try_end),
      ]),
    ]),

  ("game_before_quit", 0, mesh_load_window,
   [
     (ti_on_presentation_load,
      [
        (try_begin),
          (is_trial_version),
          (set_fixed_point_multiplier, 1000),
          (create_mesh_overlay, reg0, "mesh_quit_adv"),
          (position_set_x, pos1, -1),
          (position_set_y, pos1, -1),
          (overlay_set_position, reg0, pos1),
          (position_set_x, pos1, 1002),
          (position_set_y, pos1, 1002),
          (overlay_set_size, reg0, pos1),
          (assign, "$g_game_before_quit_state", 0),
          (presentation_set_duration, 999999),
        (try_end),
      ]),
     (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (gt, ":cur_time", 500),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (this_or_next|key_clicked, key_right_mouse_button),
          (this_or_next|key_clicked, key_xbox_ltrigger),
          (key_clicked, key_xbox_rtrigger),
          (try_begin),
            (eq, "$g_game_before_quit_state", 0),
            (val_add, "$g_game_before_quit_state", 1),
            (create_mesh_overlay, reg0, "mesh_quit_adv_b"),
            (position_set_x, pos1, -1),
            (position_set_y, pos1, -1),
            (overlay_set_position, reg0, pos1),
            (position_set_x, pos1, 1002),
            (position_set_y, pos1, 1002),
            (overlay_set_size, reg0, pos1),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
        ]),
     ]),

  ("multiplayer_duel_start_counter", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [      
      (set_fixed_point_multiplier, 1000),

      (assign, "$g_multiplayer_duel_start_counter_overlay", -1),
      (assign, "$g_multiplayer_last_duel_start_counter_value", -1),

      (str_clear, s0),
      (create_text_overlay, "$g_multiplayer_duel_start_counter_overlay", s0, tf_center_justify|tf_with_outline),
      (overlay_set_color, "$g_multiplayer_duel_start_counter_overlay", 0xFFFFFF),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 600),
      (overlay_set_position, "$g_multiplayer_duel_start_counter_overlay", pos1),
      (position_set_x, pos1, 2000),
      (position_set_y, pos1, 2000),
      (overlay_set_size, "$g_multiplayer_duel_start_counter_overlay", pos1),

      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (ge, "$g_multiplayer_duel_start_counter_overlay", 0),
      (store_mission_timer_a, ":current_time"),
      (store_sub, ":seconds_past_in_duel_start", ":current_time", "$g_multiplayer_duel_start_time"),
      (store_sub, ":seconds_left_in_duel_start", 3, ":seconds_past_in_duel_start"),
      (try_begin),
        (le, ":seconds_left_in_duel_start", 0),
        (presentation_set_duration, 0),
      (else_try),
        (neq, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, "$g_multiplayer_last_duel_start_counter_value", ":seconds_left_in_duel_start"),
        (assign, reg0, ":seconds_left_in_duel_start"),
        (str_store_string, s0, "str_duel_starts_in_reg0_seconds"),
        (overlay_set_text, "$g_multiplayer_duel_start_counter_overlay", s0),
      (try_end),
      ]),
    ]),

########################################grueso final chief############################
#LAV lord notes chief
# Lav modifications start (custom lord notes)
    ("custom_lord_notes", prsntf_manual_end_only, 0,
        [
            (ti_on_presentation_load, [
                (call_script, "script_lco_create_container", 200, 275, 600, 201, 1),
                (call_script, "script_lco_create_mesh", "mesh_mp_ui_welcome_panel", 0, 0, 1000, 1000),
                (call_script, "script_lco_create_troop_portrait", "$g_cln_troop", 410, 12, 520, 520),
                (str_store_troop_name, s41, "$g_cln_troop"),
                (call_script, "script_lco_create_label", "str_s41", 300, 163, 1000, tf_center_justify),
                (overlay_set_color, reg0, 0x00FFFFFF),
                (call_script, "script_lco_create_label", "str_lcn_prompt", 25, 37, 750, 0),
                (overlay_set_color, reg0, 0x00FFFFFF),
                (store_troop_faction, ":faction", "$g_cln_troop"),
                (str_store_faction_name, s41, ":faction"),
                (call_script, "script_lco_create_label", "str_lcn_faction", 25, 137, 750, 0),
                (overlay_set_color, reg0, 0x00FFFFFF),
                (troop_get_slot, reg60, "$g_cln_troop", slot_troop_renown),
                (troop_get_slot, reg61, "$g_cln_troop", slot_troop_controversy),
                (call_script, "script_lco_create_label", "str_lcn_stats", 25, 112, 750, 0),
                (overlay_set_color, reg0, 0x00FFFFFF),
                (call_script, "script_lco_create_textbox", 25, 12, 400, 800),
                (assign, "$g_cln_edit", reg0),
                (overlay_obtain_focus, reg0),
                (set_container_overlay, -1),
                (presentation_set_duration, 999999),
            ]),
            (ti_on_presentation_event_state_change, [
                (store_trigger_param_1, ":overlay"),
                (store_trigger_param_2, ":value"),
                (try_begin),
                    (eq, ":overlay", "$g_cln_edit"),
                    (try_begin),
                        (neq, ":value", 0),
                        (add_troop_note_from_sreg, "$g_cln_troop", 15, "str_s0", 0),
                        (display_message, "@{!}Custom note added."),
                    (try_end),
                    (presentation_set_duration, 0),
                (try_end),
            ]),
        ]
    ),
# Lav modifications end (custom lord notes)

  
  ###seafare de duh chief empieza
  ("manage_ships", 0, mesh_load_window, [ #Ultra Important#
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
 
		(str_clear, s0), #just in case
		(try_for_range, ":i", 0, 100), #be sure the temp slots are empty
		    (troop_set_slot, "trp_temp_array_a", ":i", 0),
			(troop_set_slot, "trp_temp_array_b", ":i", 0),
		(try_end),
 
		(create_text_overlay, reg0, "@Manage Ship", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 680),
        (overlay_set_position, reg0, pos1),
		(position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, reg0, pos1),
 
		(str_store_string, s11, "@{s12}\
Ships were an important part of society, not only as a means of transportation, but also for the prestige that it conferred on her owner and skipper.\
Their ships permitted the people to embark on their voyages of trading, of raiding, and of exploration.\
Typically, a warship is narrower, longer, and is powered by oars. The warship is completely open and is built for speed and maneuverability.\
Cargo carrying capability is the primary concern. A typical warship might have had 16 rowers on each side.^^\
Warships typically had minimal decking, with removable planks under the rowers laid on the crossbeams (right), and small raised platforms at the bow and stern.\
When anchored or in harbor, an awning was arrayed overhead to provide some protection from the elements.\
A war ship was a valuable item, not only for the prestige and monetary value that went to her owner, but also for her utility in future battles.\
As a result, the intent in naval combat was to gain control of the ship (and any valuables she might be carrying) while minimizing any damage to the ship.\
This goal was achieved not by attacking the ship, but rather by attaching the ship's crew.\
The attackers attempted to sweep the decks free of the enemy without damaging the ship or her gear, and thus gain control of the ship."),
 
		(create_text_overlay, reg0, s11, tf_double_space|tf_scrollable),  ##Describes the ship
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 80),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 500),
        (overlay_set_area_size, reg0, pos1),
		
		
        (create_text_overlay, reg0, "@Select ship:", tf_center_justify),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg0, pos1),
		
		(position_set_x, pos1, 160),
		(position_set_y, pos1, 510),
        (create_combo_button_overlay, "$g_presentation_obj_11"),	#Combo Button for ships
        (overlay_set_position, "$g_presentation_obj_11", pos1),
		
		(assign, ":slot", 0),
		(try_for_parties, ":ship_no"),
			(party_slot_eq, ":ship_no", slot_ship_center, "$current_town"),
			(str_store_party_name, s1, ":ship_no"),
			(overlay_add_item, "$g_presentation_obj_11", s1),
			(overlay_set_val, "$g_presentation_obj_11", reg6),
			(troop_set_slot, "trp_temp_array_a", ":slot", ":ship_no"), #this way the troop slot # = overlay combo box index #
			(val_add, ":slot", 1),
		(try_end),
		
	    (create_text_overlay, reg0, "@Name your ship:", tf_center_justify),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 475),
        (overlay_set_position, reg0, pos1),
		
		(create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"), #Text box
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 440),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),	
				
        (create_button_overlay, "$g_presentation_obj_13", "@Rename Ship."),
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
	
	
		(create_text_overlay, reg0, "@Send ship to port:", tf_center_justify),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 250),
        (overlay_set_position, reg0, pos1),
		
		(position_set_x, pos1, 160),
		(position_set_y, pos1, 210),
        (create_combo_button_overlay, "$g_presentation_obj_12"),	#Combo Button for ships
        (overlay_set_position, "$g_presentation_obj_12", pos1),
      
		(assign, ":slot", 0),
		(try_for_range, ":town_no", towns_begin, castles_end),
			(neq, ":town_no", "$current_town"),
			(party_slot_ge, ":town_no", slot_town_port, 1),
			(store_faction_of_party, ":faction_1", "p_main_party"),
			(store_faction_of_party, ":faction_2", ":town_no"),
			(store_relation, ":relation", ":faction_1", ":faction_2"), #Cant send to enemy ports
			(ge, ":relation", 0),
			(str_store_party_name, s1, ":town_no"),
			(overlay_add_item, "$g_presentation_obj_12", s1),
			(troop_set_slot, "trp_temp_array_b", ":slot", ":town_no"), #this way the troop slot # = overlay combo box index #
			(val_add, ":slot", 1),
		(try_end),   	

		(try_begin), 
         (neq, reg6, -1),
         (overlay_set_val, "$g_presentation_obj_11", reg6),
		 (troop_get_slot, ":ship_no", "trp_temp_array_a", reg6),
		 (str_store_party_name, s13, ":ship_no"),
         (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s13),	
        (try_end),	
		(try_begin),
         (neq, reg8, -1),
         (overlay_set_val, "$g_presentation_obj_12", reg8),
        (try_end),	
##TO MAKE THIS WORK, add:
# (assign, reg6, -1),
# (assign, reg8, -1),
##right before the presentation call in the menu		

		
		(create_button_overlay, "$g_presentation_obj_14", "@Verify."), ##Duh - renamed
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_14", pos1),

		(create_button_overlay, "$g_presentation_obj_2", "@Manage the crew."),
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 365),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
		
		(create_button_overlay, "$g_presentation_obj_15", "@View the ship registry."),
        (position_set_x, pos1, 75),
        (position_set_y, pos1, 330),
        (overlay_set_position, "$g_presentation_obj_15", pos1),		
		
		
		(create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "@Done", 0),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),
        ]),
		
	(ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
			(eq, ":object", "$g_presentation_obj_11"), #Combo Box - Ship Select
			(assign, reg6, ":value"),
			(troop_get_slot, ":ship_no", "trp_temp_array_a", reg6),
			(str_store_party_name, s13, ":ship_no"),
			(party_get_num_companions, reg7, ":ship_no"),
			(str_store_string, s12, "@This is your ship '{s13}'. The crew is currently made up of {reg7} men.^^"),
            (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s13),
			(start_presentation, "prsnt_manage_ships"),
        (else_try),
			(eq, ":object", "$g_presentation_obj_name_kingdom_1"), #Text Box - Ship Name
			(str_store_string, s14, s0),
		(else_try),
		    (eq, ":object", "$g_presentation_obj_13"), # Rename Ship
			(neq, reg6, -1),
			(troop_get_slot, ":ship_no", "trp_temp_array_a", reg6),
			(party_set_name, ":ship_no", s14),
			(str_store_party_name, s13, ":ship_no"),
			(party_get_num_companions, reg7, ":ship_no"),
			(str_store_string, s12, "@This is your ship '{s13}'. The crew is currently made up of {reg7} men.^^"),
			(start_presentation, "prsnt_manage_ships"),
		(else_try),
			(eq, ":object", "$g_presentation_obj_2"), #Manage crew
			(try_begin),
				(party_get_slot, ":num_ships_current", "$current_town", slot_town_has_ship),
				(ge, ":num_ships_current", 1),	
				(troop_get_slot, ":ship_no", "trp_temp_array_a", reg6),
				(party_get_slot, ":loc_no", ":ship_no", slot_ship_center),
				(eq, ":loc_no", "$current_town"),
				(assign, "$ship", ":ship_no"),
				(assign, "$crew_screen_state", 1),
				(presentation_set_duration, 0),
			(else_try),
				(display_message, "@Make sure you selected a ship"),
			(try_end),
		(else_try),
			(eq, ":object", "$g_presentation_obj_15"), #Registry
			(assign, "$crew_screen_state", 3),
			(presentation_set_duration, 0),
		(else_try),
			(eq, ":object", "$g_presentation_obj_12"), #Combo Box - Port to Send
			(assign, reg8, ":value"),
		(else_try),
			(eq, ":object", "$g_presentation_obj_14"), # Send Ship
			(neq, reg6, -1),
			(neq, reg8, -1),
			(troop_get_slot, ":town_no", "trp_temp_array_b", reg8),
			(troop_get_slot, ":ship_no", "trp_temp_array_a", reg6),
			(try_begin),
				(party_get_num_companions, reg7, ":ship_no"),
				#(ge, reg7, 30),
				#(le, reg7, 90),
				(is_between, reg7, 30, 91),
				(party_get_slot, ":num_ships_current", "$current_town", slot_town_has_ship),
				(ge, ":num_ships_current", 1),												#Making sure there is a ship to send
				(party_get_slot, ":num_ships_target", ":town_no", slot_town_has_ship),
				(lt, ":num_ships_target", 5),												#Making sure the target town has space for another ship
				(val_add, ":num_ships_target", 1),	
				(val_sub, ":num_ships_current", 1),
				(party_set_slot, "$current_town", slot_town_has_ship, ":num_ships_current"),
				(party_set_slot, ":town_no", slot_town_has_ship, ":num_ships_target"),
				(party_set_slot, ":ship_no", slot_ship_center, ":town_no"),
				(str_store_party_name, s15, ":ship_no"),
				(str_store_party_name, s16, ":town_no"),
				(start_presentation, "prsnt_manage_ships"),
				(str_clear, s12),
				(display_message, "@Your ship {s15} succesfully set sail for {s16}."),
			(else_try),
				(display_message, "@Make sure a ship is selected, it has a sufficient crew and there is room for another ship in the target town."),
			(try_end),			
		(else_try),
		    (eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
			(presentation_set_duration, 0),
		(try_end),       
		
		]),
      ]),
  #seafare de duh chief acaba

  #duh chief bank and land system
     ("bank", 0, mesh_load_window, [ 													#	Floris Overhaul
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
 
		(try_begin),
			(party_get_slot, ":assets", "$current_town", slot_town_bank_assets),
			(troop_add_gold, "trp_player", ":assets"),
			(party_set_slot, "$current_town", slot_town_bank_assets, 0),
		(try_end),
 
		(str_store_party_name, s1, "$current_town"),
 
 
	    (create_text_overlay, reg0, 
"@This area of {s1} can best be described as the very core of the town.^^\
 You can almost see the strings that are being pulled from here, the money that comes and goes at seemingly endless rates. \
 Here you can buy the land that is cultivated outside the towns gates and benefit from the ones working hard.\
 Of course you might not have the scillingas required to do so, but the moneylenders are known to have some spare change.",tf_center_justify),
        (position_set_x, pos1, 475),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg0, pos1),
		
        (position_set_x, pos2, 800),
        (position_set_y, pos2, 900),		
		(overlay_set_size, reg0, pos2),
		
		(party_get_slot, ":population", "$current_town", slot_center_population),
		(party_get_slot, ":land_town", "$current_town", slot_town_acres),
		(party_get_slot, ":land_player", "$current_town", slot_town_player_acres),
		(store_add, ":land_total", ":land_town", ":land_player"),
		(assign, reg1, ":population"),
		(assign, reg2, ":land_total"),
		(assign, reg3, ":land_player"),
		
		(party_get_slot, ":debt", "$current_town", slot_town_bank_debt),
		(assign, reg4, ":debt"),
		
		(assign, reg5, 0),														#Slider storage / acres		Buy
		(assign, reg6, 0),														#Slider storage / money		Borrow
		(assign, reg7, 0),														#Slider storage / acres		Build
		(assign, reg8, 0),														#Slider storage / money		Pay back
		
		(party_get_slot, ":prosp_mod", "$current_town", slot_town_prosperity),
		(store_mul, ":price_mod", ":prosp_mod", 10),
		(val_sub, ":price_mod", 500),
		(store_add, reg9, 2000, ":price_mod"),									#Buy Price #chief hace mas caro, antes 1000
		(store_add, reg10, 950, ":price_mod"),									#Sell Price #chief hace mas caro, antes 750
		(store_add, reg11, 3000, ":price_mod"),									#Build Price #chief hace mas caro, antes 2000
		#reg12 used for buy/sell switch
		(store_sub, ":rent_mod", ":prosp_mod", 50),
		(store_add, reg13, ":rent_mod", 100),									#Rent Revenue
 
		(create_text_overlay, "$g_presentation_obj_19", "@{reg1} people live in {s1}. There are currently {reg2} acres of land available for cultivation to provide them with \
 food and other goods. You own {reg3} acres of land in this town. You currently owe the moneylenders of {s1} {reg4} scillingas. The interest rate is 20% and the contract period amounts \
 to 2 weeks. If you dont manage to pay off your debt until the deadline, the interest is raised to 40%. Buying an existing acre costs {reg9} scillingas, while it sells for {reg10} scillingas. Building a new one requires {reg11} scillingas.\
 The rent paid to landowners currently accumulates to {reg13} scillingas per acre every 2 weeks and has to be collected in the town. Land wont be rented if a town is already well supplied.",tf_center_justify),
        (position_set_x, pos1, 475),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$g_presentation_obj_19", pos1),
		
        (position_set_x, pos2, 900),
        (position_set_y, pos2, 1000),		
		(overlay_set_size, "$g_presentation_obj_19", pos2),	
		
		(try_begin),
			(eq, reg12, 2222),	
			(str_store_string, s2, "@Choose how many acres you wish to sell :"),
		(else_try),
			(str_store_string, s2, "@Choose how many acres you wish to buy :"),
		(try_end),
			
		(create_button_overlay, "$g_presentation_obj_16", "@{s2}",tf_center_justify),				#	Landlords buy
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 350),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
		
		(store_troop_gold, ":funds", "trp_player"),
		(store_div, ":funds_build", ":funds", reg11),
		(val_div, ":funds", reg9),
		(val_min, ":funds", ":land_town"),

		(try_begin),
			(eq, reg12, 2222),
			(party_get_slot, ":sell_no", "$current_town", slot_town_player_acres),
			(assign, ":funds", ":sell_no"),
		(try_end),
 
	(create_slider_overlay, "$g_presentation_obj_1", 0, ":funds"),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 310),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
 
	(create_text_overlay, "$g_presentation_obj_2", "@0"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_2", pos1),			
 
	(create_button_overlay, "$g_presentation_obj_3", "@Buy Land",tf_center_justify), #chief cambia verify		
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 275),
        (overlay_set_position, "$g_presentation_obj_3", pos1),	
 
 
 
	(create_text_overlay, reg0, "@Choose how much money you wish to borrow :",tf_center_justify),			#	Moneylenders borrow
        (position_set_x, pos1, 725),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg0, pos1),
 
		(assign, ":fief_count", 0),																				#	Money = 250*Prosperity + Relationship*100 - Debt, IF Player owns fief or is renowned,
		(try_for_range, ":cur_center", centers_begin, centers_end),												#	otherwise not more than 5000 + Relationship*100 - Debt
			(party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
			(val_add, ":fief_count", 1),
		(try_end),
		(troop_get_slot, ":renown", "trp_player", slot_troop_renown),
		(party_get_slot, ":prosperity", "$current_town", slot_town_prosperity),
		(store_mul, ":money", ":prosperity", 250),
		(try_begin),
			(lt, ":fief_count", 1),
			(lt, ":renown", 500),
			(gt, ":money", 5000),
			(assign, ":money", 5000),
		(try_end),
		(party_get_slot, ":player_relation", "$current_town", slot_center_player_relation),
		(store_mul, ":trust", ":player_relation", 100),
		(val_add, ":money", ":trust"),
		(val_sub, ":money", ":debt"),
		(try_begin),																							#	Money lending cant turn negative
			(lt, ":money", 0),	
			(assign, ":money", 0),
		(try_end),
 
		(try_begin),
			(assign, reg25, 0),
			(try_for_range, ":town_no", towns_begin, towns_end),													#	Too much debt overall or in a single bank will stop banks from lending you money
				(party_get_slot, ":debt_all", ":town_no", slot_town_bank_debt),
				(val_add, reg25, ":debt_all"),
			(try_end),
			(ge, reg25, 50000),
			(assign, ":money", 0),
		(try_end),
 
	(create_slider_overlay, "$g_presentation_obj_4", 0, ":money"),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 310),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
 
	(create_text_overlay, "$g_presentation_obj_5", "@0"),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
 
	(create_button_overlay, "$g_presentation_obj_6", "@Borrow",tf_center_justify),	#chief cambia Verify	
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 275),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
 
 
 
	(create_text_overlay, "$g_presentation_obj_7", "@Buy and prepare uncultivated land :",tf_center_justify),		#	Landlord / Buy and Build
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
 
 
	(create_slider_overlay, "$g_presentation_obj_8", 0, ":funds_build"),											#	Choose acres to build 
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 160),
        (overlay_set_position, "$g_presentation_obj_8", pos1),		
 
	(create_text_overlay, "$g_presentation_obj_9", "@0"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_9", pos1),			
 
	(create_button_overlay, "$g_presentation_obj_10", "@Prepare Land",tf_center_justify), #chief cambia verify		
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 125),
        (overlay_set_position, "$g_presentation_obj_10", pos1),	
 
 
	(create_text_overlay, "$g_presentation_obj_11", "@Pay off your debt :",tf_center_justify),		#	Pay off your debt
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_11", pos1),		
 
		(store_troop_gold, ":funds", "trp_player"),
		(try_begin),
			(lt, ":debt", ":funds"),
			(assign, ":funds", ":debt"),
		(try_end),
 
	(create_slider_overlay, "$g_presentation_obj_12", 0, ":funds"),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 160),
        (overlay_set_position, "$g_presentation_obj_12", pos1),		
 
	(create_text_overlay, "$g_presentation_obj_13", "@0"),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 150),
        (overlay_set_position, "$g_presentation_obj_13", pos1),			
 
	(create_button_overlay, "$g_presentation_obj_14", "@Make Payment",tf_center_justify),	#chief cambia verify	
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 125),
        (overlay_set_position, "$g_presentation_obj_14", pos1),	
 
 
 
	(create_game_button_overlay, "$g_presentation_obj_15", "@Done", 0),										#	Leave
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_15", pos1),		
 
        ]),
 
	(ti_on_presentation_event_state_change, 
		[
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
		
		(try_begin),
			(eq, ":object", "$g_presentation_obj_1"),															#	Show chosen amount of land
			(assign, reg5, ":value"),
			(overlay_set_text, "$g_presentation_obj_2", "@{reg5}"),
		(else_try),
			(eq, ":object", "$g_presentation_obj_3"),															#	Sell/Buy chosen amount of land
			(try_begin),
				(eq, reg12, 2222),
				(try_begin),
					(gt, reg5, 0),
					(store_mul, ":price", reg5, reg10),
					(troop_add_gold, "trp_player", ":price"),					
					(party_get_slot, ":land_town", "$current_town", slot_town_acres),
					(val_add, ":land_town", reg5),
					(party_set_slot, "$current_town", slot_town_acres, ":land_town"),
					(party_get_slot, ":land_player", "$current_town", slot_town_player_acres),
					(val_sub, ":land_player", reg5),
					(party_set_slot, "$current_town", slot_town_player_acres, ":land_player"),
					(start_presentation, "prsnt_bank"),					
				(else_try),	
					(display_message, "@You cant sell 0 acres of land."),
				(try_end),
			(else_try),
				(try_begin),
					(gt, reg5, 0),
					(store_mul, ":cost", reg5, reg9),
					(troop_remove_gold, "trp_player", ":cost"),
					(party_get_slot, ":land_town", "$current_town", slot_town_acres),
					(val_sub, ":land_town", reg5),
					(party_set_slot, "$current_town", slot_town_acres, ":land_town"),
					(party_get_slot, ":land_player", "$current_town", slot_town_player_acres),
					(val_add, ":land_player", reg5),
					(party_set_slot, "$current_town", slot_town_player_acres, ":land_player"),
					(start_presentation, "prsnt_bank"),
				(else_try),
					(display_message, "@You cant buy 0 acres of land."),
				(try_end),
			(try_end),
		(else_try),
			(eq, ":object", "$g_presentation_obj_4"),															#	Show chosen amount of money
			(assign, reg6, ":value"),
			(overlay_set_text, "$g_presentation_obj_5", "@{reg6}"),
		(else_try),		
			(eq, ":object", "$g_presentation_obj_6"),															#	Borrow chosen amount of money
			(try_begin),
				(gt, reg6, 0),
				(party_get_slot, ":debt", "$current_town", slot_town_bank_debt),
				(try_begin),
					(le, ":debt", 0),
					(store_current_hours, ":date"),
					(val_add, ":date", 24*14*2), 								#	First Deadline / 4 weeks / then 2 weeks (see simple_triggers)
					(party_set_slot, "$current_town", slot_town_bank_deadline, ":date"),
				(try_end),
				(troop_add_gold, "trp_player", reg6),
				(val_mul, reg6, 120),
				(val_div, reg6, 100),
				(val_add, ":debt", reg6),
				(party_set_slot, "$current_town", slot_town_bank_debt, ":debt"),
				(start_presentation, "prsnt_bank"),
			(else_try),
				(display_message, "@You cant borrow 0 scillingas."), #chief cambia
			(try_end),
		(else_try),
			(eq, ":object", "$g_presentation_obj_8"),															#	Show chosen amount of land	//	2nd Option
			(assign, reg7, ":value"),
			(overlay_set_text, "$g_presentation_obj_9", "@{reg7}"),			
		(else_try),
			(eq, ":object", "$g_presentation_obj_10"),															#	Buy chosen amount of land	//	2nd Option
			(try_begin),
				(gt, reg7, 0),
				(store_mul, ":cost", reg7, reg11),
				(troop_remove_gold, "trp_player", ":cost"),
				(party_get_slot, ":land_player", "$current_town", slot_town_player_acres),
				(val_add, ":land_player", reg7),
				(party_set_slot, "$current_town", slot_town_player_acres, ":land_player"),
				(start_presentation, "prsnt_bank"),
			(else_try),
				(display_message, "@You cant buy 0 acres of land."),
			(try_end),		
		(else_try),
			(eq, ":object", "$g_presentation_obj_12"),															#	Show chosen amount of money
			(assign, reg8, ":value"),
			(overlay_set_text, "$g_presentation_obj_13", "@{reg8}"),
		(else_try),
			(eq, ":object", "$g_presentation_obj_14"),															#	Pay back chosen amount of money
			(try_begin),
				(gt, reg8, 0),
				(troop_remove_gold, "trp_player", reg8),
				(party_get_slot, ":debt", "$current_town", slot_town_bank_debt),
				(val_sub, ":debt", reg8),
				(party_set_slot, "$current_town", slot_town_bank_debt, ":debt"),
				(try_begin),
					(le, ":debt", 0),
					(party_set_slot, "$current_town", slot_town_bank_deadline, 0),
				(try_end),
				(start_presentation, "prsnt_bank"),
			(else_try),
				(display_message, "@You cant pay back 0 scillingas."), #chief
			(try_end),
		(else_try),																								#	Switch Buy/Sell
			(eq, ":object", "$g_presentation_obj_16"),
			(try_begin),
				(neq, reg12, 2222),
				(assign, reg12, 2222),
				(start_presentation, "prsnt_bank"),
			(else_try),
				(assign, reg12, 0),
				(start_presentation, "prsnt_bank"),
			(try_end),
		(else_try),
			(eq, ":object", "$g_presentation_obj_15"),															#	Leave
			(presentation_set_duration, 0),
		(try_end),       
		
		]),
      ]),	  

	 #	Floris Bank
  ("bank_quickview", 0, mesh_cpov, #mesh_companion_overview #chief
   [
     (ti_on_presentation_load,
      [
	    (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
 
#		(str_clear, s0),
 #       (create_text_overlay, reg0, "@Hello, {s0}", tf_scrollable),
 #       (position_set_x, pos1, 50),
  #      (position_set_y, pos1, 50),
 ###       (overlay_set_position, reg0, pos1),
 #       (position_set_x, pos1, 550),
 #       (position_set_y, pos1, 630),
  #      (overlay_set_area_size, reg0, pos1),
 #       (set_container_overlay, reg0),
 
 
 
 
		###HEADLINES###
		(assign, ":x_poshl", 155),
		(assign, ":y_pos", 581),
		(assign, ":jq_size", pos0),
		(position_set_x, ":jq_size", 720),
		(position_set_y, ":jq_size", 775),
 
        (create_text_overlay, reg1, "@Town", tf_center_justify),
    	(overlay_set_size, reg1, ":jq_size"),
 		(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg1, pos1),
 
        (create_text_overlay, reg1, "@Acres", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 120),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),	
 
        (create_text_overlay, reg1, "@Owned", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 108),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),
 
        (create_text_overlay, reg1, "@Balance", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 112),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),
 
		(create_text_overlay, reg1, "@Assets", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 105),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),
 
        (create_text_overlay, reg1, "@Debt", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 105),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),	
 
        (create_text_overlay, reg1, "@Deadline", tf_center_justify),
       	(overlay_set_size, reg1, ":jq_size"),
		(val_add, ":x_poshl", 120),
 		(position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg1, pos1),			
 
 
		(str_clear, s0),
		(create_text_overlay, reg0, s0, tf_scrollable),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 450),
        (overlay_set_area_size, reg0, pos1),
		(set_container_overlay, reg0),		
 
		(assign, ":jq_value", 100),
		(assign, ":jq_size", 0),
		(assign, ":x_pos", 0),
		(assign, ":y_pos", 947), #chief amplia para que scroll coja todas las ciudades de brytenwalda
		(str_clear, s9),	
		(str_clear, s8),
 
 
        (assign, reg2, 0),#total_acres
        (assign, reg3, 0),#player_acres
        (assign, reg4, 0),#balance
        (assign, reg5, 0),#assets
		(assign, reg6, 0),#debt
		(assign, reg7, 0),#deadline
		
		(try_for_range, ":center_no", towns_begin, towns_end),
			(party_get_slot, ":land_town", ":center_no", slot_town_acres),
			(party_get_slot, ":land_player", ":center_no", slot_town_player_acres),
			(party_get_slot, ":assets", ":center_no", slot_town_bank_assets),
			(party_get_slot,":debt",":center_no",slot_town_bank_debt),
			(party_get_slot, ":deadline", ":center_no", slot_town_bank_deadline),
			(party_get_slot, ":population", ":center_no", slot_center_population),
			(party_get_slot, ":prosperity", ":center_no", slot_town_prosperity),
			
			(store_add, ":land_total", ":land_town", ":land_player"),
			
			(store_div, ":acres_needed", ":population", 200),
			(store_sub, ":surplus", ":land_total", ":acres_needed"),
			(store_sub, ":revenue", ":prosperity", 50),
			(val_add, ":revenue", 100),
			(assign, ":rent_player", 0),			
			(assign, ":upkeep_player", 0),
			(try_begin),
				(gt, ":land_player", 0),					# 	Fix El problema chief estaba por aqui, igual Duh lo ha arreglado
				(try_begin),						#	Player Balance
					(le, ":land_total", ":acres_needed"),
					(store_mul, ":rent_player", ":land_player", ":revenue"),										
				(else_try),
					(store_mul, ":penalty", ":surplus", -1),
					(val_add, ":penalty", ":revenue"),
					(try_begin),
						(ge, ":penalty", 85),
						(store_mul, ":rent_player", ":land_player", ":penalty"),
					(else_try),
						(store_sub, ":non_rented", ":surplus", 15),
						(val_sub, ":land_player", ":non_rented"),
						(store_mul, ":rent_player", ":land_player", 85),
						(store_mul, ":upkeep_player", ":non_rented", -50),
					(try_end),
				(try_end),
			(try_end),
			
			(store_add, ":balance", ":rent_player", ":upkeep_player"),
			
			(val_add, ":jq_value", 1),   

			#center center name
			(val_add, ":x_pos", 118), 
			(str_store_party_name,s9, ":center_no"),
			(str_store_string, s1, "@{s9}"),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#center land in acres
			(val_add, ":x_pos", 135),  
			(assign, reg2, ":land_total"),
			(create_text_overlay, reg1, "@{reg2}", tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#Player land in city
			(val_add, ":x_pos", 113),  
			(assign, reg3, ":land_player"),
			(str_store_string, s1, "@{reg3}"),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#city Balance
			(val_add, ":x_pos", 110),  
			(assign, reg4, ":balance"),
			(str_store_string, s1, "@{reg4}"),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#Player assets in city
			(val_add, ":x_pos", 110),  
			(assign, reg4, ":assets"),
			(str_store_string, s1, "@{reg4}"),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#city Debt
			(val_add, ":x_pos", 105),  
			(assign, reg5, ":debt"),
			(str_store_string, s1, "@{reg5}"),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			#city Deadline
			(val_add, ":x_pos", 105),
			(try_begin),
				(gt, ":deadline", 0),
				(call_script, "script_game_get_date_text", 1, ":deadline"),
			(else_try),
				(str_store_string, s1, "@None"),
			(try_end),
			(create_text_overlay, reg1, s1, tf_left_align),
			(position_set_x, pos3, ":x_pos"),
			(position_set_y, pos3, ":y_pos"),
			(overlay_set_position, reg1, pos3),
			(position_set_x, pos3, 750),
			(position_set_y, pos3, 850),
			(overlay_set_size, reg1, pos3),
 
			(assign, ":x_pos", 0),
			(assign, ":x_poshl", 165),
			(val_sub, ":y_pos", 23),#linebreak 
			(ge, ":x_pos", 950),
			(assign, ":x_pos", 0),
			(val_sub, ":y_pos", 23),
		(try_end), #Center-Bank Loop End
 
	  (set_container_overlay, -1),
 
	  		 #Back to menu - graphical button
	    (create_game_button_overlay, "$g_jq_Return_to_menu", "@_Return to menu_"),	 
	    (position_set_x, pos1, 500),
        (position_set_y, pos1, 23),
        (overlay_set_position, "$g_jq_Return_to_menu", pos1),
		(assign, "$g_jq_Back_to_shop", 0), ##BUGFIX - savegame compatability 
		(assign, "$jq_nr", 0), ##BUGFIX - savegame compatability 
 
	  ]),
	 (ti_on_presentation_event_state_change,
     [
        (store_trigger_param_1, ":object"),
		(try_begin), 
			(eq, ":object", "$g_jq_Return_to_menu"),
			(presentation_set_duration, 0),
		(try_end),
		]),
	]),
	##	Floris Bank End


  #duh acaba
 #freelancer chief empieza 
# __Freelancer Report: Commander_:Start_________________________________________________

  ("taragoth_lords_report", 0, mesh_load_window, [

	(ti_on_presentation_load,
	[
		(presentation_set_duration, 999999),
		(set_fixed_point_multiplier, 1000),

		#title
		(create_text_overlay, reg0, "@CURRENT COMMANDER'S REPORT!", tf_left_align),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 650),
		(overlay_set_position, reg0, pos1),
		(position_set_x, pos1, 1500),
		(position_set_y, pos1, 1500),
		(overlay_set_size, reg0, pos1),
		
		#Player Name
		#(create_text_overlay, reg0, "@'{playername}'", tf_center_justify),
		#(position_set_x, pos1, 500),
		#(position_set_y, pos1, 615),
		#(overlay_set_position, reg0, pos1),

		(assign, ":cur_y_adder", 40),  #the amount of space between lines
		(assign, ":cur_y", 580),
		(position_set_x, pos1, 50),		
		
		#Commander_name
		(str_store_troop_name, s19, "$enlisted_lord"),
		(create_text_overlay, reg0, "@Your Commander: {s19}", tf_left_align),	
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#Player_Relation
		(call_script, "script_troop_get_player_relation", "$enlisted_lord"),
		#(assign, ":commander_relation", reg0),
		(create_text_overlay, reg0, "@Commander Relation: {reg0}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#Faction_name
		(store_faction_of_troop, reg1, "$enlisted_lord"),
		(str_store_faction_name, s20, reg1),
		(create_text_overlay, reg0, "@Enlisted Faction: {s20}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#Rank_name
		(str_store_troop_name, s21, "$player_cur_troop"),
		(create_text_overlay, reg0, "@Current Rank: {s21}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),
		
		#xp-to-next promotion
		(troop_get_slot, ":service_xp_start", "trp_player", slot_troop_freelancer_start_xp),
        (troop_get_xp, ":service_xp_cur", "trp_player"),
        (val_sub, ":service_xp_cur", ":service_xp_start"),
		(troop_get_upgrade_troop, ":upgrade_troop", "$player_cur_troop", 0),
		(str_store_string, s1, "@N/A"),
		(try_begin),
			(gt, ":upgrade_troop", 1), #make sure troop is valid and not player troop
			(call_script, "script_game_get_upgrade_xp", "$player_cur_troop"),
			(store_sub, reg0, reg0, ":service_xp_cur"), #required XP from script
			(gt, reg0, 0),
			(str_store_string, s1, "str_reg0"),
		(try_end),
		(create_text_overlay, reg0, "@Experience to next promotion: {s1}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#enlisted_time
		(store_current_day, ":cur_day"),
		(troop_get_slot, ":service_day_start", "trp_player", slot_troop_freelancer_start_date),
		(store_sub, ":service_length", ":cur_day", ":service_day_start"),
		(assign, reg20, ":service_length"),
		(create_text_overlay, reg0, "@Days in service: {reg20}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#current_wage
		(store_character_level, ":level", "$player_cur_troop"),
		#pays player 10 times the troop level
		(store_mul, ":weekly_pay", 10, ":level"),
		(assign, reg23, ":weekly_pay"),
		(create_text_overlay, reg0, "@Current Wage: {reg23} denars.", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),
		
		#next_pay
		(str_store_date, s25, "$g_next_pay_time"),
		(create_text_overlay, reg0, "@Next Pay/Promotion day: {s25}", tf_left_align),
		(position_set_y, pos1, ":cur_y"),
		(overlay_set_position, reg0, pos1),
		(val_sub, ":cur_y", ":cur_y_adder"),

		#Commanders_troops size(right side)
		(store_party_size_wo_prisoners,":army_size","$enlisted_party"), 
		(assign, reg26, ":army_size"),
		(create_text_overlay, reg0, "@Army size: {reg26}", tf_left_align),
		(position_set_x, pos1, 800),
		(position_set_y, pos1, 60),
		(overlay_set_position, reg0, pos1),
		(position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg0, pos1),

		#commanders_army_title
		(create_text_overlay, reg0, "@Commander's Army", tf_left_align),
		(position_set_x, pos1, 500),
		(position_set_y, pos1, 430),
		(overlay_set_position, reg0, pos1),

        #camp  pic #chief quita porque queda feo		
##		(create_mesh_overlay, reg0, "mesh_pic_extra_viejo"),
##		(position_set_x, pos1, 450),
##		(position_set_y, pos1, 380),
##		(overlay_set_position, reg0, pos1),
##		(position_set_x, pos1, 500),
##		(position_set_y, pos1, 500),
##		(overlay_set_size, reg0, pos1),	
		 #Faction arms(try_end),
		 
		# (store_faction_of_troop, ":cmdr_faction", "$enlisted_lord"),
		# (try_begin),
			# (eq, ":cmdr_faction","fac_kingdom_1"),
			# (create_mesh_overlay, reg0, "mesh_pic_arms_swadian"),
		# (else_try),
			# (eq, ":cmdr_faction","fac_kingdom_2"),
			# (create_mesh_overlay, reg0, "mesh_pic_arms_vaegir"),
		# (else_try),
			# (eq, ":cmdr_faction","fac_kingdom_3"),
			# (create_mesh_overlay, reg0, "mesh_pic_arms_khergit"),
		# (else_try),
			# (eq, ":cmdr_faction","fac_kingdom_4"),
			# (create_mesh_overlay, reg0, "mesh_pic_arms_nord"),
		# (else_try),
			# (eq, ":cmdr_faction","fac_kingdom_5"),
			# (create_mesh_overlay, reg0, "mesh_pic_arms_rhodok"),
		# (else_try),
			# (eq, ":cmdr_faction","fac_kingdom_6"),
			# (create_mesh_overlay, reg0, "mesh_pic_sarranid_arms"),
		# (try_end),

		(position_set_x, pos1, 180),
		(position_set_y, pos1, 80),
		(overlay_set_position, reg0, pos1),
		(position_set_x, pos1, 600),
		(position_set_y, pos1, 600),
		(overlay_set_size, reg0, pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_bugdet_report_container", s0, tf_scrollable_style_2),
        (position_set_x, pos1, 560),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_bugdet_report_container", pos1),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 300), 
        (overlay_set_area_size, "$g_presentation_obj_bugdet_report_container", pos1),
        (set_container_overlay, "$g_presentation_obj_bugdet_report_container"), #all of this above here puts the list of troops in a scrollable box

        (assign, ":cur_y_adder", 40),  #the amount of space between lines
        (party_get_num_companion_stacks, ":num_of_stacks", "$enlisted_party"),
        (store_mul, ":cur_y", ":num_of_stacks", ":cur_y_adder"),
  
		(try_for_range, ":i", 1, ":num_of_stacks"), #1, to skip the commander
			(party_stack_get_troop_id, ":troop_id", "$enlisted_party", ":i"),
			(party_stack_get_size, ":stack_size", "$enlisted_party", ":i"),
			(party_stack_get_num_wounded, ":stack_wounded", "$enlisted_party", ":i"),
			(val_sub, ":stack_size", ":stack_wounded"),
						
			(str_store_troop_name, s1, ":troop_id"),
			(create_text_overlay, reg0, s1),
			(position_set_x, pos1, 25),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 900),
			(position_set_y, pos1, 900),
			(overlay_set_size, reg0, pos1),
			
			
			(assign, reg0, ":stack_size"),
			(create_text_overlay, reg0, "str_reg0"),
			(position_set_x, pos1, 325),
			(position_set_y, pos1, ":cur_y"),
			(overlay_set_position, reg0, pos1),
			(position_set_x, pos1, 900),
            (position_set_y, pos1, 900),
            (overlay_set_size, reg0, pos1),

			
			(val_sub, ":cur_y", ":cur_y_adder"),
		(try_end), #End Stack/Troop Loop

		(set_container_overlay, -1), #end the box so you can keep putting other things elsewhere
    
		#done button
		(create_game_button_overlay, "$g_presentation_obj_custom_battle_designer_19", "@Done", tf_center_justify),
		(position_set_x, pos1, 500),
		(position_set_y, pos1, 25),
		(overlay_set_position, "$g_presentation_obj_custom_battle_designer_19", pos1),

	]),
	(ti_on_presentation_event_state_change,
	[
		(store_trigger_param_1, ":object"),
		(try_begin),
			(eq, ":object", "$g_presentation_obj_custom_battle_designer_19"),
			(presentation_set_duration, 0),
		(try_end),
	]),
   ]),
#frelancer chief acaba

###gambling item system chief rubik
## CC gambling begin
("gambling", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_mesh_overlay, reg1, "mesh_load_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
       
        (assign, "$g_current_opened_item_details", -1),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_1", "@Done"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (create_text_overlay, reg1, "@This is the gambling screen. Hold down control key while clicking on an item to purchase or sell it.", tf_double_space|tf_scrollable),
        (position_set_x, pos1, 425),
        (position_set_y, pos1, 290),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 900),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 150),
        (position_set_y, pos1, 200),
        (overlay_set_area_size, reg1, pos1),

        # character picture
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_troop_note_mesh", "trp_especial_merchant"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 380),
        (position_set_y, pos1, 520),
        (overlay_set_position, reg0, pos1),
       
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_troop_note_mesh", "trp_player"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 155),
        (overlay_set_position, reg0, pos1),
       
        # money text
        (store_troop_gold, ":troop_gold", "trp_especial_merchant"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 210),
        (position_set_y, pos1, 90),
        (overlay_set_position, reg1, pos1),
       
        (store_troop_gold, ":troop_gold", "trp_player"),
        (call_script, "script_game_get_money_text", ":troop_gold"),
        (create_text_overlay, reg1, "@Money: {s1}", tf_center_justify),
        (position_set_x, pos1, 760),
        (position_set_y, pos1, 90),
        (overlay_set_position, reg1, pos1),

        ## mystic_merchant's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 130),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (assign, ":pos_x", 0),
        (assign, ":pos_y", 1840),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 24),
          (try_for_range, ":unused_width", 0, 4),
            (try_begin),
              (troop_slot_eq, "trp_especial_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
              (create_image_button_overlay, reg1, "mesh_white_plane", "mesh_white_plane"),
              (position_set_x, pos1, 4000),
              (position_set_y, pos1, 4000),
              (overlay_set_size, reg1, pos1),
              (overlay_set_color, reg1, 0xFF0000), # red background
            (else_try),
              (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
              (position_set_x, pos1, 640),
              (position_set_y, pos1, 640),
              (overlay_set_size, reg1, pos1),
            (try_end),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_get_inventory_slot, ":item_no", "trp_especial_merchant", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),

        ## player's inventory
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 130),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (assign, ":pos_x", 0),
        (store_sub, ":no_inventory_space", ":capacity", 10),
        (store_div, ":rows", ":no_inventory_space", 4),
        (store_mod, ":rows_mod", ":no_inventory_space", 4),
        (val_min, ":rows_mod", 1),
        (val_add, ":rows", ":rows_mod"),
        (store_mul, ":pos_y", ":rows", 80),
        (val_sub, ":pos_y", 80),
        (assign, ":slot_no", 110),
        (try_for_range, ":unused_height", 0, ":rows"),
          (try_for_range, ":unused_width", 0, 4),
            (lt, ":slot_no", ":max_slot_no"),
            (create_image_button_overlay, reg1, "mesh_mp_inventory_slot_empty", "mesh_mp_inventory_slot_empty"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (store_sub, ":player_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        (set_container_overlay, -1),
        ## items

      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (troop_get_inventory_capacity, ":capacity", "trp_player"),
      (store_add, ":max_slot_no", ":capacity", 100),
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_begin),
          (eq, "$g_current_opened_item_details", -1),
          (close_item_details),
        (try_end),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (lt, ":slot_no", 110),
            (troop_get_inventory_slot, ":item_no", "trp_especial_merchant", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":imod", "trp_especial_merchant", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
              (assign, ":buy_price_factor", reg0),
              (try_begin),
                (troop_slot_eq, "trp_especial_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
                (show_item_details, ":item_no", pos0, ":buy_price_factor"),
              (else_try),
                (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":buy_price_factor"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (else_try),
            (store_sub, ":player_slot_no", ":slot_no", 100),
            (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":player_slot_no"),
              (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
              (assign, ":sell_price_factor", reg0),
              (try_begin),
                (gt, ":imod", 0),
                (show_item_details_with_modifier, ":item_no", ":imod", pos0, ":sell_price_factor"),
              (else_try),
                (show_item_details, ":item_no", pos0, ":sell_price_factor"),
              (try_end),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|eq, "$g_current_opened_item_details", ":slot_no"),
            (eq, "$g_current_opened_item_details", -1),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (presentation_set_duration, 0),
          (mission_enable_talk),
        (try_end),
       
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (store_add, ":max_slot_no", ":capacity", 100),
        (try_for_range, ":slot_no", 10, ":max_slot_no"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (this_or_next|key_is_down, key_left_control),
            (key_is_down, key_right_control),
            (try_begin),
              (lt, ":slot_no", 110),
              (troop_get_inventory_slot, ":item_no", "trp_especial_merchant", ":slot_no"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_especial_merchant", ":slot_no"),
              (try_begin),
                (gt, ":item_no", -1),
                (call_script, "script_game_get_item_buy_price_factor", ":item_no"),
                (assign, ":buy_price_factor", reg0),
                (try_begin),
                  (troop_slot_eq, "trp_especial_merchant", ":slot_no", 1), # 0 = not_hidden , 1 = hidden
                  (call_script, "script_get_item_value_with_imod", ":item_no", 0),
                  (assign, ":cost", reg0),
                (else_try),
                  (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
                  (assign, ":cost", reg0),
                (try_end),
                (val_div, ":cost", 100),
                (val_mul, ":cost", ":buy_price_factor"),
                (val_div, ":cost", 100),
                (val_max, ":cost",1),
                (store_troop_gold, ":troop_gold", "trp_player"),
                (try_begin),
                  (lt, ":troop_gold", ":cost"),
                  (display_message, "@You don't have enough money."),
                (else_try),
                  (store_free_inventory_capacity, ":inv_cap", "trp_player"),
                  (le, ":inv_cap", 0),
                (else_try),
                  (troop_remove_gold, "trp_player", ":cost"),
                  (troop_add_gold, "trp_especial_merchant", ":cost"),
                  (troop_set_inventory_slot, "trp_especial_merchant", ":slot_no", -1),
                  (set_show_messages, 0),
                  (troop_add_item, "trp_player", ":item_no", ":imod"),
                  (set_show_messages, 1),
                  (troop_set_slot, "trp_especial_merchant", ":slot_no", 0), # 0 = not_hidden , 1 = hidden
                  (start_presentation, "prsnt_gambling"),
                (try_end),
              (try_end),
            (else_try),
              (store_sub, ":player_slot_no", ":slot_no", 100),
              (troop_get_inventory_slot, ":item_no", "trp_player", ":player_slot_no"),
              (troop_get_inventory_slot_modifier, ":imod", "trp_player", ":player_slot_no"),
              (try_begin),
                (gt, ":item_no", -1),
                (call_script, "script_game_get_item_sell_price_factor", ":item_no"),
                (assign, ":sell_price_factor", reg0),
                (call_script, "script_get_item_value_with_imod", ":item_no", ":imod"),
                (assign, ":cost", reg0),
                (val_div, ":cost", 100),
                (val_mul, ":cost", ":sell_price_factor"),
                (val_div, ":cost", 100),
                (val_max, ":cost",1),
                (store_troop_gold, ":troop_gold", "trp_especial_merchant"),
                (try_begin),
                  (item_get_type, ":item_type", ":item_no"),
                  (eq, ":item_type", itp_type_goods),
                (else_try),
                  (store_free_inventory_capacity, ":inv_cap", "trp_especial_merchant"),
                  (le, ":inv_cap", 0),
                (else_try),
                  (lt, ":troop_gold", ":cost"),
                  (display_message, "@He don't have enough money."),
                (else_try),
                  (troop_remove_gold, "trp_especial_merchant", ":cost"),
                  (troop_add_gold, "trp_player", ":cost"),
                  (troop_set_inventory_slot, "trp_player", ":player_slot_no", -1),
                  (troop_add_item, "trp_especial_merchant", ":item_no", ":imod"),
                  (start_presentation, "prsnt_gambling"),
                (try_end),
              (try_end),
            (try_end),
          (try_end),
        (try_end),
    ]),
  ]),
## CC gambling end chief acaba

  # Tempered   chief  ##########################  Pre battle forces ################################                                                                                                                                                                                             ############ skirmisher slider##################

   ("force_composition",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
	    (set_fixed_point_multiplier, 1000),
		(assign, ":pos_y",630),
		(position_set_x, pos2, 50),
		(position_set_x, pos3,900),
		(position_set_y, pos3,900),
		(assign, ":join_distance", 5),
		(try_begin),
			(is_currently_night),
			(assign, ":join_distance", 2),
		(try_end),
		(try_for_parties,":party_no"),
			(neq,":party_no","p_main_party"),
			(neq,":party_no","pt_entrench"),
			(store_distance_to_party_from_party, ":distance", ":party_no", "p_main_party"),
			(lt,":distance",":join_distance"),
			(party_get_slot, ":party_type",":party_no",slot_party_type),
			(party_get_template_id,":party_template_id",":party_no"),
			(get_party_ai_behavior, ":ai_bhvr", ":party_no"),
			(party_get_battle_opponent, ":opponent",":party_no"),
			(try_begin),
				(this_or_next|eq, ":opponent", "$g_encountered_party"),
				(eq, ":opponent", "p_main_party"),
				(assign,":opponent",-1),
			(try_end),
			(lt,":opponent",0),
			(assign,":continue",0),
			(party_get_attached_to, ":attached_to",":party_no"),
			(try_begin),
				(lt,":attached_to",0),
				(assign,":continue",1),
			(else_try),
				(ge, ":attached_to", 0),
				(this_or_next|eq, ":attached_to", "$g_encountered_party"),
				(eq, ":attached_to", "p_main_party"),
				(assign,":continue",1),
			(try_end),
			(eq, ":continue",1),
			(neg|is_between,":party_no",spawn_points_begin, spawn_points_end),
			(neq,":party_no","pt_entrench"),
			(neq, ":party_type", spt_town),
			(neq, ":party_type", spt_castle),
			(neq, ":party_type", spt_kingdom_caravan),
			(neq, ":party_type", spt_messenger),
			(neq,":party_template_id","pt_spy_party"), 
			(neq,":party_template_id","pt_skirmish_party"),
			(neq,":party_template_id","pt_funeral_pyre"),
			(assign,reg10,":party_no"),
			(store_current_hours,":cur_hour"),
			(party_get_num_companions,reg1,":party_no"),
			(str_store_party_name, s1, ":party_no"),
			(store_faction_of_party, ":faction_no", ":party_no"),
			(store_faction_of_party, ":enemy_faction", "$g_encountered_party"),
			(party_get_slot,":hire_time_end",":party_no",slot_party_hired),			
			(try_begin),
				(eq, ":faction_no", "fac_player_supporters_faction"),
				(assign, ":reln_with_player", 100),
			(else_try),
				(store_relation, ":reln_with_player", ":faction_no", "fac_player_supporters_faction"),
			(try_end),
			(try_begin),
				(eq, ":faction_no", ":enemy_faction"),
				(lt,":hire_time_end",":cur_hour"),
				(assign, ":reln_with_enemy", 100),
			(else_try),
				(store_relation, ":reln_with_enemy", ":faction_no", ":enemy_faction"),
			(try_end),
			(try_begin),
				(eq,":party_no","$g_encountered_party"),
				(str_store_string,s5,"@ We believe the enemy has {reg1} troops ready for battle."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),				
			(else_try),#hired, should aid in battle
				(gt,":hire_time_end",":cur_hour"),
				(lt,":reln_with_enemy",1),
				(neq, ":ai_bhvr",8),
				(neq,":party_no","$g_encountered_party"),
				(str_store_string,s5,"@We've paid a bit of gold to assure that {s1} aids us. Their party is {reg1} troops strong."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(else_try),#hired but friendly to enemy
				(gt,":hire_time_end",":cur_hour"),
				(gt,":reln_with_enemy",0),
				(neq, ":ai_bhvr",8),
				(neq,":party_no","$g_encountered_party"),
				(str_store_string,s5,"@We've paid a bit of gold to assure that {s1} aids us, but we must be watchful for possible betrayal. Their party is {reg1} troops strong."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(else_try),#not hired, friendly to enemy
				(neq,":party_no","$g_encountered_party"),
				(eq,":attached_to","$g_encountered_party"),
				(str_store_string,s5,"@{s1} will most assuredly aid the enemy, bringing {reg1} troops to battle."),#not hired, will join enemy
				(create_text_overlay,reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),				
			(else_try),#not hired, friendly to enemy
				(lt, ":reln_with_player", 0),
				(gt, ":reln_with_enemy", 0),
				(lt,":hire_time_end",":cur_hour"),
				(neq, ":ai_bhvr", 5),
				(neq, ":ai_bhvr",8),
				(neq,":party_no","$g_encountered_party"),
				(str_store_string,s5,"@{s1} will most assuredly aid the enemy, bringing {reg1} troops to battle."),#not hired, will join enemy
				(create_text_overlay,reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(else_try),#not hired, avoiding battle
				(eq, ":ai_bhvr", 5),
				(neq, ":ai_bhvr",8),
				(neq,":party_no","$g_encountered_party"),
				(lt,":hire_time_end",":cur_hour"),
				(str_store_string,s5,"@We believe {s1} will withdraw from the coming battle. All {reg1} of them faint at the sight of blood."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(else_try),#player is marshal, kingdom hero obligated to join battle
				(eq, ":faction_no", "$players_kingdom"), 
				(faction_slot_eq, "$players_kingdom", slot_faction_marshall, "trp_player"),
				(str_store_string,s5,"@{s1} is obligated to join us, bringing his {reg1} troops to battle."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(else_try),#friendly to player, neutral or hostile to enemy
				(eq,":attached_to","p_main_party"),
				(str_store_string,s5,"@{s1} will join us, bringing {reg1} troops to battle."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),				
			(else_try),#neutral to player
				(le,":reln_with_player",4),
				(neq, ":ai_bhvr",8),
				(str_store_string,s5,"@{s1} feels no obligation to aid us. We have not done them many favors in the past."),
				(create_text_overlay, reg10, s5),
				(val_sub,":pos_y",40),
				(position_set_y, pos2, ":pos_y"),
				(overlay_set_position,reg10,pos2),
				(overlay_set_size, reg10, pos3),
			(try_end),
		(try_end),			
#TITLE
		(create_text_overlay, "$g_presentation_obj_6","@_Report_^ Disposition of nearby parties in a position to join in battle.",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_6", pos1),	
#CANCEL BUTTON
		(create_game_button_overlay,"$g_presentation_obj_7","@__Continue__",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
				
        ]),
		
		
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
			(eq, ":object", "$g_presentation_obj_7"),
			(presentation_set_duration,0),
        (try_end),
        ]),
      ]),
	  

	  
# Tempered    chief     ##########################  COMPOSE MESSAGE HERO ################################
#s1,s9,reg12,s2,                                                                                                                                                                                             ############ skirmisher slider##################

   ("compose_message_hero",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
		(set_fixed_point_multiplier, 1000),
		(assign,"$message_bits",0),
		(assign,":party_no","$message_target"),	    
##		(store_current_hours,":cur_hour"),
##		(party_get_slot,":hire_time_end",":party_no",slot_party_hired),
		(store_faction_of_party, ":party_faction", ":party_no"),
		#(store_relation, ":reln_with_player_fac", ":party_faction", "fac_player_supporters_faction"),
		(call_script,"script_nearby_parties","p_main_party",8),
		(party_stack_get_troop_id, ":leader", ":party_no", 0),
		(str_store_troop_name,s1,":leader"),			
		(str_store_faction_name,s2,":party_faction"),
		(str_store_string,s9,"@ of the {s2}."),			
#BACKGROUND PIC BEGIN  OBJ 5		
		(create_mesh_overlay,"$g_presentation_obj_30","mesh_pic_messenger1"),
		(position_set_x, pos1,400),
		(position_set_y, pos1,0),
		(position_set_x, pos2,600),
		(position_set_y, pos2,600),		
		(overlay_set_position,"$g_presentation_obj_30",pos1),
		(overlay_set_size, "$g_presentation_obj_30", pos2),
		
		(assign,":pos",600),
#CHOICE 1 INSULT
		(create_check_box_overlay, "$g_presentation_obj_1","mesh_checkbox_off", "mesh_checkbox_on"),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, ":pos"),
		(overlay_set_position, "$g_presentation_obj_1", pos1),
		(create_text_overlay, "$g_presentation_obj_1_text","@_Insult {s1}."), 
		(position_set_x, pos2, 100),
		(position_set_y, pos2, ":pos"),
		(overlay_set_position, "$g_presentation_obj_1_text", pos2),
		(overlay_set_val, "$g_presentation_obj_1", 0),
		(val_sub,":pos",20),
###CHOICE 2 BRIBE TO ATTACK PARTY
##		(create_check_box_overlay, "$g_presentation_obj_2","mesh_checkbox_off", "mesh_checkbox_on"),
##		(position_set_x, pos1, 50),
##		(position_set_y, pos1, ":pos"),
##		(overlay_set_position, "$g_presentation_obj_2", pos1),
##		(create_text_overlay, "$g_presentation_obj_2_text","@_Pay {s1} to attack someone."), 
##		(position_set_x, pos2, 100),
##		(position_set_y, pos2, ":pos"),
##		(overlay_set_position, "$g_presentation_obj_2_text", pos2),
##		(overlay_set_val, "$g_presentation_obj_2", 0),
##		(val_sub,":pos",20),
#CHOICE 3 BUY SUPPLIES
		(create_check_box_overlay, "$g_presentation_obj_3","mesh_checkbox_off", "mesh_checkbox_on"),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, ":pos"),
		(overlay_set_position, "$g_presentation_obj_3", pos1),
		(create_text_overlay, "$g_presentation_obj_3_text","@_Buy food supplies from {s1}."), 
		(position_set_x, pos2, 100),
		(position_set_y, pos2, ":pos"),
		(overlay_set_position, "$g_presentation_obj_3_text", pos2),
		(overlay_set_val, "$g_presentation_obj_3", 0),
		(val_sub,":pos",20),
#CHOICE 4 CHALLENGE TO DUEL
		(create_check_box_overlay, "$g_presentation_obj_4","mesh_checkbox_off", "mesh_checkbox_on"),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, ":pos"),
		(overlay_set_position, "$g_presentation_obj_4", pos1),
		(create_text_overlay, "$g_presentation_obj_4_text","@_Challenge {s1} to a duel."), 
		(position_set_x, pos2, 100),
		(position_set_y, pos2, ":pos"),
		(overlay_set_position, "$g_presentation_obj_4_text", pos2),
		(overlay_set_val, "$g_presentation_obj_4", 0),
		(val_sub,":pos",20),
#CHOICE 5 GIFT OF WINE
		(create_check_box_overlay, "$g_presentation_obj_5","mesh_checkbox_off", "mesh_checkbox_on"),
		(position_set_x, pos1, -50),
		(position_set_y, pos1, ":pos"),
		(overlay_set_position, "$g_presentation_obj_5", pos1),
		(overlay_set_val, "$g_presentation_obj_5", 0),
		(try_begin),
			(player_has_item,"itm_wine"),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, ":pos"),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
			(create_text_overlay, "$g_presentation_obj_5_text","@_Send an amphorae of wine to {s1}, as a gift."), 
			(position_set_x, pos2, 100),
			(position_set_y, pos2, ":pos"),
			(overlay_set_position, "$g_presentation_obj_5_text", pos2),
			(val_sub,":pos",20),
		(try_end),
#CHOICE 6 GIFT OF POISONED WINE
		(create_check_box_overlay, "$g_presentation_obj_6","mesh_checkbox_off", "mesh_checkbox_on"),
		(position_set_x, pos1, -50),
		(position_set_y, pos1, ":pos"),
		(overlay_set_position, "$g_presentation_obj_6", pos1),
		(overlay_set_val, "$g_presentation_obj_6", 0),
		(try_begin),
			(player_has_item,"itm_wine"),
			(create_check_box_overlay, "$g_presentation_obj_6","mesh_checkbox_off", "mesh_checkbox_on"),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, ":pos"),
			(overlay_set_position, "$g_presentation_obj_6", pos1),
			(create_text_overlay, "$g_presentation_obj_6_text","@_Send a poisoned amphorae of wine to {s1}, as a gift."), 
			(position_set_x, pos2, 100),
			(position_set_y, pos2, ":pos"),
			(overlay_set_position, "$g_presentation_obj_6_text", pos2),			
			(val_sub,":pos",20),
		(try_end),
###CHOICE 7 hire to follow for 24 hours
##		(create_check_box_overlay, "$g_presentation_obj_7","mesh_checkbox_off", "mesh_checkbox_on"),
##		(position_set_x, pos1, -50),
##		(position_set_y, pos1, ":pos"),
##		(overlay_set_position, "$g_presentation_obj_7", pos1),
##		(overlay_set_val, "$g_presentation_obj_7", 0),
##		(try_begin),
##			(party_slot_eq,":party_no",slot_party_nearby,1),
##			(lt,":hire_time_end",":cur_hour"),
##			(neq,"$fac_relations",6),
##			(neq,"$fac_relations",5),
##			(neq,"$fac_relations",1),
##			(create_check_box_overlay, "$g_presentation_obj_7","mesh_checkbox_off", "mesh_checkbox_on"),
##			(position_set_x, pos1, 50),
##			(position_set_y, pos1, ":pos"),
##			(overlay_set_position, "$g_presentation_obj_7", pos1),
##			(create_text_overlay, "$g_presentation_obj_7_text","@_Hire {s1} to follow you for 24 hours."), 
##			(position_set_x, pos2, 100),
##			(position_set_y, pos2, ":pos"),
##			(overlay_set_position, "$g_presentation_obj_7_text", pos2),			
##			(val_sub,":pos",20),
##		(try_end),		

#CHOICE 8 ASK FOR ALLIANCE

#CHOICE  9 ASK FOR PEACE

#CHOICE 10 RANSOM LORD PRISONER

#CHOICE 11 ASK FOR PRISONER RELEASE

#CHOICE 12 ORDER FOLLOW ME

#CHOICE 13 ORDER TO ATTACK PARTY

#CHOICE 14 ORDER TO ATTACK CENTER

#AWARD CENTER TO LORD

#STRIP LORD OF CENTER

#ORDER GARRISON TOWN

#CHOICE  ORDER PATROL AROUND CENTER

#ORDER GUARD BRIDGE
		
#ASK TO JOIN PLAYER FACTION
		
#TITLE s1 s9
		(create_text_overlay, "$g_presentation_obj_31","@ Compose a message to {s1}{s9}"),
        (position_set_x, pos1, 100),
        (position_set_y, pos1, 650),
        (overlay_set_position, "$g_presentation_obj_31", pos1),
#VIEW MESSAGE
		(create_game_button_overlay, "$g_presentation_obj_32","@View Current Message"),
		(position_set_x, pos1, 500),
		(position_set_y, pos1, 80),
		(overlay_set_position, "$g_presentation_obj_32", pos1),		
#Cancel Message
		(create_game_button_overlay,"$g_presentation_obj_33","@_Cancel Message__",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 30),
        (overlay_set_position, "$g_presentation_obj_33", pos1),
		
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
		(store_trigger_param_2, ":value"),
		(try_begin),
			(eq, ":object", "$g_presentation_obj_33"),
			(assign,"$message_target",-1),
			(assign,"$message_bits",0),
			(str_clear,s1),
			(str_clear,s2),
			(str_clear,s9),
			(presentation_set_duration,0),
		(else_try),
			(eq, ":object", "$g_presentation_obj_32"),
			(presentation_set_duration,0),
			(call_script,"script_build_message_hero"),
		(else_try),
			(eq,":object","$g_presentation_obj_1"),#INSULT			
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",1), #TURNS ON BIT 01 AND LEAVES REST ALONE
				(val_and,"$message_bits",1), #LEAVES CHOICE 1 ALONE
				(overlay_set_val, "$g_presentation_obj_2", 0),
				(overlay_set_val, "$g_presentation_obj_3", 0),
				(overlay_set_val, "$g_presentation_obj_4", 0),
				(overlay_set_val, "$g_presentation_obj_5", 0),
				(overlay_set_val, "$g_presentation_obj_6", 0),
				(overlay_set_val, "$g_presentation_obj_7", 0),
				#(overlay_set_val, "$g_presentation_obj_8", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",254), #NEEDS TO BE AND ALL BITS BUT 1  SUCH AS 11111110
			(try_end),   
		(else_try),
			(eq,":object","$g_presentation_obj_2"),#BRIBE TO ATTACK
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",2),
				(val_and,"$message_bits",182), #LEAVES CHOICES 2,3,5,6,8
				(overlay_set_val, "$g_presentation_obj_1", 0),				
				(overlay_set_val, "$g_presentation_obj_4", 0),
				(overlay_set_val, "$g_presentation_obj_7", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",253),				
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_3"),#BUY SUPPLIES
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",4),
				(val_and,"$message_bits",254), #LEAVES CHOICES 2,3,4,5,6,7,8
				(overlay_set_val, "$g_presentation_obj_1", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",251),					
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_4"),#CHALLENGE TO DUEL
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",8),
				(val_and,"$message_bits",188),#LEAVES CHOICES 3,4,5,6,8
				(overlay_set_val, "$g_presentation_obj_1", 0),
				(overlay_set_val, "$g_presentation_obj_2", 0),
				(overlay_set_val, "$g_presentation_obj_7", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",247),					
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_5"),#GIFT OF WINE
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",16),
				(val_and,"$message_bits",190),#LEAVES CHOICES 2,3,4,5,7,8
				(overlay_set_val, "$g_presentation_obj_1", 0),
				(overlay_set_val, "$g_presentation_obj_6", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",239),
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_6"),#GIFT OF POISON WINE
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",32),
				(val_and,"$message_bits",238),#LEAVES CHOICES 2,3,4,6,7,8
				(overlay_set_val, "$g_presentation_obj_1", 0),
				(overlay_set_val, "$g_presentation_obj_5", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",223),
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_7"),#HIRE TO FOLLOW
			(try_begin),
				(eq,":value",1),
				(val_or,"$message_bits",64),
				(val_and,"$message_bits",244),#LEAVES CHOICES 3,5,6,7,8
				(overlay_set_val, "$g_presentation_obj_1", 0),
				(overlay_set_val, "$g_presentation_obj_2", 0),
				(overlay_set_val, "$g_presentation_obj_4", 0),
			(else_try),
				(eq,":value",0),
				(val_and,"$message_bits",191),
			(try_end),
		#(else_try),
			#(eq,":object","$g_presentation_obj_8"),#ASK FOR ALLIANCE
			#(display_message,"@choice 8 alliance"),
			#(try_begin),
				#(eq,":value",1),
				#(val_or,"$message_bits",128),
				#(val_and,"$message_bits",1),
				#(overlay_set_val, "$g_presentation_obj_1", 0),
			#(else_try),
				#(eq,":value",0),
				#(val_and,"$message_bits",128),
			#(try_end),			
		(try_end),
        ]),
      ]),
	  
# Tempered       chief  ##########################  VIEW MESSAGE ################################
# reg5, s3,s8,                                                                                                                                                                                             ############ skirmisher slider##################

   ("view_message",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
	    (set_fixed_point_multiplier, 1000),
#Salutation
		(create_text_overlay, "$g_presentation_obj_1","@{s3}"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
#Message body
		(create_text_overlay, "$g_presentation_obj_2","@{s8}",tf_left_align,tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
#SEND MESSAGE
		(create_game_button_overlay,"$g_presentation_obj_3","@_Send Message_",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_3", pos1),

#CANCEL BUTTON
		(create_game_button_overlay,"$g_presentation_obj_4","@_Cancel Message_",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
		
		
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
			(eq, ":object", "$g_presentation_obj_4"),
			(str_clear,s1),
			(str_clear,s2),
			(str_clear,s3),
			(str_clear,s4),
			(str_clear,s5),
			(str_clear,s8),
			(str_clear,s9),
			(assign,"$message_bits",0),
			(assign,"$message_party_target",-1),
			(assign,"$message_target",-1),
			(presentation_set_duration,0),
		(else_try),
			(eq, ":object", "$g_presentation_obj_3"),
			(assign,":party_no","$message_target"),
			(set_spawn_radius,0),
			(spawn_around_party,"p_main_party","pt_personal_messenger"),
			(assign,":messenger_party_id",reg(0)),
			(party_set_faction,":messenger_party_id","fac_neutral"),
			(party_remove_members,"p_main_party","trp_mercenary_skirmisher",1),
			(party_set_ai_behavior, ":messenger_party_id", 1),
			(party_set_ai_object,":messenger_party_id",":party_no"),
			(party_set_slot,":messenger_party_id",slot_party_type,spt_messenger),
			(party_set_slot,":messenger_party_id",slot_party_hired,-1),
			(party_set_slot,":messenger_party_id",slot_message_target,":party_no"),
			(party_set_slot,":messenger_party_id",slot_message_content,"$message_bits"),
			(party_set_slot,":messenger_party_id",slot_message_target_2,-1),
			(assign,":check_bit",0),
			(assign,":bit",1),
			(try_for_range,":unused",1,10),
				(store_and,":check_bit",":bit","$message_bits"),
				(try_begin),
					(eq,":bit",1),#choice 1 insult
					(gt,":check_bit",0),
					(call_script,"script_nearby_village_neutral",":party_no"),
					(assign,":duel_location","$message_party_target"),
					(party_set_slot,":messenger_party_id",slot_message_target_2,":duel_location"),
					(party_set_slot,":party_no",slot_message_target_2,":duel_location"),
				(else_try),
					(eq,":bit",2),#choice 2 bribe to attack
					(gt,":check_bit",0),
					(party_set_slot,":messenger_party_id",slot_message_target_2,"$message_party_target"),
				(else_try),
					(eq,":bit",8),#choice 4 challenge to duel
					(gt,":check_bit",0),
					(call_script,"script_nearby_village_neutral",":party_no"),
					(assign,":duel_location","$message_party_target"),
					(party_set_slot,":messenger_party_id",slot_message_target_2,":duel_location"),
					(party_set_slot,":party_no",slot_message_target_2,":duel_location"),
				(else_try),
					(eq,":bit",16),#choice 5 gift of wine
					(gt,":check_bit",0),
					(troop_remove_item, "trp_player", "itm_wine"),
				(else_try),
					(eq,":bit",32),#choice 6 gift of poison wine
					(gt,":check_bit",0),
					(troop_remove_item, "trp_player", "itm_wine"),
				(try_end),
				(val_add,":bit",":bit"),
			(try_end),
			(assign,"$message_party_target",-1),
			(assign,"$message_target",-1),
			(presentation_set_duration,0),
        (try_end),
		(str_clear,s1),
		(str_clear,s2),
		(str_clear,s3),
		(str_clear,s4),
		(str_clear,s5),
		(str_clear,s8),
		(str_clear,s9),
        ]),
      ]),

# Tempered chief ##########################  VIEW REPLY ################################
# called from mnu_messenger_return                                                                                                                                                                                             ############ skirmisher slider##################

   ("view_reply",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
	    (set_fixed_point_multiplier, 1000),

#Salutation
		(create_text_overlay, "$g_presentation_obj_1","@{s3}"),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 680),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
#Message body
		(create_text_overlay, "$g_presentation_obj_2","@{s8}",tf_left_align),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

#CANCEL BUTTON
		(create_game_button_overlay,"$g_presentation_obj_4","@_RETURN_",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_4", pos1),		
        ]),
		
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
			(eq, ":object", "$g_presentation_obj_4"),
			(assign,":party_no","$g_encountered_party"),
			(party_get_num_companion_stacks, ":num_stacks",":party_no"),
			(try_for_range, ":stack_no", 0, ":num_stacks"),
				(party_stack_get_troop_id,":stack_troop",":party_no",":stack_no"),
				(try_begin),
					(eq,":stack_troop","trp_mercenary_skirmisher"),
					(party_stack_get_size,":stack_size",":party_no",":stack_no"),
					(party_remove_members,":party_no",":stack_troop",":stack_size"),
					(assign,":number_moved",reg0),
					(party_force_add_members,"p_main_party",":stack_troop",":number_moved"),
					(remove_party,":party_no"),
				(try_end),
			(try_end),
			(str_clear,s1),
			(str_clear,s2),
			(str_clear,s3),
			(str_clear,s4),
			(str_clear,s5),
			(str_clear,s6),
			(str_clear,s8),
			(str_clear,s9),
			(assign,"$reply_shown",0),
			(presentation_set_duration,0),
        (try_end),
        ]),
      ]),	  

#TEMPERED chief LOOT CHOICE PRESENTATION                  CALLED FROM MENU TOTAL VICTORY                                                                                                                                                                                            ############ skirmisher slider##################

   ("loot_choice",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	(presentation_set_duration,99999),
			(set_fixed_point_multiplier, 1000),
			(str_store_string,s16,"@ is not present."),
			(try_begin),
				(gt,"$wagon_attached",0),
				(store_free_inventory_capacity,":wagon_capacity","trp_loot_wagon_storage_1"),
				(assign,reg2,":wagon_capacity"),
				(str_store_string,s16,"@ capacity is {reg2}."),
			(try_end),
			
			(create_text_overlay, "$g_presentation_obj_1","@ As you look over the carnage and debri of your latest victory, you realize there is still one more choice to be made. You decide to...",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 640),
			(overlay_set_position, "$g_presentation_obj_1", pos1),
			
			(create_button_overlay,"$g_presentation_obj_2","@have your troops bury or burn the dead, cure wounds and gather any loot.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 560),
			(overlay_set_position, "$g_presentation_obj_2", pos1),
			#(position_set_x, pos2,1200),
			#(position_set_y, pos2,1200),
			#(overlay_set_size,"$g_presentation_obj_2",pos2),
			
			(create_text_overlay, "$g_presentation_obj_7","@You estimate that it will take 3 hours.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 540),
			(overlay_set_position, "$g_presentation_obj_7", pos1),
			
			(create_button_overlay,"$g_presentation_obj_3","@leave the dead to rot, but loot the corpses.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 500),
			(overlay_set_position, "$g_presentation_obj_3", pos1),
			#(overlay_set_size,"$g_presentation_obj_3",pos2),
			
			(create_text_overlay, "$g_presentation_obj_8","@You estimate that it will take 1 hour.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 480),
			(overlay_set_position, "$g_presentation_obj_8", pos1),
			
			(create_button_overlay,"$g_presentation_obj_4","@bury or burn the dead, cure wounds and leave any remaining loot for scavengers.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 440),
			(overlay_set_position, "$g_presentation_obj_4", pos1),
			#(overlay_set_size,"$g_presentation_obj_4",pos2),
			
			(create_text_overlay, "$g_presentation_obj_9","@You estimate that it will take 2 hours.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 420),
			(overlay_set_position, "$g_presentation_obj_9", pos1),
			
			(create_button_overlay,"$g_presentation_obj_5","@leave this place as it is and continue your journeys.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 380),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
			#(overlay_set_size,"$g_presentation_obj_5",pos2),
			
			(create_text_overlay, "$g_presentation_obj_10","@ Supply wagon{s16}",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 300),
			(overlay_set_position, "$g_presentation_obj_10", pos1),
			
			(create_mesh_overlay,"$g_presentation_obj_6","mesh_pic_defeat1"),
			(position_set_x, pos1,-200),
			(position_set_y, pos1,-50),
			(overlay_set_position,"$g_presentation_obj_6",pos1),
			(position_set_x, pos2,1300),
			(position_set_y, pos2,1300),
			(overlay_set_size,"$g_presentation_obj_6",pos2),
			

		]),
		
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(try_begin),
			(eq,"$g_presentation_obj_2",":object"), #bury and loot
			(assign, "$bury_dead",1),
			(assign,"$loot_dead",1),
			(call_script,"script_change_player_honor",2),
                     (call_script, "script_change_player_party_morale", 15), #chief moral por victoria
                     (display_message, "@ You increase morale by victory in battle."), #chief moral por victoria
			(presentation_set_duration,0),
		(else_try),
			(eq,"$g_presentation_obj_3",":object"), #loot only
			(assign,"$bury_dead",0),
			(assign,"$loot_dead",1),
                     (call_script, "script_change_player_party_morale", 15), #chief moral por victoria
                     (display_message, "@ You increase morale by victory in battle."), #chief moral por victoria
			(call_script,"script_change_player_honor",-2),
			(presentation_set_duration,0),
		(else_try),
            (eq,"$g_presentation_obj_4",":object"), #bury only
                (assign, "$bury_dead",1),
                (assign,"$loot_dead",0),
            (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
                     (call_script, "script_change_player_party_morale", 10), #chief moral por victoria
                     (display_message, "@ You increase morale by victory in battle."), #chief moral por victoria
            (call_script,"script_change_player_honor",2),
                (presentation_set_duration,0),
            (else_try),
                (eq,"$g_presentation_obj_5",":object"), #just leave
                (assign,"$bury_dead",0),
                (assign,"$loot_dead",0),
                (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
                     (call_script, "script_change_player_party_morale", 10), #chief moral por victoria
                     (display_message, "@ You increase morale by victory in battle."), #chief moral por victoria
                  (call_script,"script_change_player_honor",-2),
                (presentation_set_duration,0),
        (try_end),
        ]),
		
	]),
	
#lo usamos para freelancer
     ("loot_choice2",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	(presentation_set_duration,99999),
			(set_fixed_point_multiplier, 1000),
			
			(create_text_overlay, "$g_presentation_obj_1","@ After the bloody battle you decide to:",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 640),
			(overlay_set_position, "$g_presentation_obj_1", pos1),
			
			(create_button_overlay,"$g_presentation_obj_2","@Deal with the priests, women and some companions of the wounded and dead.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 560),
			(overlay_set_position, "$g_presentation_obj_2", pos1),
			#(position_set_x, pos2,1200),
			#(position_set_y, pos2,1200),
			#(overlay_set_size,"$g_presentation_obj_2",pos2),			
		
			(create_button_overlay,"$g_presentation_obj_3","@Join more greedy men and try to gather as much gold as possible.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 500),
			(overlay_set_position, "$g_presentation_obj_3", pos1),
			#(overlay_set_size,"$g_presentation_obj_3",pos2),
						
			(create_button_overlay,"$g_presentation_obj_4","@You're not a thug, just need the wealth provided by your master. You stay with him, faithfully following.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 440),
			(overlay_set_position, "$g_presentation_obj_4", pos1),
			#(overlay_set_size,"$g_presentation_obj_4",pos2),
						
			(create_button_overlay,"$g_presentation_obj_5","@leave this place as it is and continue your journeys.",tf_left_align),
			(position_set_x, pos1, 50),
			(position_set_y, pos1, 380),
			(overlay_set_position, "$g_presentation_obj_5", pos1),
			#(overlay_set_size,"$g_presentation_obj_5",pos2),
						
			(create_mesh_overlay,"$g_presentation_obj_6","mesh_pic_defeat1"),
			(position_set_x, pos1,-200),
			(position_set_y, pos1,-50),
			(overlay_set_position,"$g_presentation_obj_6",pos1),
			(position_set_x, pos2,1300),
			(position_set_y, pos2,1300),
			(overlay_set_size,"$g_presentation_obj_6",pos2),
			

		]),
		
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(try_begin),
			(eq,"$g_presentation_obj_2",":object"), #enterrar
                (assign,"$bury_dead",0),
                (assign,"$loot_dead",0),
                (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
                  (call_script,"script_change_player_honor",2),
                (presentation_set_duration,0),
		(else_try),
			(eq,"$g_presentation_obj_3",":object"), #loot only
                (assign,"$bury_dead",0),
                (assign,"$loot_dead",0),
                (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
  		   (store_random_in_range, ":total_pay", 10, 400), 
               (troop_add_gold, "trp_player", ":total_pay"),
                  (call_script,"script_change_player_honor",-2),
                (presentation_set_duration,0),
		(else_try),
            (eq,"$g_presentation_obj_4",":object"), #con el senor only
                (assign,"$bury_dead",0),
                (assign,"$loot_dead",0),
                (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
	(store_random_in_range, ":rand_no", 1, 10),
		(try_begin),
		(ge, ":rand_no", 8),
                     (display_message, "@ Your lord is not very happy, with a few friends you leave him alone. He does not want sycophants around him."), #chief moral por victoria
		(else_try),
		(ge, ":rand_no", 5),
                     (display_message, "@ Your lord gives you some iron rings, a symbol of your bravery, and some money."), #chief moral por victoria
               (troop_add_gold, "trp_player", 50),
                  (call_script,"script_change_player_honor",1),
		(else_try),
		(ge, ":rand_no", 3),
                     (display_message, "@ Your lord gives you a warrior bracelet as a reward for your courage."), #chief moral por victoria
                  (call_script, "script_change_troop_renown", "trp_player", 5),
		(else_try),
                     (display_message, "@ Your lord pats your back, congratulating you on the victory."), #chief moral por victoria
		(try_end),	

                (presentation_set_duration,0),
            (else_try),
                (eq,"$g_presentation_obj_5",":object"), #just leave
                (assign,"$bury_dead",0),
                (assign,"$loot_dead",0),
                (assign, "$loot_screen_shown", 1),    #MOTO chief rewrite      mnu_total_victory; turn off loot screen
                  (call_script, "script_change_troop_renown", "trp_player", 1),
                (presentation_set_duration,0),
        (try_end),
        ]),
		
	]),


#TEMPERED Assign Wagon Leader                                                                                                                                                                                                           ############ skirmisher slider##################

   ("wagon_leader",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	(presentation_set_duration,99999),
			(set_fixed_point_multiplier, 1000),
			
			(party_get_slot,"$g_presentation_obj_15_val","p_main_party",slot_party_wagon_leader),	
			(str_store_string,s2,"@ No one"),
			(try_begin),
				(is_between,"$g_presentation_obj_15_val",companions_begin,companions_end),
				(main_party_has_troop,"$g_presentation_obj_15_val"),
				(str_store_troop_name,s2,"$g_presentation_obj_15_val"),				
			(else_try),
				(assign,"$g_presentation_obj_15_val","trp_npc1"),
			(try_end),
#hero slider        
			(create_slider_overlay, "$g_presentation_obj_15", "trp_npc1", "trp_npc_enchantress"),               
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 500),
			(overlay_set_position, "$g_presentation_obj_15", pos1),
			(overlay_set_val, "$g_presentation_obj_15",  "$g_presentation_obj_15_val"),
		
			(create_text_overlay, "$g_presentation_obj_16","@ Assign a hero to command your supply wagon.",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 650),
			(overlay_set_position, "$g_presentation_obj_16", pos1),
			(position_set_x, pos2,1200),
			(position_set_y, pos2,1200),
			(overlay_set_size,"$g_presentation_obj_16",pos2),

			(create_text_overlay, "$g_presentation_obj_17","@ {s2} is currently leading the wagon.",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_presentation_obj_17", pos1),
			(position_set_x, pos2,1000),
			(position_set_y, pos2,1000),
			(overlay_set_size,"$g_presentation_obj_17",pos2),
#right hand pic
			(create_mesh_overlay,"$g_presentation_obj_18","mesh_pic_mercenary"),
			(position_set_x, pos1,600),
			(position_set_y, pos1,0),
			(overlay_set_position,"$g_presentation_obj_18",pos1),
			(position_set_x, pos2,900),
			(position_set_y, pos2,900),
			(overlay_set_size,"$g_presentation_obj_18",pos2),


			#CONTINUE BUTTON
			(create_game_button_overlay,"$g_presentation_obj_19","@_RETURN_",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 30),
			(overlay_set_position, "$g_presentation_obj_19", pos1),			

		]),
		
      (ti_on_presentation_event_state_change,
       [	(store_trigger_param_1, ":object"),
			(store_trigger_param_2, ":value"),
			(try_begin),
				(eq,"$g_presentation_obj_19",":object"), 
				(assign,"$next_screen",0),
				(presentation_set_duration,0),
			(else_try),
				(eq,":object","$g_presentation_obj_15"),
				(try_begin),
					(main_party_has_troop,":value"),
					(party_set_slot,"p_main_party",slot_party_wagon_leader,":value"),
					(str_store_troop_name, s2,":value"),
				(else_try),
					(str_store_string, s2, "@ No one"),
					(party_set_slot,"p_main_party",slot_party_wagon_leader,-1),						
				(try_end),
				(overlay_set_text,"$g_presentation_obj_3", "@ {s2} is currently leading the wagon.",tf_center_justify),
			(try_end),
        ]),		
	]),	  
	  
	  
  
# TEMPERED chief  ##########################  CHOOSE TOWN FOR LOOT WAGON ################################
# CALLED FROM PRESENTATION LOOT CHOICE                                                                                                                                                                                             ############ skirmisher slider##################

   ("loot_choose_town",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
	    (set_fixed_point_multiplier, 1000),

        (party_get_slot,":loot_wagon_town","p_main_party",slot_loot_wagon_target),
		(try_begin),
			(is_between,":loot_wagon_town", "p_town_1", "p_castle_1"),
			(assign, "$g_presentation_obj_1_val", ":loot_wagon_town"),
		(else_try),
			(assign, "$g_presentation_obj_1_val", "p_town_1"),
		(try_end),
        
		(create_slider_overlay, "$g_presentation_obj_1", "p_town_1", "p_town_42"),               
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
		(overlay_set_val, "$g_presentation_obj_1", ":loot_wagon_town"),
		
		(str_store_party_name, s1, "$g_presentation_obj_1_val"),
		(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_obj_1_val"),
		(str_store_faction_name,s2,"$g_presentation_center_faction"),
		(store_distance_to_party_from_party,":distance","$g_presentation_obj_1_val","p_main_party"),
		(assign,reg2,":distance"),
		
		(create_text_overlay, "$g_presentation_obj_2", s2,tf_center_justify), #faction text
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
		
		(create_text_overlay, "$g_presentation_obj_3", "@town",tf_center_justify), #TOWN HEADER
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 560),
        (overlay_set_position, "$g_presentation_obj_3", pos1),	

		(create_text_overlay, "$g_presentation_obj_4", "@Kingdom",tf_center_justify), #faction HEADER
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 560),
        (overlay_set_position, "$g_presentation_obj_4", pos1),

		(create_text_overlay, "$g_presentation_obj_8", "@Distance",tf_center_justify), #DISTANCE HEADER
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 560),
        (overlay_set_position, "$g_presentation_obj_8", pos1),	

		(create_text_overlay, "$g_presentation_obj_9", "@_ {reg2} Km",tf_center_justify), #DISTANCE text
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_9", pos1),		
		
		(create_text_overlay, "$g_presentation_obj_5", s1,tf_center_justify), #town name
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
		
		(create_game_button_overlay,"$g_presentation_obj_6", "@_Continue_"),
		(position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
		(overlay_set_position, "$g_presentation_obj_6", pos1),
		
		(create_text_overlay,"$g_presentation_obj_7","@Select a town for the supply wagon to trade with.",tf_center_justify),
		(position_set_x,pos1,500),
		(position_set_y,pos1,650),
		(position_set_x,pos2,1200),
		(position_set_y,pos2,1200),
		(overlay_set_position,"$g_presentation_obj_7",pos1),
		(overlay_set_size,"$g_presentation_obj_7",pos2),
					
        ]),

      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
		(try_begin),
			(eq,":object","$g_presentation_obj_6"),	
			(assign,"$next_screen",0),
			(presentation_set_duration,0),
		(else_try),
			(eq,":object","$g_presentation_obj_1"),
			(try_begin),
				(neq, "$g_presentation_obj_1_val", ":value"),
				(assign, "$g_presentation_obj_1_val", ":value"),
				(str_store_party_name, s1, "$g_presentation_obj_1_val"),
				(store_faction_of_party,"$g_presentation_center_faction","$g_presentation_obj_1_val"),
				(str_store_faction_name,s2,"$g_presentation_center_faction"),
				(store_distance_to_party_from_party,":distance","$g_presentation_obj_1_val","p_main_party"),
				(assign,reg2,":distance"),
				(overlay_set_text,"$g_presentation_obj_5", s1,tf_center_justify),
				(overlay_set_text,"$g_presentation_obj_2", s2,tf_center_justify),
				(overlay_set_text,"$g_presentation_obj_9", "@_ {reg2} Km",tf_center_justify),
				(party_set_slot,"p_main_party",slot_loot_wagon_target,"$g_presentation_obj_1_val"),
			(try_end),			
		(try_end),		
        ]),
      ]),	  

# TEMPERED     chief  ##########################  LOOT WAGON MANAGEMENT  ################################
# CALLED FROM                                                                                                                                                                                              ############ skirmisher slider##################

   ("manage_loot_wagon",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(presentation_set_duration,99999),
	    (set_fixed_point_multiplier, 1000),
		
		(party_get_slot,":loot_wagon_town","p_main_party",slot_loot_wagon_target),
		(party_get_slot,":wagon_leader","p_main_party",slot_party_wagon_leader),
		(str_store_string,s1,"@ None "),
		(str_store_string,s2,"@ None "),
		(try_begin),
			(is_between,":wagon_leader",companions_begin,companions_end),
			(main_party_has_troop,":wagon_leader"),
			(str_store_troop_name,s2,":wagon_leader"),
		(else_try),
			(assign,":wagon_leader",-1),
			(party_set_slot,"p_main_party",slot_party_wagon_leader,-1),
		(try_end),
		(try_begin),
			(is_between,":loot_wagon_town","p_town_2","p_castle_1"),
			(str_store_party_name, s1, ":loot_wagon_town"),
		(try_end),
		(assign,reg2,0),
		(store_free_inventory_capacity,":wagon_capacity","trp_loot_wagon_storage_1"),
		(assign,reg2,":wagon_capacity"),
#CONTINUE BUTTON
		(create_game_button_overlay,"$g_presentation_obj_1","@_RETURN_",tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 30),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
#HEADER
		(create_text_overlay,"$g_presentation_obj_2","@ Supply Wagon Management ",tf_center_justify),
		(position_set_x,pos1,500),
		(position_set_y,pos1,650),
		(position_set_x,pos2,1200),
		(position_set_y,pos2,1200),
		(overlay_set_position,"$g_presentation_obj_2",pos1),
		(overlay_set_size,"$g_presentation_obj_2",pos2),
#Commander
		(create_text_overlay,"$g_presentation_obj_3","@ Current Wagon Master:^{s2} ",tf_left_align),
		(position_set_x,pos1,50),
		(position_set_y,pos1,600),
		(position_set_x,pos2,975),
		(position_set_y,pos2,975),
		(overlay_set_position,"$g_presentation_obj_3",pos1),
		(overlay_set_size,"$g_presentation_obj_3",pos2),		
#Trade town
		(create_text_overlay,"$g_presentation_obj_4","@ Current Trade Town:^ {s1} ",tf_center_justify),
		(position_set_x,pos1,500),
		(position_set_y,pos1,600),
		(overlay_set_position,"$g_presentation_obj_4",pos1),
		(overlay_set_size,"$g_presentation_obj_4",pos2),
#Capacity
		(create_text_overlay,"$g_presentation_obj_5","@ Wagon Space Available:^ {reg2} ",tf_center_justify), #was reg2
		(position_set_x,pos1,800),
		(position_set_y,pos1,600),
		(overlay_set_position,"$g_presentation_obj_5",pos1),
		(overlay_set_size,"$g_presentation_obj_5",pos2),
#Assign leader
		(create_button_overlay,"$g_presentation_obj_6","@ Assign a hero to command the supply wagon."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 500),
		(position_set_x,pos2,1000),
		(position_set_y,pos2,1000),
		(overlay_set_position, "$g_presentation_obj_6", pos1),
		(overlay_set_size,"$g_presentation_obj_6",pos2),		
#Assign troops
		(create_button_overlay,"$g_presentation_obj_7","@ Assign soldiers to guard the supply wagon."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 450),
		(overlay_set_position, "$g_presentation_obj_7", pos1),
		(overlay_set_size,"$g_presentation_obj_7",pos2),		
#Assign town
		(create_button_overlay,"$g_presentation_obj_8","@ Assign a town for the supply wagon to trade with."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 400),
		(overlay_set_position, "$g_presentation_obj_8", pos1),
		(overlay_set_size,"$g_presentation_obj_8",pos2),		
#Inspect inventory
		(create_button_overlay,"$g_presentation_obj_9","@ Inspect the supply wagon's current inventory."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 350),
		(overlay_set_position, "$g_presentation_obj_9", pos1),
		(overlay_set_size,"$g_presentation_obj_9",pos2),		
#Trade run
		(create_button_overlay,"$g_presentation_obj_10","@ Send the supply wagon on a trade run."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 300),
		(overlay_set_position, "$g_presentation_obj_10", pos1),
		(overlay_set_size,"$g_presentation_obj_10",pos2),
#abandon wagon
		(create_button_overlay,"$g_presentation_obj_11","@ Abandon the supply wagon and everything in it in order to travel faster."),
		(position_set_x, pos1, 50),
		(position_set_y, pos1, 250),
		(overlay_set_position, "$g_presentation_obj_11", pos1),
		(overlay_set_size,"$g_presentation_obj_11",pos2),		
						
        ]),

      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
		(party_get_slot,":wagon_leader","p_main_party",slot_party_wagon_leader),
		(try_begin),
			(eq,":object","$g_presentation_obj_1"),
			(assign,"$next_screen",6),
			(call_script,"script_restore_wagon_troops"),
			(presentation_set_duration,0),
		(else_try),#assign leader
			(eq,":object","$g_presentation_obj_6"),
			(assign,"$next_screen",1),
			(presentation_set_duration,0),
		(else_try),#assign troops
			(eq,":object","$g_presentation_obj_7"),
			(assign,"$next_screen",2),
			(presentation_set_duration,0),
		(else_try),#assign trade town
			(eq,":object","$g_presentation_obj_8"),
			(assign,"$next_screen",3),
			(presentation_set_duration,0),
		(else_try),#inventory
			(eq,":object","$g_presentation_obj_9"),
			(assign,"$next_screen",4),
			(presentation_set_duration,0),
		(else_try),#trade run
			(eq,":object","$g_presentation_obj_10"),
			(try_begin),
				(is_between,":wagon_leader",companions_begin,companions_end),
				(main_party_has_troop,":wagon_leader"),
				(assign,"$next_screen",5),
				(assign,"$wagon_attached",-1),
				(call_script,"script_create_player_loot_wagon"),
				(call_script,"script_move_troops_loot_wagon"),
				(presentation_set_duration,0),
			(else_try),
				(le,":wagon_leader",0),
				(assign,"$next_screen",0),
				(display_message,"@    You must assign a leader before the supply wagon can make a trade run!"),
				(presentation_set_duration,0),
			(try_end),
		(else_try),
			(eq,":object","$g_presentation_obj_11"),
			(call_script,"script_restore_wagon_troops"),
			(troop_clear_inventory,"trp_loot_wagon_storage_1"),
			(assign,"$next_screen",6),
			(assign,"$wagon_attached",-1),
			(assign,"$owns_wagon",0),
			(presentation_set_duration,0),
		(try_end),		
        ]),
      ]),
	  

#PRESENTATIONS tempered chief END	 
#arbol de tropas chief
  ("upgrade_tree_1", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_1"),
        
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_swadian_recruit", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_swadian_militia", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_swadian_infantry", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_swadian_man_at_arms", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_swadian_knight", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_swadian_sergeant", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_swadian_footman", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_swadian_crossbowman", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_swadian_skirmisher", 715, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_swadian_sharpshooter", 855, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 10, "trp_campeon", 715, 300),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_recruit", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_militia", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_infantry", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_man_at_arms", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_footman", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_skirmisher", 795, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_swadian_sergeant", 645, 410),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 770, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 390),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
        
#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_ready"),
#        ####### mouse fix pos system #######
      ]),
      
#    (ti_on_presentation_run,
#      [
#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_run"),
#        ####### mouse fix pos system #######
#    ]),
  
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_1"),
        
        (try_for_range, ":slot_no", 0, 11),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_1"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
      ]),
  ]),
  
  ("upgrade_tree_2", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_2"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_vaegir_recruit", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_vaegir_footman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_vaegir_veteran", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_vaegir_guard", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_vaegir_knight", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_vaegir_horseman", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_vaegir_infantry", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_vaegir_archer", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_vaegir_skirmisher", 855, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_vaegir_marksman", 715, 100),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_recruit", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_footman", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_veteran", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_guard", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_infantry", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_vaegir_archer", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
      ]),
  
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_2"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_2"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
      ]),
    ]),
  
  ("upgrade_tree_3", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_3"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_khergit_tribesman", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_khergit_horseman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_khergit_horse_archer", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_khergit_veteran_horse_archer", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_picti_each", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_khergit_lancer", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_picti_bruide", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_picti_airig", 715, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_picti_gaisgidh", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_khergit_skirmisher", 855, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 10, "trp_pict_woman", 115, 500),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_khergit_tribesman", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_khergit_horseman", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_khergit_veteran_horse_archer", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_picti_bruide", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_khergit_horse_archer", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_picti_each", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_3"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_3"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  ("upgrade_tree_4", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_4"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_nord_recruit", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_nord_footman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_nord_trained_footman", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_nord_veteran", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_nord_archer", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_nord_champion", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_nord_warrior", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_nord_veteran_archer", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_engle_hearth", 715, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_nord_huntsman", 855, 300),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_recruit", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_footman", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_trained_footman", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_veteran", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_warrior", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_nord_veteran_archer", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_4"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_4"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  ("upgrade_tree_5", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_5"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_rhodok_tribesman", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_rhodok_spearman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_rhodok_veteran_spearman", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_rhodok_veteran_crossbowman", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_rhodok_sharpshooter", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_gael_deaisbard", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_rhodok_trained_spearman", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_rhodok_trained_crossbowman", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_rhodok_sergeant", 715, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_rhodok_crossbowman", 855, 100),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_tribesman", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_spearman", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_veteran_spearman", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_veteran_crossbowman", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_trained_spearman", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_rhodok_trained_crossbowman", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_5"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_5"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  ("upgrade_tree_6", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_6"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_sarranid_recruit", 115, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_sarranid_footman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_sarranid_veteran_footman", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_sarranid_guard", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_sarranid_mamluke", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_sarranid_horseman", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_sarranid_infantry", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_sarranid_archer", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_sarranid_skirmisher", 855, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_sarranid_master_archer", 715, 100),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_recruit", 195, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_footman", 320, 360),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_veteran_footman", 470, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_guard", 645, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_infantry", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_sarranid_archer", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
        ##### | lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_6"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_6"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
      ]),
    ]),
  
  # Mercenaries
  ("upgrade_tree_7", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_7"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_farmer", 115, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_townsman", 115, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_watchman", 265, 250),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_caravan_guard", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_mercenary_horseman", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_mercenary_cavalry", 715, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_mercenary_swordsman", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_hired_blade", 715, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_mercenary_crossbowman", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_caravan_master", 715, 100),
        
##        ## cost
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_farmer", 170, 210),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_townsman", 170, 510),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_watchman", 320, 360),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_caravan_guard", 470, 510),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_mercenary_horseman", 645, 610),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_mercenary_swordsman", 645, 410),
##        ## cost
##        
##        ##### - lines
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 170, 490),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 170, 190),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 195, 340),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 320, 340),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 490),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 345, 190),
##        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 390),
##        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 590),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 470, 490),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 590),
##        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 495, 390),
##        ##### - lines
##        
##        ##### | lines
##        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 193, 190),
##        (call_script, "script_prsnt_upgrade_tree_lines", 4, 304, 343, 190),
##        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 493, 390),
##        ##### | lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_7"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_7"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  # outlaws
  ("upgrade_tree_8", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_8"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_looter", 265, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_bandit", 415, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_brigand", 565, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_mountain_bandit", 265, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_forest_bandit", 415, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_sea_raider", 565, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_steppe_bandit", 265, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_taiga_bandit", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_black_khergit_horseman", 715, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_desert_bandit", 565, 100),
        
##        ## cost
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_looter", 345, 610),
##        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_bandit", 495, 610),
##        ## cost
##        
##        ##### - lines
##        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 320, 590),
##        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 590),
##        ##### - lines
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_8"),
        
        (try_for_range, ":slot_no", 0, 10),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_8"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  # Others
  ("upgrade_tree_9", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        (call_script, "script_prsnt_upgrade_tree_ready", "fac_kingdom_9"),
        
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 0, "trp_refugee", 115, 300),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 1, "trp_peasant_woman", 115, 500),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 2, "trp_follower_woman", 265, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 3, "trp_hunter_woman", 415, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 4, "trp_fighter_woman", 565, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 5, "trp_sword_sister", 715, 400),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 6, "trp_manhunter", 115, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 7, "trp_slave_driver", 265, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 8, "trp_slave_hunter", 415, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 9, "trp_slave_crusher", 565, 100),
        (call_script, "script_prsnt_upgrade_tree_troop_and_name", 10, "trp_slaver_chief", 715, 100),
        
        ## cost
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_refugee", 170, 410),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_peasant_woman", 170, 610),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_follower_woman", 345, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_hunter_woman", 495, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_fighter_woman", 645, 510),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_manhunter", 195, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_slave_driver", 345, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_slave_crusher", 495, 210),
        (call_script, "script_prsnt_upgrade_tree_troop_cost", "trp_slaver_chief", 645, 210),
        ## cost
        
        ##### - lines
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 170, 590),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 170, 390),
        (call_script, "script_prsnt_upgrade_tree_lines", 25, 4, 195, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 320, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 490),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 170, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 320, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 470, 190),
        (call_script, "script_prsnt_upgrade_tree_lines", 50, 4, 620, 190),
        ##### - lines
        
        ##### | lines
        (call_script, "script_prsnt_upgrade_tree_lines", 4, 204, 193, 390),
        ##### | lines
        
      ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (this_or_next|eq, ":object", "$g_presentation_obj_1"),
        (eq, ":object", "$g_presentation_obj_3"),
        (overlay_set_display, "$g_presentation_obj_3", ":enter_leave"),
      (else_try),
        (this_or_next|eq, ":object", "$g_presentation_obj_2"),
        (eq, ":object", "$g_presentation_obj_4"),
        (overlay_set_display, "$g_presentation_obj_4", ":enter_leave"),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_prsnt_upgrade_tree_switch", ":object", "fac_kingdom_9"),
        
        (try_for_range, ":slot_no", 0, 11),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, "$temp", "trp_temp_array_b", ":slot_no"),
          (assign, "$g_presentation_next_presentation", "prsnt_upgrade_tree_9"),
          (start_presentation, "prsnt_troop_note"),
        (try_end),
    ]),
  ]),
  
  ("troop_note", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
  
        ## init troop items
        (call_script, "script_copy_inventory", "$temp", "trp_temp_array_a"),
        (try_for_range, ":i_slot", 0, 10),
          (troop_get_inventory_slot, ":item", "trp_temp_array_a", ":i_slot"),
          (gt, ":item", -1),
          (troop_add_item,"trp_temp_array_a",":item"),
          (troop_set_inventory_slot, "trp_temp_array_a", ":i_slot", -1),
        (try_end),
  
        ## back
        (create_image_button_overlay, "$g_presentation_obj_1", "mesh_used_button", "mesh_used_button_down"),
        (position_set_x, pos1, 832),
        (position_set_y, pos1, 36),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        ## done
        (create_text_overlay, reg1, "@Done", tf_center_justify|tf_vertical_align_center),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 50),
        (overlay_set_position, reg1, pos1),
        
        ################
        (store_mul, ":cur_troop", "$temp", 2), #with weapons
        (create_mesh_overlay_with_tableau_material, reg0, -1, "tableau_game_party_window", ":cur_troop"),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg0, pos1),
        (position_set_x, pos1, 720),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg0, pos1),
        
        (str_store_troop_name, s1, "$temp"),
        (store_character_level, ":troop_level", "$temp"),
        (assign, reg1, ":troop_level"),
        (str_store_string, s1, "@Name: {s1}^Level: {reg1}"),
        (call_script, "script_get_troop_max_hp", "$temp"),
        (str_store_string, s1, "@{s1}^HP: {reg0}"),
        
        (create_text_overlay, reg0, "@{s1}", tf_double_space),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg0, pos1),
        
        (str_store_string, s3, "@Attributes:"),
        (store_attribute_level, reg1, "$temp", ca_strength),
        (store_attribute_level, reg2, "$temp", ca_intelligence),
        (str_store_string, s3, "@{s3}^STR: {reg1}^INT: {reg2}^^Skills:"),
        (store_skill_level, reg1, skl_power_strike, "$temp"),
        (store_skill_level, reg2, skl_power_draw, "$temp"),
        (store_skill_level, reg3, skl_power_throw, "$temp"),
        (store_skill_level, reg4, skl_horse_archery, "$temp"),
        (str_store_string, s3, "@{s3}^Power Strike: {reg1}^Power Draw: {reg2}^Power Throw: {reg3}^Horse Archery: {reg4}^^Weapon Proficiencies:"),
        (store_proficiency_level, reg1, "$temp", wpt_one_handed_weapon),
        (store_proficiency_level, reg2, "$temp", wpt_two_handed_weapon),
        (store_proficiency_level, reg3, "$temp", wpt_polearm),
        (str_store_string, s3, "@{s3}^1 Hand Wpns: {reg1}^2 Hand Wpns: {reg2}^Polearms: {reg3}"),
        (create_text_overlay, reg0, "@{s3}", tf_double_space),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
        
        (str_store_string, s4, "str_empty_string"),
        (store_attribute_level, reg1, "$temp", ca_agility),
        (store_attribute_level, reg2, "$temp", ca_charisma),
        (str_store_string, s4, "@{s4}^AGI: {reg1}^CHA: {reg2}^^"),
        (store_skill_level, reg1, skl_ironflesh, "$temp"),
        (store_skill_level, reg2, skl_athletics, "$temp"),
        (store_skill_level, reg3, skl_shield, "$temp"),
        (store_skill_level, reg4, skl_riding, "$temp"),
        (str_store_string, s4, "@{s4}^Ironflesh: {reg1}^Athletics: {reg2}^Shield: {reg3}^Riding: {reg4}^^"),
        (store_proficiency_level, reg1, "$temp", wpt_archery),
        (store_proficiency_level, reg2, "$temp", wpt_crossbow),
        (store_proficiency_level, reg3, "$temp", wpt_throwing),
        (str_store_string, s4, "@{s4}^Archery: {reg1}^Crossbows: {reg2}^Throwing: {reg3}"),
        (create_text_overlay, reg0, "@{s4}", tf_double_space),
        (position_set_x, pos1, 710),
        (position_set_y, pos1, 100),
        (overlay_set_position, reg0, pos1),
        ################
        
        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_2", s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, "$g_presentation_obj_2", pos1),
        (set_container_overlay, "$g_presentation_obj_2"),
        
        (assign, ":pos_x", 0),
        (assign, ":pos_y", 1840),
        (assign, ":slot_no", 10),
        (try_for_range, ":unused_height", 0, 24),
          (try_for_range, ":unused_width", 0, 4),
            (create_mesh_overlay, reg1, "mesh_inv_slot"),
            (position_set_x, pos1, 800),
            (position_set_y, pos1, 800),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
            (position_set_x, pos1, 640),
            (position_set_y, pos1, 640),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, ":pos_x"),
            (position_set_y, pos1, ":pos_y"),
            (overlay_set_position, reg1, pos1),
            (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
            (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 800),
              (position_set_y, pos1, 800),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 40),
              (store_add, ":item_y", ":pos_y", 40),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
            (try_end),
            (val_add, ":pos_x", 80),
            (val_add, ":slot_no", 1),
          (try_end),
          (assign, ":pos_x", 0),
          (val_sub, ":pos_y", 80),
        (try_end),
        
        (set_container_overlay, -1),
        
        (create_text_overlay, reg1, "@Equipments: ", tf_vertical_align_center),
        (position_set_x, pos1, 60),
        (position_set_y, pos1, 635),
        (overlay_set_position, reg1, pos1),
        ## items
        
#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_ready"),
#        ####### mouse fix pos system #######
      ]),
      
#    (ti_on_presentation_run,
#      [
#        ####### mouse fix pos system #######
#        (call_script, "script_mouse_fix_pos_run"),
#        ####### mouse fix pos system #######
#    ]),
    
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 10, 106),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
          (try_begin),
            (gt, ":item_no", -1),
            (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
            (overlay_get_position, pos0, ":target_obj"),
            (show_item_details, ":item_no", pos0, 100),
            (assign, "$g_current_opened_item_details", ":slot_no"),
          (try_end),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 10, 106),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (gt, "$g_presentation_next_presentation", -1),
            (start_presentation, "$g_presentation_next_presentation"),
          (else_try),
            (presentation_set_duration, 0),
          (try_end),
        (try_end),
    ]),
  ]),
#arbol chief de tropas acaba ## CC
  ################## JEDEDIAH Q chief COMPANIONS OVERVIEW START ###################################################################
################## JEDEDIAH Q COMPANIONS OVERVIEW START ###################################################################

  ("jq_companions_quickview", 0, mesh_cpov, #mesh_cpov
   [
     (ti_on_presentation_load,
      [
	(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
	(assign, "$jq_just_visited_CO", 0),
	#(assign, "$jq_slot", 0),
	(assign, "$g_jq_Return_to_menu", 1013),#jibberish value, just for button assign
        (assign, "$g_jq_Back_to_shop", 1013),#jibberish value, just for button assign
	
	#Back to menu - graphical button
	(create_game_button_overlay, "$g_jq_Return_to_menu", "@_Return to menu_"),	 
	(position_set_x, pos1, 500),
        (position_set_y, pos1, 23),
        (overlay_set_position, "$g_jq_Return_to_menu", pos1),

	#Back to shop - graphical button
	(create_game_button_overlay, "$g_jq_Back_to_shop", "@_Back to shop_"),	 
	(position_set_x, pos1, 100),
        (position_set_y, pos1, -180),#hide this and show only if any store has been visited in this town
        (overlay_set_position, "$g_jq_Back_to_shop", pos1),

	#show 'Back to shop'-button if any store has been visited in this town
	(try_begin),
 	(eq, "$jq_current_town", "$current_town"),
	(eq, "$jq_in_market_menu", 1),
 	(position_set_x, pos1, 100), 
 	(position_set_y, pos1, 23),
 	(overlay_set_position, "$g_jq_Back_to_shop", pos1),
	(try_end),


	###HEADLINES###
	(assign, ":x_poshl", 165),
 	(assign, ":y_pos", 581),
 	(assign, ":jq_size", 0),
	(position_set_x, ":jq_size", 720),
    	(position_set_y, ":jq_size", 775),

 (create_text_overlay, reg2, "@Strength", tf_center_justify),
    		(overlay_set_size, reg2, ":jq_size"),
 		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Riding", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Pdraw", tf_center_justify),
        (overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Pthrow", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@1-hand", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@2-hand", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Polearm", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Archery", tf_center_justify),
       (overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@ X-bow ", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@Throwing ", tf_center_justify),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@  Others", tf_center_justify),
	(position_set_x, ":jq_size", 640),
       	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@ Mode", tf_center_justify),
	(position_set_x, ":jq_size", 700),
       	(overlay_set_size, reg2, ":jq_size"),
		(val_add, ":x_poshl", 55),
 		(position_set_x, pos1, ":x_poshl"),
          	(overlay_set_position, reg2, pos1),

(create_text_overlay, reg2, "@(to next lvl)", tf_center_justify),
	(position_set_x, ":jq_size", 640),
    	(position_set_y, ":jq_size", 750),
	(overlay_set_size, reg2, ":jq_size"),
 		(val_add, ":x_poshl", 60),
 		(position_set_x, pos1, ":x_poshl"),
        	(overlay_set_position, reg2, pos1),

       	(assign, ":jq_value", 100),
	(assign, "$jq_nr", 0),
    	(assign, ":jq_size", 0),
	(assign, ":x_pos", 25),
        (assign, ":y_pos", 547),
     	(str_clear, s9),	
	(assign, ":jq_col", 0x000000),
	(str_clear, s8),
	
	#Version info
	(create_text_overlay, "$g_jq_version", "@_1.3_", tf_left_align),
	(position_set_x, pos1, 963),
        (position_set_y, pos1, 735),
        (overlay_set_position, "$g_jq_version", pos1),
	(position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
	(overlay_set_size, "$g_jq_version", pos1),
	(overlay_set_color, "$g_jq_version", 0xFFFFFFFF), 

	#Equipment info
        (create_text_overlay, "$g_jq_equipment_status", "@If you can see this, buy a new cpu.", tf_center_justify), #Hero name
	#(create_text_overlay, "$g_jq_equip_hlines", "@-Weapons-                                                                 -Armor-", tf_left_align),
	(create_text_overlay, "$g_jq_equip_hline1", "@_-Weapons-", tf_left_align),
	(create_text_overlay, "$g_jq_equip_hline2", "@_-Armor-", tf_left_align),
	(create_text_overlay, "$g_jq_equipment_item0", "@________________n/a________________", tf_center_justify), #item 0
	(create_text_overlay, "$g_jq_equipment_item1", "@________________n/a________________", tf_center_justify), #item 1
	(create_text_overlay, "$g_jq_equipment_item2", "@________________n/a________________", tf_center_justify), #item 2
	(create_text_overlay, "$g_jq_equipment_item3", "@________________n/a________________", tf_center_justify), #item 3
	(create_text_overlay, "$g_jq_equipment_item4", "@________________n/a________________", tf_center_justify), #head
	(create_text_overlay, "$g_jq_equipment_item5", "@________________n/a________________", tf_center_justify), #body
	(create_text_overlay, "$g_jq_equipment_item6", "@________________n/a________________", tf_center_justify), #feet
	(create_text_overlay, "$g_jq_equipment_item7", "@________________n/a________________", tf_center_justify), #hands
#	(create_text_overlay, "$g_jq_equipment_item8", "@________________n/a________________", tf_center_justify), #horse - not in use for now.

	#Hero name centered at the top
	(position_set_x, pos1, 500),
        (position_set_y, pos1, 630),
        (overlay_set_position, "$g_jq_equipment_status", pos1),
	(position_set_x, pos1, 800),
        (position_set_y, pos1, 850),
	(overlay_set_size, "$g_jq_equipment_status", pos1),
	
	# Weapons and Armor headlines
	(position_set_x, pos1, 210),
	(position_set_y, pos1, 700),
	(overlay_set_position, "$g_jq_equip_hline1", pos1),
	(overlay_set_color, "$g_jq_equip_hline1", 0xFFAAAAFF),
	(position_set_x, pos1, 700),
	(overlay_set_position, "$g_jq_equip_hline2", pos1),
	(overlay_set_color, "$g_jq_equip_hline2", 0xFFAAAAFF),
	(position_set_x, pos1, 1000),
        (position_set_y, pos1, 800),
	(overlay_set_size, "$g_jq_equip_hline1", pos1),
	(overlay_set_size, "$g_jq_equip_hline2", pos1),
	
	# item 0-3
	(position_set_x, pos1, 255),
	(position_set_y, pos1, 681),
	(overlay_set_position, "$g_jq_equipment_item0", pos1),
	(position_set_y, pos1, 664),
	(overlay_set_position, "$g_jq_equipment_item1", pos1),
	(position_set_y, pos1, 647),
	(overlay_set_position, "$g_jq_equipment_item2", pos1),
	(position_set_y, pos1, 630),
	(overlay_set_position, "$g_jq_equipment_item3", pos1),

	#new column head, body, feet, hands
	(position_set_x, pos1, 740),
        (position_set_y, pos1, 681),
        (overlay_set_position, "$g_jq_equipment_item4", pos1),
	(position_set_y, pos1, 664),
	(overlay_set_position, "$g_jq_equipment_item5", pos1),
	(position_set_y, pos1, 647),
	(overlay_set_position, "$g_jq_equipment_item6", pos1),
	(position_set_y, pos1, 630),
	(overlay_set_position, "$g_jq_equipment_item7", pos1),

	(position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
	(overlay_set_size, "$g_jq_equipment_status", pos1),
	(overlay_set_size, "$g_jq_equipment_item0", pos1),
	(overlay_set_color, "$g_jq_equipment_item0", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item1", pos1),
	(overlay_set_color, "$g_jq_equipment_item1", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item2", pos1),
	(overlay_set_color, "$g_jq_equipment_item2", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item3", pos1),
	(overlay_set_color, "$g_jq_equipment_item3", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item4", pos1),
	(overlay_set_color, "$g_jq_equipment_item4", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item5", pos1),
	(overlay_set_color, "$g_jq_equipment_item5", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item6", pos1),
	(overlay_set_color, "$g_jq_equipment_item6", 0xFFFFFFFF),
	(overlay_set_size, "$g_jq_equipment_item7", pos1),
	(overlay_set_color, "$g_jq_equipment_item7", 0xFFFFFFFF), 

### Loop begins here. Printing out hero names and stats. ####################################

 (try_for_range, "$jq_dude", companions_begin, companions_end),

   	(main_party_has_troop, "$jq_dude"),
    	(troop_set_slot, "trp_temp_array_c", "$jq_nr", "$jq_dude"),
	(val_add, "$jq_nr", 1),

	#Do the morale-script call at the beginning, instead of every single mouseover
	(call_script, "script_npc_morale", "$jq_dude"),
	(assign, ":troop_morale", reg0),
      	(assign, reg1, ":troop_morale"),
	(troop_set_slot, "trp_temp_array_c", ":jq_value", reg1),
	(val_add, ":jq_value", 1),

   	(str_store_troop_name, s9, "$jq_dude"),
 	(str_store_string, s1, "@{s9}"),
	(create_text_overlay, reg1, s1, tf_left_align),
        (position_set_x, pos3, ":x_pos"),
        (position_set_y, pos3, ":y_pos"),
        (overlay_set_position, reg1, pos3),
	(position_set_x, pos3, 750),
    	(position_set_y, pos3, 850),
    	(overlay_set_size, reg1, pos3),
	

	#Same name, right margin
        (create_text_overlay, reg2, s1, tf_left_align),
        (position_set_x, pos3, 880),
        (position_set_y, pos3, ":y_pos"),
        (overlay_set_position, reg2, pos3),
	(position_set_x, pos3, 750),
    	(position_set_y, pos3, 850),
    	(overlay_set_size, reg2, pos3),

	(assign, ":x_poshl", 165),
	(assign, ":jq_size", 0),	
	(position_set_x, ":jq_size", 750),
    	(position_set_y, ":jq_size", 850), 

#STRENGTH
		(store_attribute_level, reg1, "$jq_dude", ca_strength),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#RIDING
		(store_skill_level, reg1, "skl_riding", "$jq_dude"), 
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#POWERDRAW
		(store_skill_level, reg1, "skl_power_draw", "$jq_dude"), 
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#POWERTHROW
		(store_skill_level, reg1, "skl_power_throw", "$jq_dude"), 
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#ONE-HANDED WEAPS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_one_handed_weapon),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 

#TWO-HANDED WEAPS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_two_handed_weapon),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#POLEARMS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_polearm),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#ARCHERY
		(store_proficiency_level,  reg1, "$jq_dude", wpt_archery),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#CROSSBOW
		(store_proficiency_level,  reg1, "$jq_dude", wpt_crossbow),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),
		(overlay_set_color, ":jqreg", ":jq_col"), 
#THROWING
		(store_proficiency_level,  reg1, "$jq_dude", wpt_throwing),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),  
		(overlay_set_color, ":jqreg", ":jq_col"), 
#FIREARMS
		(store_proficiency_level,  reg1, "$jq_dude", wpt_firearm),
		(val_add, ":x_poshl", 55),
		(create_text_overlay, ":jqreg", "@{reg1}", tf_center_justify),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),  
		(overlay_set_color, ":jqreg", ":jq_col"),                  
#WALKSorRIDES
		(try_begin), 
        	(troop_is_mounted,  "$jq_dude"),
		(str_store_string, s1, "@Rides"),
		(assign, ":jq_col", 0x0000FF),
		(else_try),
		(str_store_string, s1, "@Walks"),
            	(try_end),
		(val_add, ":x_poshl", 41),
		(create_text_overlay, ":jqreg", s1, tf_left_align),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
         	(position_set_y, pos1, ":y_pos"),
         	(overlay_set_position, ":jqreg", pos1),  
		(overlay_set_color, ":jqreg", ":jq_col"),  
		(assign, ":jq_col", 0x000000),     
#POINTS 2 NEXT LVL
		(troop_get_xp, ":jqreg", "$jq_dude"),
		(call_script, "script_jq_xp_to_next_lvl", ":jqreg"),
		(val_add, ":x_poshl", 64),
		(create_text_overlay, ":jqreg", s1, tf_left_align),	
	    	(overlay_set_size, ":jqreg", ":jq_size"),
		(position_set_x, pos1, ":x_poshl"),
          	(position_set_y, pos1, ":y_pos"),
          	(overlay_set_position, ":jqreg", pos1),

          	(assign, ":x_pos", 25),
	  	(assign, ":x_poshl", 165),
   	  	(val_sub, ":y_pos", 23),#linebreak 
	(ge, ":x_pos", 950),
          	(assign, ":x_pos", 25),
          	(val_sub, ":y_pos", 23),
  (try_end),

#try-for-companions-loop ends here #################################### 

#--TROOP SELECTORS--------------------------------------------------------------------------------------------# 

(position_set_x, ":jq_size", 49350),
(position_set_y, ":jq_size", 1000),
(position_set_x, pos1, 0),
(position_set_y, pos1, -200),

#Create buttons (even if the equiv. hero doesn't exist) 
#If I don't do this, the 'Return'-button will take over the memory adress. Yup i suck at this.

(create_image_button_overlay, "$g_jq_selector_1", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_1", pos1), 
(create_image_button_overlay, "$g_jq_selector_2", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_2", pos1), 
(create_image_button_overlay, "$g_jq_selector_3", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_3", pos1), 
(create_image_button_overlay, "$g_jq_selector_4", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_4", pos1), 
(create_image_button_overlay, "$g_jq_selector_5", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_5", pos1),  
(create_image_button_overlay, "$g_jq_selector_6", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_6", pos1), 
(create_image_button_overlay, "$g_jq_selector_7", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_7", pos1),  
(create_image_button_overlay, "$g_jq_selector_8", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_8", pos1), 
(create_image_button_overlay, "$g_jq_selector_9", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_9", pos1), 
(create_image_button_overlay, "$g_jq_selector_10", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_10", pos1), 
(create_image_button_overlay, "$g_jq_selector_11", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_11", pos1), 
(create_image_button_overlay, "$g_jq_selector_12", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_12", pos1), 
(create_image_button_overlay, "$g_jq_selector_13", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_13", pos1), 
(create_image_button_overlay, "$g_jq_selector_14", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_14", pos1), 
(create_image_button_overlay, "$g_jq_selector_15", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_15", pos1),  
(create_image_button_overlay, "$g_jq_selector_16", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_16", pos1), 
(create_image_button_overlay, "$g_jq_selector_17", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_17", pos1),  
(create_image_button_overlay, "$g_jq_selector_18", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_18", pos1), 
(create_image_button_overlay, "$g_jq_selector_19", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_19", pos1), 
(create_image_button_overlay, "$g_jq_selector_20", "mesh_white_plane", "mesh_white_plane"),
(overlay_set_position, "$g_jq_selector_20", pos1),
 

#create buttons end ### create buttons end ### create buttons end ###



(try_begin),
(gt, "$jq_nr", 0),
    (position_set_x, pos1, 5),
    (position_set_y, pos1, 547),
    (overlay_set_position, "$g_jq_selector_1", pos1),
    	(overlay_set_size, "$g_jq_selector_1", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_1", 0),
  	(overlay_set_color, "$g_jq_selector_1", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 1),
    (position_set_y, pos1, 524),
    (overlay_set_position, "$g_jq_selector_2", pos1),
    	(overlay_set_size, "$g_jq_selector_2", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_2", 0),
  	(overlay_set_color, "$g_jq_selector_2", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 2),
    (position_set_y, pos1, 501),
    (overlay_set_position, "$g_jq_selector_3", pos1),
    	(overlay_set_size, "$g_jq_selector_3", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_3", 0),
  	(overlay_set_color, "$g_jq_selector_3", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 3),
    (position_set_y, pos1, 478),
    (overlay_set_position, "$g_jq_selector_4", pos1),
    	(overlay_set_size, "$g_jq_selector_4", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_4", 0),
  	(overlay_set_color, "$g_jq_selector_4", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 4),
    (position_set_y, pos1, 455),
    (overlay_set_position, "$g_jq_selector_5", pos1),
    	(overlay_set_size, "$g_jq_selector_5", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_5", 0),
  	(overlay_set_color, "$g_jq_selector_5", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 5), 
    (position_set_y, pos1, 432),
    (overlay_set_position, "$g_jq_selector_6", pos1),
    	(overlay_set_size, "$g_jq_selector_6", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_6", 0),
  	(overlay_set_color, "$g_jq_selector_6", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 6), 
    (position_set_y, pos1, 409),
    (overlay_set_position, "$g_jq_selector_7", pos1),
    	(overlay_set_size, "$g_jq_selector_7", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_7", 0),
  	(overlay_set_color, "$g_jq_selector_7", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 7), 
    (position_set_y, pos1, 386),
    (overlay_set_position, "$g_jq_selector_8", pos1),
    	(overlay_set_size, "$g_jq_selector_8", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_8", 0),
  	(overlay_set_color, "$g_jq_selector_8", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 8),
    (position_set_y, pos1, 363),
    (overlay_set_position, "$g_jq_selector_9", pos1),
    	(overlay_set_size, "$g_jq_selector_9", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_9", 0),
  	(overlay_set_color, "$g_jq_selector_9", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 9),
    (position_set_y, pos1, 340),
    (overlay_set_position, "$g_jq_selector_10", pos1),
    	(overlay_set_size, "$g_jq_selector_10", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_10", 0),
  	(overlay_set_color, "$g_jq_selector_10", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 10),
    (position_set_y, pos1, 317),
    (overlay_set_position, "$g_jq_selector_11", pos1),
    	(overlay_set_size, "$g_jq_selector_11", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_11", 0),
  	(overlay_set_color, "$g_jq_selector_11", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 11),
    (position_set_y, pos1, 294),
    (overlay_set_position, "$g_jq_selector_12", pos1),
    	(overlay_set_size, "$g_jq_selector_12", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_12", 0),
  	(overlay_set_color, "$g_jq_selector_12", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 12),
    (position_set_y, pos1, 271),
    (overlay_set_position, "$g_jq_selector_13", pos1),
    	(overlay_set_size, "$g_jq_selector_13", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_13", 0),
  	(overlay_set_color, "$g_jq_selector_13", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 13),
    (position_set_y, pos1, 248),
    (overlay_set_position, "$g_jq_selector_14", pos1),
    	(overlay_set_size, "$g_jq_selector_14", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_14", 0),
  	(overlay_set_color, "$g_jq_selector_14", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 14),
    (position_set_y, pos1, 225),
    (overlay_set_position, "$g_jq_selector_15", pos1),
    	(overlay_set_size, "$g_jq_selector_15", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_15", 0),
  	(overlay_set_color, "$g_jq_selector_15", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 15), 
    (position_set_y, pos1, 202),
    (overlay_set_position, "$g_jq_selector_16", pos1),
    	(overlay_set_size, "$g_jq_selector_16", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_16", 0),
  	(overlay_set_color, "$g_jq_selector_16", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 16), 
    (position_set_y, pos1, 179),
    (overlay_set_position, "$g_jq_selector_17", pos1),
    	(overlay_set_size, "$g_jq_selector_17", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_17", 0),
  	(overlay_set_color, "$g_jq_selector_17", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 17), 
    (position_set_y, pos1, 156),
    (overlay_set_position, "$g_jq_selector_18", pos1),
    	(overlay_set_size, "$g_jq_selector_18", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_18", 0),
  	(overlay_set_color, "$g_jq_selector_18", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 18),
    (position_set_y, pos1, 133),
    (overlay_set_position, "$g_jq_selector_19", pos1),
    	(overlay_set_size, "$g_jq_selector_19", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_19", 0),
  	(overlay_set_color, "$g_jq_selector_19", 0xFFFF00),
(try_end),
(try_begin),
(gt, "$jq_nr", 19),
    (position_set_y, pos1, 110),
    (overlay_set_position, "$g_jq_selector_20", pos1),
    	(overlay_set_size, "$g_jq_selector_20", ":jq_size"),
	(overlay_set_alpha, "$g_jq_selector_20", 0),
  	(overlay_set_color, "$g_jq_selector_20", 0xFFFF00),
(try_end),

#TROOP SELECTORS END #-----------------------------------------------------------------------------------------------#
	(position_set_x, ":jq_size", 49350),
	(position_set_y, ":jq_size", 1000),
	(assign, ":y_poshl", 547),
	(create_mesh_overlay, "$g_jq_last_checked_indicator", "mesh_white_plane", "mesh_white_plane"),
	(overlay_set_size, "$g_jq_last_checked_indicator", ":jq_size"),
	(overlay_set_color, "$g_jq_last_checked_indicator", 0xFF6666FF),
    	(overlay_animate_to_alpha, "$g_jq_last_checked_indicator", 0, 0),
	
	#Automatically shows last checked hero's stats. Defaults back to 1st troop in list if this is the 1st visit.

	(assign, "$jq_nr", 0),	
   (try_for_range, "$jq_dude", companions_begin, companions_end),
   	(main_party_has_troop, "$jq_dude"),
	(try_begin),
	(eq, "$jq_last_checked_hero", "$jq_dude"),
	(assign, ":jq_slt", "$jq_nr"),
	(assign, reg2, "$jq_nr"),
	(val_add, reg2, 100),
	(assign, ":y_pos", ":y_poshl"),
	(try_end),
	(val_add, "$jq_nr", 1),
	(val_sub, ":y_poshl", 23), 
   (try_end), 
	(troop_get_slot, "$jq_dude", "trp_temp_array_c", ":jq_slt"),
	(call_script, "script_jq_extra_stats", "$jq_dude", reg2),
	(position_set_x, pos1, 5),
    	(position_set_y, pos1, ":y_pos"),
 	(overlay_set_position, "$g_jq_last_checked_indicator", pos1),
	(overlay_animate_to_alpha, "$g_jq_last_checked_indicator", 50, 0x44), 
   ]),

#Check for buttonpress
     (ti_on_presentation_event_state_change,

      [
        (store_trigger_param_1, "$espresso"),
        (try_begin),
 	    	(eq, "$espresso", "$g_jq_Return_to_menu"), # pressed  (Return to menu)
		(assign, "$jq_just_visited_CO", 0),#do NOT autoreturn to store
		(assign, "$jq_override",0), #use default anim and camera settings in 'module_scripts'
		(presentation_set_duration, 0),
	(else_try),
		(eq, "$espresso", "$g_jq_Back_to_shop"), # pressed 'Back to shop' 
		(assign, "$jq_just_visited_CO", 1), #autoreturn to latest visited store 
		(assign, "$jq_override",0),
  	  	(presentation_set_duration, 0),      			
	(else_try),
		(eq, "$espresso", "$g_jq_selector_1"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 0),
		(assign, "$jq_slot", 0),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_2"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 1),
	 	(assign, "$jq_slot", 1),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_3"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 2),
	 	(assign, "$jq_slot", 2),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_4"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 3),
		(assign, "$jq_slot", 3),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_5"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 4),
	 	(assign, "$jq_slot", 4),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_6"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 5),
	 	(assign, "$jq_slot", 5),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_7"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 6),
	 	(assign, "$jq_slot", 6),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_8"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 7),
	 	(assign, "$jq_slot", 7),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_9"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 8),
	 	(assign, "$jq_slot", 8),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_10"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 9),
	 	(assign, "$jq_slot", 9),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_11"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 10),
		(assign, "$jq_slot", 10),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_12"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 11),
	 	(assign, "$jq_slot", 10),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_13"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 12),
	 	(assign, "$jq_slot", 12),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_14"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 13),
		(assign, "$jq_slot", 13),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_15"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 14),
	 	(assign, "$jq_slot", 14),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_16"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 15),
	 	(assign, "$jq_slot", 15),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_17"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 16),
	 	(assign, "$jq_slot", 16),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_18"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 17),
	 	(assign, "$jq_slot", 17),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_19"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 18),
	 	(assign, "$jq_slot", 18),
	(else_try),
		(eq, "$espresso", "$g_jq_selector_20"),
  		(troop_get_slot, "$jq_dude", "trp_temp_array_c", 19),
		(assign, "$jq_slot", 19),	 	
	(try_end),
 (start_presentation, "prsnt_jq_extended_info"),
	        ]), 
#IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII#
## mouse-over start ##
# Trigger Param 1: id of the object that mouse enters/leaves
# Trigger Param 2: 0 if mouse enters, 1 if mouse leaves

(ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, "$espresso"),
        (store_trigger_param_2, ":jq_enter_leave"),
	(overlay_animate_to_alpha, "$g_jq_last_checked_indicator", 1500, 0),
        (try_begin),
          	    (eq, "$espresso", "$g_jq_selector_1"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_1", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 0),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 100),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_1", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_2"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_2", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 1),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 101),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_2", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_3"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_3", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 2),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 102),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_3", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_4"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_4", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 3),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 103),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_4", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_5"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_5", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 4),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 104),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_5", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_6"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_6", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 5),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 105),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_6", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_7"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_7", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 6),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 106),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_7", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_8"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_8", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 7),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 107),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_8", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_9"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_9", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 8),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 108),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_9", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_10"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_10", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 9),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 109),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_10", 10, 0),
                      	(try_end),
		(else_try),
		   (eq, "$espresso", "$g_jq_selector_11"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_11", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 10),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 110),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_11", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_12"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_12", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 11),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 111),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_12", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_13"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_13", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 12),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 112),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_13", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_14"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_14", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 13),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 113),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_14", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_15"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_15", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 14),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 114),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_15", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_16"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_16", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 15),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 115),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_16", 10, 0),
                      	(try_end),
        	(else_try),
		    (eq, "$espresso", "$g_jq_selector_17"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_17", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 16),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 116),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_17", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_18"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_18", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 17),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 117),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_18", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_19"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_19", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 18),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 118),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_19", 10, 0),
                      	(try_end),
		(else_try),
		    (eq, "$espresso", "$g_jq_selector_20"),
          		(try_begin),
            		(eq, ":jq_enter_leave", 0),
            	         (overlay_animate_to_alpha, "$g_jq_selector_20", 5, 0x44),
			(troop_get_slot, "$jq_dude", "trp_temp_array_c", 19),
	 		(call_script, "script_jq_extra_stats", "$jq_dude", 119),
            	    	(else_try),
		         (overlay_animate_to_alpha, "$g_jq_selector_20", 10, 0),
                      	(try_end),

         (try_end),
        ]),
## mouse-over end ##
#IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII#
 (ti_on_presentation_run,
       [(try_begin),
	  (this_or_next|key_clicked, key_escape),
	  (key_clicked, key_right_mouse_button),
	  (eq, "$jq_in_market_menu", 0),
	  (assign, "$jq_override",0), 
	  (presentation_set_duration, 0),
	  (jump_to_menu, "mnu_reports"),
	(else_try),
		(this_or_next|key_clicked, key_escape),
		(key_clicked, key_right_mouse_button),
	  	(eq, "$jq_in_market_menu", 1),
		(assign, "$jq_override",0),
  	  	(presentation_set_duration, 0),      
	  	(jump_to_menu,"mnu_town_trade"),
	(else_try),
		(key_clicked, key_back_space),
	  	(eq, "$jq_in_market_menu", 1),
 		(eq, "$jq_current_town", "$current_town"),
		(assign, "$jq_just_visited_CO", 1),
		(assign, "$jq_override",0), 
  	  	(presentation_set_duration, 0),      
	  	(jump_to_menu,"mnu_town_trade"),
		(else_try),
		(key_clicked, key_home),
		(assign, "$jq_startpage", 1),	
		(play_sound, "snd_put_back_sword"),
                (display_message,"@Startpage set (Quick View)",0xFFAAFFAA),		
        (try_end),

        ]),


     ]),

###########################################################################################################################
###########################################################################################################################
################## EXTENDED INFO ##########################################################################################

("jq_extended_info", 0, mesh_cpovxt,
   [
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

(try_begin),
	(gt,  "$jq_dude", 0), 
	(assign, "$jq_last_checked_hero", "$jq_dude"),
   (else_try),
	(assign, "$jq_nr", 0),
	(try_for_range, "$jq_dude", companions_begin, companions_end),
   	(main_party_has_troop, "$jq_dude"),
	(troop_set_slot, "trp_temp_array_c", "$jq_nr", "$jq_dude"),
	(val_add, "$jq_nr", 1),
     (try_end),
	(assign, "$jq_last_checked_hero", "$jq_dude"),
  (try_end),

	(assign, "$jq_override", 1),  

     	#Back to menu - graphical button
	(create_game_button_overlay, "$g_jq_Return_to_menu", "@_Return to menu_"),	 
	(position_set_x, pos1, 500),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_jq_Return_to_menu", pos1),

	#Back to shop - graphical button
	(create_game_button_overlay, "$g_jq_Back_to_shop", "@Back to shop"),	 
	(position_set_x, pos1, 100),
        (position_set_y, pos1, -180),#hide this and show only if any store been visited in current town
        (overlay_set_position, "$g_jq_Back_to_shop", pos1),

	#show 'Back to shop'- graphical button (visible if you arrived from or recently visited any of the stores)
	(try_begin),
 	(eq, "$jq_current_town", "$current_town"),
	(eq, "$jq_in_market_menu", 1),
 	(position_set_x, pos1, 100), 
 	(position_set_y, pos1, 20),
 	(overlay_set_position, "$g_jq_Back_to_shop", pos1),
	(try_end),
	
	#Help button
	(assign, "$jq_helptoggle", 0),
	(create_button_overlay, "$g_jqhelp", "@_[?]_", tf_left_align), 
	(position_set_x, pos1, 700),
	(position_set_y, pos1, 28),
        (overlay_set_position,  "$g_jqhelp", pos1),
	(position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
	(overlay_set_size, "$g_jqhelp", pos1),
	(overlay_set_color, "$g_jqhelp", 0xFFFFFFFF),

	(create_text_overlay, "$g_jqhelptxt", "@Hotkeys:^HOME = Set startpage^RMB = Exit to menu^ESCAPE = Quick View^BACKSPACE = Back to shop (if visited)", tf_left_align),
	(position_set_x, pos1, 707),
	(position_set_y, pos1, 80), 
        (overlay_set_position,  "$g_jqhelptxt", pos1),
	(position_set_x, pos1, 750),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_jqhelptxt", pos1),
	(overlay_set_color, "$g_jqhelptxt", 0xFFFFFFFF),
	(overlay_set_alpha, "$g_jqhelptxt" , 0),       

	#Quit2 - debug button
	(create_button_overlay, "$g_quitdebug2", "@- Quit2 -", tf_left_align), 
	(position_set_x, pos1, 330),
       # (position_set_y, pos1, 25),
  	(position_set_y, pos1, -50),
        (overlay_set_position, "$g_quitdebug2", pos1),

	#Previous page - graphical button
	(create_game_button_overlay, "$g_presentation_obj_1", "@_Quick View_"),	 
	(position_set_x, pos1, 900),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

	#prevTroop - graphical button
	(assign, "$g_jq_prevtroop", 1),
	(create_game_button_overlay, "$g_jq_prevtroop", "@ ____ "),	 
	(position_set_x, pos1, 90),
        (position_set_y, pos1, 710),
        (overlay_set_position, "$g_jq_prevtroop", pos1),
	(position_set_x, pos1, 25),
        (position_set_y, pos1, 20),
        (overlay_set_size, "$g_jq_prevtroop", pos1),

	#nextTroop - graphical button
	(assign, "$g_jq_nexttroop", 1),
	(create_game_button_overlay, "$g_jq_nexttroop", "@ ____ "),	 
	(position_set_x, pos1, 350),
        (position_set_y, pos1, 710),
        (overlay_set_position, "$g_jq_nexttroop", pos1),
	(position_set_x, pos1, 25),
        (position_set_y, pos1, 20),
        (overlay_set_size, "$g_jq_nexttroop", pos1),

	#Draw hero character mesh
	(create_mesh_overlay_with_tableau_material, "$jq_portrait", -1, "tableau_game_character_sheet", "$jq_dude"),
	(position_set_x, pos1, 1150),
        (position_set_y, pos1, 1150),
        (overlay_set_size, "$jq_portrait", pos1),
	(position_set_x, pos1, 10),
        (position_set_y, pos1, 295),
	(position_set_z, pos1, 170),
       	(overlay_set_position, "$jq_portrait", pos1),
	
	###HEADLINES###
	(assign, ":x_poshl", 35),
	(assign, ":jq_size", 0),
	(position_set_x, ":jq_size", 1250),
    	(position_set_y, ":jq_size", 1200),

	(str_store_troop_name, s9, "$jq_dude"),
 	(str_store_string, s1, "@{s9}"),
	(create_text_overlay, "$jq_troop_name", s1, tf_center_justify),
        (position_set_x, pos3, 160),
        (position_set_y, pos3, 705),
        (overlay_set_position, "$jq_troop_name", pos3),
	(position_set_x, pos3, 900),
    	(position_set_y, pos3, 1000),
    	(overlay_set_size, "$jq_troop_name", pos3),

		(create_text_overlay, reg2, "@Attributes", tf_left_align),
       		(overlay_set_size, reg2, ":jq_size"),
		(position_set_x, pos1, 78),
          	(position_set_y, pos1, 243),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_color, reg2, 0xFF000033),

		(create_text_overlay, reg2, "@Skills", tf_left_align),
       		(overlay_set_size, reg2, ":jq_size"),
		(position_set_x, pos1, 388),
          	(position_set_y, pos1, 503),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_color, reg2, 0xFF003300),

		(create_text_overlay, reg2, "@Proficiencies", tf_left_align),
       		(overlay_set_size, reg2, ":jq_size"),
		(position_set_x, pos1, 740),
          	(position_set_y, pos1, 403),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_color, reg2, 0xFF330000),

		(position_set_x, ":jq_size", 975),
    		(position_set_y, ":jq_size", 975),
		(position_set_x, pos1, 42),

		(create_text_overlay, reg2, "@STR:", tf_left_align),
		(position_set_y, pos1, 212),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@AGI:", tf_left_align),
          	(position_set_y, pos1, 187),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@INT:", tf_left_align),
          	(position_set_y, pos1, 162),
          	(overlay_set_position, reg2, pos1),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@CHA:", tf_left_align),
          	(position_set_y, pos1, 137),
          	(overlay_set_position, reg2, pos1),
		(position_set_x, ":jq_size", 900),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@Health:", tf_left_align),
          	(position_set_y, pos1, 105),
          	(overlay_set_position, reg2, pos1),
		(position_set_x, ":jq_size", 1250),
		(position_set_y, ":jq_size", 1250),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@Level:", tf_left_align),
          	(position_set_y, pos1, 76),
          	(overlay_set_position, reg2, pos1),
		(position_set_x, ":jq_size", 1250),
		(position_set_y, ":jq_size", 1250),
		(overlay_set_size, reg2, ":jq_size"),

		(create_text_overlay, reg2, "@To next lvl: ", tf_left_align),
          	(position_set_y, pos1, 60),
          	(overlay_set_position, reg2, pos1),
		(position_set_x, ":jq_size", 700),
		(position_set_y, ":jq_size", 800),
		(overlay_set_size, reg2, ":jq_size"),

		#Skills Labels
		(assign, ":x_poshl", 585),
		(assign, ":y_poshl", 374),
		(position_set_x, ":jq_size", 900),
    		(position_set_y, ":jq_size", 1000),

 (create_text_overlay, reg2, "@Ironflesh^Power Strike^Power Throw^Power Draw^Weapon Master^Shield^Athletics^Riding^Horse Archery^Looting^Trainer^Tracking^", tf_left_align),
 (create_text_overlay, reg3, "@Tactics^Path-finding^Spotting^Inventory Management^Wound Treatment^Surgery^First Aid^Engineer^Persuasion^Prisoner Management^Leadership^Trade", tf_left_align),	
		(position_set_x, pos1, 353),
          	(position_set_y, pos1, 284),
          	(overlay_set_position, reg2, pos1),
      		(position_set_y, pos1, 68),
          	(overlay_set_position, reg3, pos1),
		(overlay_set_size, reg2, ":jq_size"),
		(overlay_set_size, reg3, ":jq_size"),

		# Skills Values
		(assign, ":x_poshl", 625),
		(assign, ":y_poshl", 68),
       		(str_clear, s1),
		(create_text_overlay, "$jq_allskills",  "@10", tf_center_justify), 
		(position_set_x, ":jq_size", 850),
    		(position_set_y, ":jq_size", 1000),
		(position_set_x, pos2, ":x_poshl"),
          	(position_set_y, pos2, ":y_poshl"),
 		(overlay_set_position,"$jq_allskills", pos2),	
 		(overlay_set_size,"$jq_allskills", ":jq_size"),

		#Proficiencies Labels
		(create_text_overlay, ":jqreg", "@One Handed Weapons:^^Two Handed Weapons:^^Polearms:^^Archery:^^Crossbows:^^Throwing:^^Slings:", tf_left_align), #chief cambia firearm a slings para hondas	
		(create_text_overlay, "$jq_allprofs", "@350^^350^^350^^350^^350^^350^^350", tf_left_align),	
		(position_set_x, pos1, 707),
          	(position_set_y, pos1, 155),
          	(overlay_set_position, ":jqreg", pos1),
		(position_set_x, pos1, 900),
		(overlay_set_position, "$jq_allprofs", pos1),
		(position_set_x, ":jq_size", 950),
    		(position_set_y, ":jq_size", 1000),
		(overlay_set_size, ":jqreg", ":jq_size"),
		(overlay_set_size, "$jq_allprofs", ":jq_size"),

	## STR, AGI, INT, CHA, LVL ##
	(assign, ":x_poshl", 115),
	(assign, ":y_pos", 500),
	(position_set_x, ":jq_size", 975),
    	(position_set_y, ":jq_size", 975),

	(position_set_x, pos1, ":x_poshl"),
	(position_set_y, pos1, 212),

	(create_text_overlay, "$jqregstr", "@_{reg1}_", tf_center_justify),
        (overlay_set_position, "$jqregstr", pos1),
	(overlay_set_size, "$jqregstr", ":jq_size"),

	(create_text_overlay, "$jqregagi", "@_{reg1}_", tf_center_justify),
        (position_set_y, pos1, 187),
        (overlay_set_position, "$jqregagi", pos1),
	(overlay_set_size, "$jqregagi", ":jq_size"),

	(create_text_overlay, "$jqregint", "@_{reg1}_", tf_center_justify),
        (position_set_y, pos1, 162),
        (overlay_set_position, "$jqregint", pos1),
	(overlay_set_size, "$jqregint", ":jq_size"),

	(create_text_overlay, "$jqregcha", "@_{reg1}_", tf_center_justify),
        (position_set_y, pos1, 137),
        (overlay_set_position, "$jqregcha", pos1),
	(overlay_set_size, "$jqregcha", ":jq_size"),

	(create_text_overlay,  "$jqhealth", "@_100%__", tf_center_justify),
	(position_set_x, pos1, 142),
        (position_set_y, pos1, 105),
        (overlay_set_position,  "$jqhealth", pos1),
	(position_set_x, ":jq_size", 1250),
    	(position_set_y, ":jq_size", 1250),
	(overlay_set_size,  "$jqhealth", ":jq_size"),

	(create_text_overlay,  "$jqreglvl", "@_30_", tf_center_justify),
	(position_set_x, pos1, 122),
        (position_set_y, pos1, 76),
        (overlay_set_position,  "$jqreglvl", pos1),
	(position_set_x, ":jq_size", 1250),
    	(position_set_y, ":jq_size", 1250),
	(overlay_set_size,  "$jqreglvl", ":jq_size"),

	(create_text_overlay,  "$jqtonextlvl", "@_3333333333_", tf_center_justify),
	(position_set_x, pos1, 124),
        (position_set_y, pos1, 60),
        (overlay_set_position,  "$jqtonextlvl", pos1),
	(position_set_x, ":jq_size", 800),
    	(position_set_y, ":jq_size", 800),
	(overlay_set_size,  "$jqtonextlvl", ":jq_size"),



	# Weapons and Armor headlines
	(position_set_x, pos1, 353),
	(position_set_y, pos1, 707),
	(create_text_overlay, "$g_jq_equip_hline1", "@-Weapons-"),
	(overlay_set_position, "$g_jq_equip_hline1", pos1),
	(overlay_set_color, "$g_jq_equip_hline1", 0xFF000066),

	(position_set_y, pos1, 622),
	(create_text_overlay, "$g_jq_equip_hline2", "@-Armor-"),
	(overlay_set_position, "$g_jq_equip_hline2", pos1),
	(overlay_set_color, "$g_jq_equip_hline2", 0xFF000099),

	# items
	(create_text_overlay, "$g_jq_equipment_item0", "@n/a________________________________", tf_left_align), #item 0
	(create_text_overlay, "$g_jq_equipment_item1", "@n/a________________________________", tf_left_align), #item 1
	(create_text_overlay, "$g_jq_equipment_item2", "@n/a________________________________", tf_left_align), #item 2
	(create_text_overlay, "$g_jq_equipment_item3", "@n/a________________________________", tf_left_align), #item 3
	(create_text_overlay, "$g_jq_equipment_item4", "@n/a________________________________", tf_left_align), #head
	(create_text_overlay, "$g_jq_equipment_item5", "@n/a________________________________", tf_left_align), #body
	(create_text_overlay, "$g_jq_equipment_item6", "@n/a________________________________", tf_left_align), #feet
	(create_text_overlay, "$g_jq_equipment_item7", "@n/a________________________________", tf_left_align), #hands

	(position_set_x, pos1, 353),
	(position_set_y, pos1, 690),
	(overlay_set_position, "$g_jq_equipment_item0", pos1),
	(position_set_y, pos1, 673),
	(overlay_set_position, "$g_jq_equipment_item1", pos1),
	(position_set_y, pos1, 656),
	(overlay_set_position, "$g_jq_equipment_item2", pos1),
	(position_set_y, pos1, 639),
	(overlay_set_position, "$g_jq_equipment_item3", pos1),

	(position_set_y, pos1, 605),
	(overlay_set_position, "$g_jq_equipment_item4", pos1),
	(position_set_y, pos1, 588),
	(overlay_set_position, "$g_jq_equipment_item5", pos1),
	(position_set_y, pos1, 571),
	(overlay_set_position, "$g_jq_equipment_item6", pos1),
	(position_set_y, pos1, 554),
	(overlay_set_position, "$g_jq_equipment_item7", pos1),

	(position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
	(overlay_set_size, "$g_jq_equip_hline1", pos1),
	(overlay_set_size, "$g_jq_equip_hline2", pos1),
	(overlay_set_size, "$g_jq_equipment_item0", pos1),
	(overlay_set_size, "$g_jq_equipment_item1", pos1),
	(overlay_set_size, "$g_jq_equipment_item2", pos1),
	(overlay_set_size, "$g_jq_equipment_item3", pos1),
	(overlay_set_size, "$g_jq_equipment_item4", pos1),
	(overlay_set_size, "$g_jq_equipment_item5", pos1),
	(overlay_set_size, "$g_jq_equipment_item6", pos1),
	(overlay_set_size, "$g_jq_equipment_item7", pos1),


# MORALE REPORT ETC ########################
	#  Colorcoded - perhaps later on...
	#  ("happy", "happy about"), # Green 
	#  ("content", "content with"), # Green/Yellow
	#  ("concerned", "concerned about"), # Yellow
	#  ("not_happy", "not at all happy about"), # orange
	#  ("miserable", "downright appalled at"),   #red

	(assign, ":x_poshl", 840),
        (assign, ":y_pos", 690),
	(position_set_x, ":jq_size", 850),
    	(position_set_y, ":jq_size", 875),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
	(str_store_troop_name, s9, "$jq_dude"),

	(create_text_overlay, "$jq_mrlc", "@{s9} feels...", tf_center_justify),
	(overlay_set_size, "$jq_mrlc", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, "$jq_mrlc", pos1),
	(overlay_set_color, "$jq_mrlc", 0xFFFFFFFF),
	(val_sub, ":y_pos", 27),

	(call_script, "script_npc_morale", "$jq_dude"),
	(assign, reg1, reg0),
	(create_text_overlay, "$jq_feeling1", "@{s6}", tf_center_justify),
	(create_text_overlay, ":jqreg2", "@your choice of companions,", tf_center_justify),
	(overlay_set_size, ":jqreg2", ":jq_size"),
	(overlay_set_size, "$jq_feeling1", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, "$jq_feeling1", pos1),
	(val_sub, ":y_pos", 19),
	(position_set_y, pos1, ":y_pos"),
	(overlay_set_position, ":jqreg2", pos1),
	(overlay_set_color,"$jq_feeling1",  0xFFFFFF00),
	(overlay_set_color, ":jqreg2", 0xFFFFFFFF),
	(val_sub, ":y_pos", 19),

	#(str_store_string, 7, "@{s7}"),
	(create_text_overlay, "$jq_feeling2", "@{s7}", tf_center_justify),
	(create_text_overlay,  ":jqreg2", "@your style of leadership and...", tf_center_justify),
	(overlay_set_size, ":jqreg2", ":jq_size"),
	(overlay_set_size, "$jq_feeling2", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
       (overlay_set_position, "$jq_feeling2", pos1),
	(val_sub, ":y_pos", 19),
	(position_set_y, pos1, ":y_pos"),
	(overlay_set_position, ":jqreg2", pos1),
	(overlay_set_color,"$jq_feeling2",  0xFFFFFF00),
	(overlay_set_color, ":jqreg2", 0xFFFFFFFF),
	(val_sub, ":y_pos", 19),
 
	(create_text_overlay, "$jq_feeling3", "@{s8}", tf_center_justify),
	(create_text_overlay, ":jqreg2", "@the general state of affairs.^------------------------------", tf_center_justify),
	(overlay_set_size, ":jqreg2", ":jq_size"),
	(overlay_set_size, "$jq_feeling3", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
      (overlay_set_position, "$jq_feeling3", pos1),
	(val_sub, ":y_pos", 36),
	(position_set_y, pos1, ":y_pos"),
	(overlay_set_position, ":jqreg2", pos1),
	(overlay_set_color,"$jq_feeling3",  0xFFFFFF00),
	(overlay_set_color, ":jqreg2", 0xFFFFFFFF),

	(val_sub, ":y_pos", 51),
 	(create_text_overlay, "$jq_comphome", "@Morale:_______________________^^Origin: _________", tf_center_justify),
	(overlay_set_size, "$jq_comphome", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, "$jq_comphome", pos1),
	(overlay_set_color, "$jq_comphome", 0xFFFFFFFF),

	(val_sub, ":y_pos", 27),
 	(create_text_overlay, "$jq_state", "@State:_______________________", tf_center_justify),
	(overlay_set_size, "$jq_state", ":jq_size"),
	(position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, "$jq_state", pos1),
	(overlay_set_color, "$jq_state", 0xFFFFFFFF),

# MORALE REPORT ETC END ########################

(call_script, "script_jq_browse", "$jq_dude", 150),

        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
 	  (eq, ":object", "$g_jq_Return_to_menu"), 
	(assign, "$jq_just_visited_CO", 0),#do NOT autoreturn to store
	(assign, "$jq_override",0), #use default anim and camera settings in 'module-scripts'
	(presentation_set_duration, 0),
	(else_try),
          (eq, ":object", "$g_presentation_obj_1"),# pressed 'Quick View'
   	  (start_presentation, "prsnt_jq_companions_quickview"),
	(else_try),

	# BROWSE BUTTONS #############
	# Left btn -----------------------------#
	(eq, ":object", "$g_jq_prevtroop"),
	#(is_between, "$jq_slot", 1, "$jq_nr"),
	(val_sub, "$jq_slot", 1),
		(try_begin),
		(lt, "$jq_slot", 0),
		(val_sub, "$jq_nr", 1),
		(assign, "$jq_slot", "$jq_nr"),# Cycle when min reached 
		(val_add, "$jq_nr", 1),
		(try_end),
	(troop_get_slot, "$jq_dude", "trp_temp_array_c", "$jq_slot"),
	(overlay_set_alpha, "$jq_portrait", 0), 
	(create_mesh_overlay_with_tableau_material, "$jq_portrait", -1, "tableau_game_character_sheet", "$jq_dude"),
	(call_script, "script_jq_browse", "$jq_dude", 150),
	(else_try),

	# Right btn ---------------------------#
	(eq, ":object", "$g_jq_nexttroop"),
	#(is_between, "$jq_slot", 0, "$jq_nr"),
	(val_add, "$jq_slot", 1),
		(try_begin),
		(eq, "$jq_slot", "$jq_nr"),
		(assign, "$jq_slot", 0),# Cycle when max reached 
		#(val_sub, "$jq_slot", 1),
		(try_end),
	(troop_get_slot, "$jq_dude", "trp_temp_array_c", "$jq_slot"),
	(overlay_set_alpha, "$jq_portrait", 0), 
	(create_mesh_overlay_with_tableau_material, "$jq_portrait", -1, "tableau_game_character_sheet", "$jq_dude"),
	(call_script, "script_jq_browse", "$jq_dude", 150),
	# BROWSE BUTTONS END ###########

	(else_try),
   		(eq, ":object", "$g_jqhelp"),
		(eq, "$jq_helptoggle", 0),
		(assign, "$jq_helptoggle", 1),
		(overlay_animate_to_alpha, "$g_jqhelptxt", 400, 0xFF),
	 (else_try),
   		(eq, ":object", "$g_jqhelp"),
		(eq, "$jq_helptoggle", 1),
		(assign, "$jq_helptoggle", 0),
		(overlay_animate_to_alpha, "$g_jqhelptxt", 400, 0),	
	(else_try),
   		(eq, ":object", "$g_quitdebug2"),#quit - only for debug		
 		(presentation_set_duration, 0),
  		(jump_to_menu, "mnu_end_game"),

        (else_try),
          (eq, ":object", "$g_jq_Back_to_shop"),
		(assign, "$jq_just_visited_CO", 1),
		(assign, "$jq_override",0), 
		(presentation_set_duration, 0),
        (try_end),
        ]),

	(ti_on_presentation_run,
       [(try_begin),
	  	(key_clicked, key_right_mouse_button),
	  	(eq, "$jq_in_market_menu", 0),
		(assign, "$jq_override",0), 
	  	(presentation_set_duration, 0),
	  	(jump_to_menu, "mnu_reports"),
	(else_try),
	  	(key_clicked, key_right_mouse_button),
	  	(eq, "$jq_in_market_menu", 1),
		(assign, "$jq_override",0), 
  	  	(presentation_set_duration, 0),      
	  	(jump_to_menu,"mnu_town_trade"),
	(else_try),
		(key_clicked, key_back_space),	
      		(eq, "$jq_in_market_menu", 1),
 		(eq, "$jq_current_town", "$current_town"),
		(assign, "$jq_just_visited_CO", 1),
		(assign, "$jq_override",0),
  	  	(presentation_set_duration, 0),      
	  	(jump_to_menu,"mnu_town_trade"),
	(else_try),
		(key_clicked, key_escape),
  		(start_presentation, "prsnt_jq_companions_quickview"),
	(else_try),
		(key_clicked, key_home),
		(assign, "$jq_startpage", 2),	
   		(play_sound, "snd_put_back_sword"),	
 		(display_message,"@Startpage set (Extended View)",0xFFAAFFAA),	
        (try_end),
        ]),

  ]),
##################JEDEDIAH Q COMPANIONS OVERVIEW END########################################################################################
##############################################
#chief creacion pj dunde
    ("player_background", 0, mesh_load_window,
   [(ti_on_presentation_load,
     [(presentation_set_duration, 999999),
      (set_fixed_point_multiplier, 1000),
      # Init Values
      (str_clear, s11),(str_clear, s12),(str_clear, s13),(str_clear, s14),(str_clear, s15),(str_clear, s16),(str_clear, s17),(str_clear, s18),
      (store_mul, reg11, "$character_gender", 100),
      (store_mul, reg12, "$character_nationality", 100),
      (store_mul, reg13, "$background_parent", 100),
      (store_mul, reg14, "$background_childhood", 100),
      (store_mul, reg15, "$background_job", 100),
      (store_mul, reg16, "$background_reason", 100),     
      (store_mul, reg17, "$background_religion", 100),     
      # Create Objects
      (create_text_overlay, "$g_presentation_obj_banner_selection_1", "str_gender", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_2", "str_nationality", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_3", "str_parent", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_4", "str_childhood", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_5", "str_jobs", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_6", "str_reason", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_7", "str_religion", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_8", "str_story", tf_double_space|tf_scrollable),
      (create_text_overlay, "$g_presentation_obj_11", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_12", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_13", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_14", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_15", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_16", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_17", "str_long_string", tf_left_align),
      (create_text_overlay, "$g_presentation_obj_18", "str_background_label_1", tf_center_justify),
      (create_text_overlay, "$g_presentation_obj_19", "str_background_label_2", tf_left_align),
      (create_slider_overlay, "$g_presentation_obj_21",    0, 100), # Gender        : Male/Female #chief anade alturas pr eso 4
      (create_slider_overlay, "$g_presentation_obj_22",  100, 2400), # Nationality   : Swadian, Vaegir, Kherghit, Nord, Rhodhok
      (create_slider_overlay, "$g_presentation_obj_23",  100, 700), # Parent        : Noble, Merchant, Guard, Forester, Nomad, Thief, Priest
      (create_slider_overlay, "$g_presentation_obj_24",  100, 900), # Childhood     : Page, Apprentice, Stockboy, Urchin, Nomad, Mummer, Cortier, Noble, Acolyte
      (create_slider_overlay, "$g_presentation_obj_25",  100, 900), # Job           : bravo, merch, squire/lady, traubador, student, peddler, craftsman, poacher, preacher
      (create_slider_overlay, "$g_presentation_obj_26",  100, 600), # Reason        : revenge, death, wanderlust, disown, greed
      (create_slider_overlay, "$g_presentation_obj_27",  100, 400), # Religion       
      (create_game_button_overlay, "$g_presentation_obj_31", "str_cancel", tf_center_justify),       
      (create_game_button_overlay, "$g_presentation_obj_32", "str_continue", tf_center_justify),
      (create_game_button_overlay, "$g_presentation_obj_33", "str_random", tf_center_justify),       
      # Reposition Objects
      (position_set_y, pos1, 25), (position_set_x, pos3, 120), (position_set_y, pos3, 35),
      (position_set_x, pos1, 750), (overlay_set_position, "$g_presentation_obj_31" , pos1), (overlay_set_size, "$g_presentation_obj_31", pos3),
      (position_set_x, pos1, 900), (overlay_set_position, "$g_presentation_obj_32",  pos1), (overlay_set_size, "$g_presentation_obj_32", pos3),
      (position_set_x, pos1, 600), (overlay_set_position, "$g_presentation_obj_33",  pos1), (overlay_set_size, "$g_presentation_obj_33", pos3),
      (position_set_x, pos1,  500), (position_set_y, pos1, 650), (position_set_x, pos3, 2000), (position_set_y, pos3, 2000),
      (overlay_set_position, "$g_presentation_obj_18", pos1), (overlay_set_size, "$g_presentation_obj_18", pos3),
      (position_set_x, pos1,  50), (position_set_x, pos3, 1000), (position_set_y, pos3, 1000),
      (position_set_y, pos1, 550),        (overlay_set_position, "$g_presentation_obj_1", pos1), (overlay_set_size, "$g_presentation_obj_1", pos3),
      (position_set_y, pos1, 550-1*40),   (overlay_set_position, "$g_presentation_obj_2", pos1), (overlay_set_size, "$g_presentation_obj_2", pos3),       
      (position_set_y, pos1, 550-2*40),   (overlay_set_position, "$g_presentation_obj_3", pos1), (overlay_set_size, "$g_presentation_obj_3", pos3),
      (position_set_y, pos1, 550-3*40),   (overlay_set_position, "$g_presentation_obj_4", pos1), (overlay_set_size, "$g_presentation_obj_4", pos3),
      (position_set_y, pos1, 550-4*40),   (overlay_set_position, "$g_presentation_obj_5", pos1), (overlay_set_size, "$g_presentation_obj_5", pos3),
      (position_set_y, pos1, 550-5*40),   (overlay_set_position, "$g_presentation_obj_6", pos1), (overlay_set_size, "$g_presentation_obj_6", pos3),
      (position_set_y, pos1, 550-6*40),   (overlay_set_position, "$g_presentation_obj_7", pos1), (overlay_set_size, "$g_presentation_obj_7", pos3),
      (position_set_x, pos1,  500), (position_set_y, pos1, 550),
      (overlay_set_position, "$g_presentation_obj_19", pos1), (overlay_set_size, "$g_presentation_obj_19", pos3),
      (position_set_x, pos1, 150), (position_set_x, pos3, 1000), (position_set_y, pos3, 1000),
      (position_set_y, pos1, 550),        (overlay_set_position, "$g_presentation_obj_11", pos1), (overlay_set_size, "$g_presentation_obj_11", pos3),
      (position_set_y, pos1, 550-1*40),   (overlay_set_position, "$g_presentation_obj_12", pos1), (overlay_set_size, "$g_presentation_obj_12", pos3),       
      (position_set_y, pos1, 550-2*40),   (overlay_set_position, "$g_presentation_obj_13", pos1), (overlay_set_size, "$g_presentation_obj_13", pos3),
      (position_set_y, pos1, 550-3*40),   (overlay_set_position, "$g_presentation_obj_14", pos1), (overlay_set_size, "$g_presentation_obj_14", pos3),
      (position_set_y, pos1, 550-4*40),   (overlay_set_position, "$g_presentation_obj_15", pos1), (overlay_set_size, "$g_presentation_obj_15", pos3),
      (position_set_y, pos1, 550-5*40),   (overlay_set_position, "$g_presentation_obj_16", pos1), (overlay_set_size, "$g_presentation_obj_16", pos3),
      (position_set_y, pos1, 550-6*40),   (overlay_set_position, "$g_presentation_obj_17", pos1), (overlay_set_size, "$g_presentation_obj_17", pos3),
      (position_set_x, pos1, 300), (position_set_x, pos3, 1000), (position_set_y, pos3, 200),
      (position_set_y, pos1, 545),        (overlay_set_position, "$g_presentation_obj_21", pos1), (overlay_set_size, "$g_presentation_obj_21", pos3),
      (position_set_y, pos1, 545-1*40), (overlay_set_position, "$g_presentation_obj_22", pos1), (overlay_set_size, "$g_presentation_obj_22", pos3),       
      (position_set_y, pos1, 545-2*40), (overlay_set_position, "$g_presentation_obj_23", pos1), (overlay_set_size, "$g_presentation_obj_23", pos3),
      (position_set_y, pos1, 545-3*40), (overlay_set_position, "$g_presentation_obj_24", pos1), (overlay_set_size, "$g_presentation_obj_24", pos3),
      (position_set_y, pos1, 545-4*40), (overlay_set_position, "$g_presentation_obj_25", pos1), (overlay_set_size, "$g_presentation_obj_25", pos3),
      (position_set_y, pos1, 545-5*40), (overlay_set_position, "$g_presentation_obj_26", pos1), (overlay_set_size, "$g_presentation_obj_26", pos3),
      (position_set_y, pos1, 545-6*40), (overlay_set_position, "$g_presentation_obj_27", pos1), (overlay_set_size, "$g_presentation_obj_27", pos3),
      (position_set_x, pos1, 500), (position_set_y, pos1, 120),
      (overlay_set_position,  "$g_presentation_obj_8", pos1),
      (position_set_x, pos1, 450), (position_set_y, pos1, 425),
      (overlay_set_area_size, "$g_presentation_obj_8", pos1),
      (position_set_x, pos1, 800), (position_set_y, pos1, 800),
      (overlay_set_size,      "$g_presentation_obj_8", pos1),
      # Initial States
      (overlay_set_val, "$g_presentation_obj_21", reg11),
      (overlay_set_val, "$g_presentation_obj_22", reg12),
      (overlay_set_val, "$g_presentation_obj_23", reg13),
      (overlay_set_val, "$g_presentation_obj_24", reg14),
      (overlay_set_val, "$g_presentation_obj_25", reg15),
      (overlay_set_val, "$g_presentation_obj_26", reg16),
      (overlay_set_val, "$g_presentation_obj_27", reg17),
      (call_script, "script_update_strings"), ]),
    (ti_on_presentation_event_state_change,
     [(store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":value"),       
      (set_fixed_point_multiplier, 1000),
      (assign, ":story_changed", 0),
      (try_begin),
         (eq, ":object", "$g_presentation_obj_21"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg11, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_21", reg11),
         (assign, ":story_changed", 1),
      (else_try),       
         (eq, ":object", "$g_presentation_obj_22"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg12, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_22", reg12),
         (assign, ":story_changed", 1),
      (else_try),       
         (eq, ":object", "$g_presentation_obj_23"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg13, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_23", reg13),
         (assign, ":story_changed", 1),
      (else_try),       
         (eq, ":object", "$g_presentation_obj_24"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg14, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_24", reg14),
         (assign, ":story_changed", 1),
      (else_try),       
         (eq, ":object", "$g_presentation_obj_25"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg15, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_25", reg15),
         (assign, ":story_changed", 1),
      (else_try),       
         (eq, ":object", "$g_presentation_obj_26"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg16, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_26", reg16),
         (assign, ":story_changed", 1),       
      (else_try),
         (eq, ":object", "$g_presentation_obj_27"),
         (store_mod, ":state", ":value", 100), (store_div, ":new_value", ":value", 100),
         (val_mul, ":new_value", 100),
         (try_begin),
            (ge, ":state", 50),
            (val_add, ":new_value", 100),
         (try_end),
         (assign, reg17, ":new_value"),
         (overlay_set_val, "$g_presentation_obj_27", reg17),
         (assign, ":story_changed", 1),       
      (else_try),
         (eq, ":object", "$g_presentation_obj_31"),
         (assign, "$creation_canceled", 999),
         (jump_to_menu, "mnu_start_game_1"),
         (presentation_set_duration, 0),
      (else_try),
         (eq, ":object", "$g_presentation_obj_32"),
         (assign, "$creation_canceled", 0),
         (call_script, "script_init_char_stat"),
         (try_begin),
            (eq, "$background_parent", 1),
            (start_presentation, "prsnt_banner_selection"),
         (else_try),
            (jump_to_menu, "mnu_auto_return"),
            (presentation_set_duration, 0),
         (try_end),     
      (else_try),
         (eq, ":object", "$g_presentation_obj_33"),
         (call_script, "script_randomize_background", 1),
         (assign, ":story_changed", 1),
      (try_end),
      (try_begin),
         (eq, ":story_changed", 1),
         (store_div, "$character_gender", reg11, 100),
         (store_div, "$character_nationality", reg12, 100),
         (store_div, "$background_parent", reg13, 100),
         (store_div, "$background_childhood", reg14, 100),
         (store_div, "$background_job", reg15, 100),
         (store_div, "$background_reason", reg16, 100),
         (store_div, "$background_religion", reg17, 100),
         (call_script, "script_update_strings"),
      (try_end), ]), ]),
#chief creacion pj acaba
  #chief presentacion relacion facciones
    # Jrider +
  # Jrider +
  # REPORTS PRESENTATIONS 1.1 :
  # Factions relations presentation report
  ("jrider_faction_relations_report", 0,
   mesh_message_window,
   [
     (ti_on_presentation_load,
      [
    (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        # Embed picture upper right
        (create_mesh_overlay, reg1, "mesh_pic_castledes"),
        (position_set_x, pos1, 180),
        (position_set_y, pos1, 180),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 795),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        # Embed picture upper left
        (create_mesh_overlay, reg1, "mesh_pic_looted_village"),
        (position_set_x, pos1, 170),
        (position_set_y, pos1, 170),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, -15),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

    # Presentation title, centered at the top
        (create_text_overlay, reg1, "@_Faction Relations Report_", tf_center_justify),
    (position_set_x, pos1, 500), # Higher, means more toward the right
        (position_set_y, pos1, 670), # Higher, means more toward the top
        (overlay_set_position, reg1, pos1),
    (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
    (overlay_set_size, reg1, pos1),

    # Back to menu - graphical button
    (create_game_button_overlay, reg1, "@_Return to menu_"),
    (position_set_x, pos1, 500),
        (position_set_y, pos1, 23),
        (overlay_set_position, reg1, pos1),
        (assign, "$g_jrider_faction_report_Return_to_menu", reg1),

    # Set Headlines
    (assign, ":x_poshl", 215),
     (assign, ":y_pos", 597),
     (assign, ":headline_size", 0),
    (position_set_x, ":headline_size", 720),
        (position_set_y, ":headline_size", 775),
       
        (assign, ":hl_columnsep_size", 50),
    (position_set_x, ":hl_columnsep_size", 60),
        (position_set_y, ":hl_columnsep_size", 1600),

        (create_text_overlay, reg2, "@Player^Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (position_set_x, pos1, ":x_poshl"),
        (position_set_y, pos1, ":y_pos"),
        (overlay_set_position, reg2, pos1),

        # Headlines for Faction 1, 5
        (create_text_overlay, reg2, "@Status", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 55),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # create a separator column
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (overlay_set_color, reg1, 0x000000),
        (overlay_set_size, reg1, ":hl_columnsep_size"),
        (store_sub, ":line_x", ":x_poshl", 21), # set it 21 pix left of current column start
        (position_set_x, pos2, ":line_x"),
        (position_set_y, pos2, ":y_pos"),
        (overlay_set_position, reg1, pos2),

        (create_text_overlay, reg2, "@Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 110),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # Headlines for Faction 2, 6
        (create_text_overlay, reg2, "@Status", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 55),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # create a separator column
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (overlay_set_color, reg1, 0x000000),
        (overlay_set_size, reg1, ":hl_columnsep_size"),
        (store_sub, ":line_x", ":x_poshl", 21), # set it 21 pix left of current column start
        (position_set_x, pos2, ":line_x"),
        (position_set_y, pos2, ":y_pos"),
        (overlay_set_position, reg1, pos2),

        (create_text_overlay, reg2, "@Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 110),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # Headlines Faction 3,7
        (create_text_overlay, reg2, "@Status", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 55),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # create a separator column
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (overlay_set_color, reg1, 0x000000),
        (overlay_set_size, reg1, ":hl_columnsep_size"),
        (store_sub, ":line_x", ":x_poshl", 21), # set it 21 pix left of current column start
        (position_set_x, pos2, ":line_x"),
        (position_set_y, pos2, ":y_pos"),
        (overlay_set_position, reg1, pos2),

        (create_text_overlay, reg2, "@Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 110),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # Headlines Faction 4
        (create_text_overlay, reg2, "@Status", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 55),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # create a separator column
        (create_mesh_overlay, reg1, "mesh_white_plane"),
        (overlay_set_color, reg1, 0x000000),
        (overlay_set_size, reg1, ":hl_columnsep_size"),
        (store_sub, ":line_x", ":x_poshl", 21), # set it 21 pix left of current column start
        (position_set_x, pos2, ":line_x"),
        (position_set_y, pos2, ":y_pos"),
        (overlay_set_position, reg1, pos2),

        (create_text_overlay, reg2, "@Relation", tf_center_justify),
        (overlay_set_size, reg2, ":headline_size"),
        (val_add, ":x_poshl", 110),
        (position_set_x, pos1, ":x_poshl"),
        (overlay_set_position, reg2, pos1),

        # clear the string globals that we'll use
         (str_clear, s9),
    (str_clear, s8),
    (str_clear, s3),
    (str_clear, s60),
    (str_clear, s61),
    (str_clear, s0),

        # Scrollable area (all the next overlay will be contained in this, s0 sets the scrollbar)
        (create_text_overlay, reg1, s0, tf_scrollable_style_2),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 70),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 860),
        (position_set_y, pos1, 527),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),

        # set base position and size for lines
        (assign, ":line_size", 0),
        (assign, ":y_pos", 0),

        # set base color for line
    (assign, ":line_color", 0x000000),

        # Line faction loop begins here - fetching corresponding informations and printing the line title
        (try_for_range_backwards, ":faction_line", kingdoms_begin, kingdoms_end),
            (faction_slot_eq, ":faction_line", slot_faction_state, sfs_active), # continue if active

            # Base position for subheaders
            (assign, ":x_posfhl", 220),
            (assign, ":y_posfhl", ":y_pos"),

            # Loop other factions (columns)
            (try_for_range_backwards, ":faction_column", kingdoms_begin, kingdoms_end),
                (neq, ":faction_column", ":faction_line"),
                (faction_slot_eq, ":faction_column", slot_faction_state, sfs_active), # continue if active

                (str_store_faction_name, s8, ":faction_column"),

                # wrap y_pos if line end reached
                (try_begin),
                    (ge, ":x_poshl", 825),
                    (assign, ":x_poshl", 165),
                    (val_add, ":y_pos", 18),
                (try_end),

                # sub-faction excluding current faction line
                (try_begin),
                    # different from faction line, display status and relation with faction line
                    (neq, ":faction_column", ":faction_line"),
                    (call_script, "script_diplomacy_faction_get_diplomatic_status_with_faction", ":faction_line", ":faction_column"),
                    (assign, ":global_diplomatic_status", reg0),
                    (assign, ":extended_diplomatic_status", reg1),

                    (try_begin), # War
                        (eq, ":global_diplomatic_status", -2),
                        (str_store_string, s60, "@War"),
                        (assign, reg60, 0xDD0000),
                        (assign, reg59, 0),
                    (else_try), # Border incident
                        (eq, ":global_diplomatic_status", -1),
                        (str_store_string, s60, "@Casus Belli"),
                        (assign, reg60, 0xDD8000),
                        (assign, reg59, ":extended_diplomatic_status"),
                    (else_try), # Peace
                        (eq, ":global_diplomatic_status", 0),
                        (str_store_string, s60, "@Peace"),
                        (assign, reg60, 0xFFFFFF),
                        (assign, reg59, 0),
                    (else_try), # Truce (or agreement if usigng Diplomacy)
                        (eq, ":global_diplomatic_status", 1),
                        (str_store_string, s60, "@Truce"),
                        (assign, reg60, 0xDDDDDD),
                        (assign, reg59, ":extended_diplomatic_status"),

                        # for Diplomacy, comment if not using
                        (try_begin),
                            (ge, ":extended_diplomatic_status", 61),
                            (str_store_string, s60, "@Alliance"),
                            (assign, reg60, 0x00FF00),
                            (store_sub, reg59, ":extended_diplomatic_status", 60),
                        (else_try),
                            (ge, ":extended_diplomatic_status", 41),
                            (str_store_string, s60, "@Defense Pact"),
                            (assign, reg60, 0x00FFAA),
                            (store_sub, reg59, ":extended_diplomatic_status", 40),
                        (else_try),
                            (ge, ":extended_diplomatic_status", 21),
                            (str_store_string, s60, "@Trade Agreement"),
                            (assign, reg60, 0x00FFCC),
                            (store_sub, reg59, ":extended_diplomatic_status", 20),
                        (try_end),
                    (try_end),

                    (val_add, ":x_poshl", 55),

                     # create a sub-separator column
                     (create_mesh_overlay, reg1, "mesh_white_plane"),
                     (overlay_set_color, reg1, ":line_color"),
                     (position_set_x, pos3, 50),
                     (position_set_y, pos3, 1800),
                     (overlay_set_size, reg1, pos3),
       
                     (store_sub, ":line_x", ":x_posfhl", 20), # set it 20 pix left of current column start
                     (position_set_x, pos3, ":line_x"),
                     (store_add, ":line_y", ":y_pos", 2), # set it below 2 pix of current position

                     (position_set_y, pos3, ":line_y"),
                     (overlay_set_position, reg1, pos3),

                    # diplomatic status and duration block (set at current line)
                    # add diplomatic status
                    (store_relation, ":kingdom_relation", ":faction_line", ":faction_column"),
                    (create_text_overlay, reg10, "@{s60}", tf_left_align|tf_with_outline),
                    (overlay_set_size, reg10, ":line_size"),
                    (overlay_set_color, reg10, reg60),

                    (store_sub, ":line_x", ":x_poshl", 15),
                    (position_set_x, pos1, ":line_x"),
                    (position_set_y, pos1, ":y_pos"),
                    (overlay_set_position, reg10, pos1),

                    # status duration left (same line, shift x to right)
                    (val_add, ":x_poshl", 110),
                    (create_text_overlay, reg10, "@{reg59?{reg59} days:}", tf_center_justify),
                    (overlay_set_size, reg10, ":line_size"),

                    (store_add, ":line_x", ":x_poshl", 5),
                    (position_set_x, pos1, ":line_x"),
                    (position_set_y, pos1, ":y_pos"),
                    (overlay_set_position, reg10, pos1),

                    # Faction name and relation (increase to previous line)
                    # Faction name headlines
                    (create_text_overlay, reg10, s8, tf_left_align|tf_with_outline),
                    (overlay_set_size, reg10, ":line_size"),
                    (faction_get_color, ":faction_color", ":faction_column"),
                    (overlay_set_color, reg10, ":faction_color"),

                    (store_sub, ":line_x", ":x_posfhl", 20),
                    (store_add, ":line_y", ":y_pos", 18),
                    (position_set_x, pos3, ":line_x"),
                    (position_set_y, pos3, ":line_y"),
                    (overlay_set_position, reg10, pos3),

                    # kingdom relation (same line as faction name)
                    (assign, reg61, ":kingdom_relation"),
                    (create_text_overlay, reg10, "@{reg61}", tf_center_justify),
                    (overlay_set_size, reg10, ":line_size"),

                    (store_add, ":line_x", ":x_poshl", 10),
                    (position_set_x, pos3, ":line_x"),
                    (position_set_y, pos3, ":line_y"),
                    (overlay_set_position, reg10, pos3),
                (try_end), # end select alternate display

                # increase column x position
                (val_add, ":x_posfhl", 165), # valid values 220, 385, 550, 715

                # wrap if line end for faction column name reached
                (try_begin),
                    (gt, ":x_posfhl", 715),
                    (assign, ":x_posfhl", 220),
                    (assign, ":y_posfhl", ":y_pos"),
                    (val_add, ":y_posfhl", 18),
                (try_end),       

                # starting new column
                (try_begin),
                    (eq, ":x_posfhl", 220),

                    # create a sub-separator line above current line
                    (create_mesh_overlay, reg1, "mesh_white_plane"),
                    (overlay_set_color, reg1, ":line_color"),
                    (position_set_x, pos1, 32800),
                    (position_set_y, pos1, 50),
                    (overlay_set_size, reg1, pos1),
       
                    (position_set_x, pos1, 200),
                    (store_add, ":line_y", ":y_pos", 38), # set it 20 pix above current line
                    (position_set_y, pos1, ":line_y"),
                    (overlay_set_position, reg1, pos1),

                    (val_add, ":y_pos", 18),
                (try_end),
            (try_end), # end of column faction loop

            # Faction line information, this is a 4 line block
            # reset x postion for next beginning column and decrease y position according to line count
            (assign, ":x_poshl", 165),

            (val_add, ":y_pos", 18), # linebreak

            # create a separator for faction line
            (create_mesh_overlay, reg1, "mesh_white_plane"),
            (overlay_set_color, reg1, 0x000000),
            (position_set_x, pos1, 42000),
            (position_set_y, pos1, 60),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 17),
            (store_add, ":line_y", ":y_pos", 20), # set it 20 pix above current line
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg1, pos1),

            # Set line title
            (str_store_faction_name, s9, ":faction_line"),
            (str_store_string, s1, "@{s9}"),
            (create_text_overlay, reg10, s1, tf_left_align|tf_with_outline),
            (faction_get_color, ":faction_color", ":faction_line"),
            (overlay_set_color, reg10, ":faction_color"),

            (position_set_x, pos3, 750),
            (position_set_y, pos3, 850),
            (overlay_set_size, reg10, pos3),

            (position_set_x, pos3, 10),
            (position_set_y, pos3, ":y_pos"),
            (overlay_set_position, reg10, pos3),

            # set position for columns
            (assign, ":x_poshl", 165),
            (assign, ":line_size", 0),
            (position_set_x, ":line_size", 700),
            (position_set_y, ":line_size", 800),

            ## Player relation (first column)
            (store_relation, reg1, "fac_player_supporters_faction", ":faction_line"),

            # no clean strings existing, doing it the same way it's done in game_menu
            (try_begin),
                (ge, reg1, 90),
                (str_store_string, s3, "@Loyal"),
            (else_try),
                (ge, reg1, 80),
                (str_store_string, s3, "@Devoted"),
            (else_try),
                (ge, reg1, 70),
                (str_store_string, s3, "@Fond"),
            (else_try),
                (ge, reg1, 60),
                (str_store_string, s3, "@Gracious"),
            (else_try),
                (ge, reg1, 50),
                (str_store_string, s3, "@Friendly"),
            (else_try),
                (ge, reg1, 40),
                (str_store_string, s3, "@Supportive"),
            (else_try),
                (ge, reg1, 30),
                (str_store_string, s3, "@Favorable"),
            (else_try),
                (ge, reg1, 20),
                (str_store_string, s3, "@Cooperative"),
            (else_try),
                (ge, reg1, 10),
                (str_store_string, s3, "@Accepting"),
            (else_try),
                (ge, reg1, 0),
                (str_store_string, s3, "@Indifferent"),
            (else_try),
                (ge, reg1, -10),
                (str_store_string, s3, "@Suspicious"),
            (else_try),
                (ge, reg1, -20),
                (str_store_string, s3, "@Grumbling"),
            (else_try),
                (ge, reg1, -30),
                (str_store_string, s3, "@Hostile"),
            (else_try),
                (ge, reg1, -40),
                (str_store_string, s3, "@Resentful"),
            (else_try),
                (ge, reg1, -50),
                (str_store_string, s3, "@Angry"),
            (else_try),
                (ge, reg1, -60),
                (str_store_string, s3, "@Hateful"),
            (else_try),
                (ge, reg1, -70),
                (str_store_string, s3, "@Revengeful"),
            (else_try),
                (str_store_string, s3, "@Vengeful"),
            (try_end),

            # Set relation to player numerical value (same line)
            (create_text_overlay, reg10, "@{reg1}", tf_right_align),
            (overlay_set_size, reg10, ":line_size"),
            (store_add, ":line_x", ":x_poshl", 20),
            (position_set_x, pos1, ":line_x"),
            (position_set_y, pos1, ":y_pos"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, ":line_color"),

            # Set relation to player string value (second line)
            (create_text_overlay, reg10, "@{s3}", tf_right_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, ":line_x"),
            (store_sub, ":line_y", ":y_pos", 20),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, ":line_color"),

##            # Set Faction Coat of Arm for standard faction (left of relation string)
##            (try_begin),
##                (neq, ":faction_line", "fac_player_supporters_faction"),
##                (store_sub, ":mesh_index", ":faction_line", kingdoms_begin),
##                (val_add, ":mesh_index", "mesh_pic_recruits"),
##                (create_mesh_overlay, reg10, ":mesh_index"),
##                (position_set_x, pos1, 75),
##                (position_set_y, pos1, 75),
##                (overlay_set_size, reg10, pos1),
##                (position_set_x, pos1, 165),
##                (store_sub, ":line_y", ":y_pos", 37),
##                (position_set_y, pos1, ":line_y"),
##                (overlay_set_position, reg10, pos1),
##            (try_end),

            # for current line_faction count lords and centers
            (assign, ":num_lords", 0),
            (assign, ":num_caravans", 0),
            (assign, ":num_centers", 0),
            (assign, ":unassigned_centers", 0),
            (try_for_parties, ":cur_party"),
                (store_faction_of_party, ":cur_faction", ":cur_party"),
                (eq, ":cur_faction", ":faction_line"),

                (try_begin),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_hero_party),
                    (val_add, ":num_lords", 1),
                (else_try),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_kingdom_caravan),
                    (val_add, ":num_caravans", 1),
                (else_try),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_town),
                    (this_or_next|party_slot_eq, ":cur_party", slot_party_type, spt_castle),
                    (party_slot_eq, ":cur_party", slot_party_type, spt_village),
                    (val_add, ":num_centers", 1),

                    (try_begin),
                        (party_slot_eq, ":cur_party", slot_town_lord, stl_unassigned),
                        (val_add, ":unassigned_centers", 1),
                    (try_end),
                (try_end),
            (try_end), # end of parties loop

            # Count prisoners
            (assign, ":prisoners", 0),
            (try_for_range, ":lord_id", active_npcs_begin, active_npcs_end),
                (troop_slot_eq, ":lord_id", slot_troop_occupation, slto_kingdom_hero),
                (troop_slot_ge, ":lord_id", slot_troop_prisoner_of_party, 0),
                (store_troop_faction, ":lord_faction", ":lord_id"),
                (eq, ":lord_faction", ":faction_line"),
                (val_add, ":prisoners", 1),
            (try_end),

            # add count to last line for faction line report (second, third and fourth line)
            (assign, reg61, ":num_centers"),
            (assign, reg58, ":unassigned_centers"),
            (create_text_overlay, reg10, "@{reg61} {reg58?({reg58} U) :}Centers", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (store_sub, ":line_y", ":y_pos", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            (assign, reg62, ":num_caravans"),
            (create_text_overlay, reg10, "@{reg62} Caravans", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (val_sub, ":line_y", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            (assign, reg60, ":num_lords"),
            (assign, reg59, ":prisoners"),
            (create_text_overlay, reg10, "@{reg60} {reg59?({reg59} P) :}Lords", tf_left_align),
            (overlay_set_size, reg10, ":line_size"),
            (position_set_x, pos1, 15),
            (val_sub, ":line_y", 17),
            (position_set_y, pos1, ":line_y"),
            (overlay_set_position, reg10, pos1),
            (overlay_set_color, reg10, 0x000000),

            # increase line for next faction block
            (val_add, ":y_pos", 18),#linebreak

        (try_end), # end of faction loop
        (set_container_overlay, -1),
   ]),
   ## END on load trigger

   ## Check for buttonpress
   (ti_on_presentation_event_state_change,
    [
        (store_trigger_param_1, ":button_pressed_id"),
        (try_begin),
             (eq, ":button_pressed_id", "$g_jrider_faction_report_Return_to_menu"), # pressed  (Return to menu)
        (presentation_set_duration, 0),
    (try_end),
    ]),
   ## END presentation event state change trigger

   ## Event to process when running the presentation
   (ti_on_presentation_run,
    [
        (try_begin),
      (this_or_next|key_clicked, key_escape),
      (key_clicked, key_right_mouse_button),
      (presentation_set_duration, 0),
      (jump_to_menu, "mnu_reports"),
        (try_end),

        ]),
   ]),
  # END presentation run trigger
  # END Faction relation presentation
  # Jrider -
# Jrider +
  ##############################################################################
  ## Character relations report
  ("jrider_character_relation_report", 0,
   mesh_message_window,
   [
     ## Load Presentation
     (ti_on_presentation_load,
      [
    (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (str_clear, s0),
        (str_clear, s1),

        #############################
        # Character presentation type variations and init
        (try_begin),
            ###############################
            ## Courtship Relations presentation
            (eq, "$g_character_presentation_type", 0),

            # Set presentation title string
            (str_store_string, s0, "@_Courtships in progress_"),

            # Set size of listbox
            (assign, ":base_scroll_y", 160),
            (assign, ":base_scroll_size_y", 480),
            (assign, ":base_candidates_y", 440), # scrollable area size minus (one line size + 2) 430

            # Set storage index
            (assign, "$g_base_character_presentation_storage_index", 1000),

            # presentation specific extra overlays
            (call_script, "script_generate_knonwn_poems_string"),

            # Extra text area for knowns poems (filling once so we use a register), filled from s1 generated in script call
            (create_text_overlay, reg1, s1, tf_left_align),
            (overlay_set_color, reg1, 0xFF66CC),
            (position_set_x, pos1, 750),
            (position_set_y, pos1, 850),
            (overlay_set_size, reg1, pos1),
            (position_set_x, pos1, 590),
            (position_set_y, pos1, 55),
            (overlay_set_position, reg1, pos1),
        (else_try),
            ###############################
            ## Lord Relations presentation
            (eq, "$g_character_presentation_type", 1),

            # Set presentation title string
            (str_store_string, s0, "@_Known Lords by Relation_"),

            # Set size of listbox
            (assign, ":base_scroll_y", 110),
            (assign, ":base_scroll_size_y", 550),
            (assign, ":base_candidates_y", 540), # scrollable area size minus (one line size + 2) 530

            # Set storage index
            (assign, "$g_base_character_presentation_storage_index", 2000),
        (else_try),
            ###############################
            ## Lord Relations presentation
            (eq, "$g_character_presentation_type", 2),

            # Set presentation title string
            (str_store_string, s0, "@_Character & Companions_"),

            # Set size of listbox
            (assign, ":base_scroll_y", 110),
            (assign, ":base_scroll_size_y", 550),
            (assign, ":base_candidates_y", 540), # scrollable area size minus (one line size + 2) 530

            # Set storage index
            (assign, "$g_base_character_presentation_storage_index", 3000),
        (try_end),

        ###############################
        # Create common overlays
        # set foreground mesh overlay (has some transparency in it, so can't use it directly)
        (create_mesh_overlay, reg1, "mesh_face_gen_window"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
    (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
    (overlay_set_size, reg1, pos1),

    # Presentation title overlay, centered at the top of right pane (from s0, presentation type specific)
        (create_text_overlay, reg1, s0, tf_center_justify),
        (overlay_set_color, reg1, 0xDDDDDD),
    (position_set_x, pos1, 740), # Higher, means more toward the right
        (position_set_y, pos1, 680), # Higher, means more toward the top
        (overlay_set_position, reg1, pos1),
    (position_set_x, pos1, 1200),
        (position_set_y, pos1, 1200),
    (overlay_set_size, reg1, pos1),

    # Done button
        (create_game_button_overlay, "$g_jrider_character_report_Return_to_menu", "@_Done_"),
    (position_set_x, pos1, 290),
        (position_set_y, pos1, 10),
        (overlay_set_position, "$g_jrider_character_report_Return_to_menu", pos1),

        # Character Information text to fill when an entry is clicked in the list
        (create_text_overlay, "$g_jrider_character_information_text", "str_space", tf_left_align),
        (overlay_set_color, "$g_jrider_character_information_text", 0xFFFFFF),
        (position_set_x, pos1, 55), # Higher, means more toward the right
        (position_set_y, pos1, 60), # Higher, means more toward the top
        (overlay_set_position, "$g_jrider_character_information_text", pos1),
        (position_set_x, pos1, 700), # smaller means smaller font
        (position_set_y, pos1, 800),
        (overlay_set_size, "$g_jrider_character_information_text", pos1),

        # Character selection listbox overlay
        # use scrollable text area with global reference so objects can be put inside using overlay_set_container
        (create_text_overlay, "$g_jrider_character_relation_listbox", "str_empty_string", tf_scrollable_style_2),
        (position_set_x, pos1, 590),
        (position_set_y, pos1, ":base_scroll_y"),
        (overlay_set_position, "$g_jrider_character_relation_listbox", pos1),
        (position_set_x, pos1, 335),
        (position_set_y, pos1, ":base_scroll_size_y"),
        (overlay_set_area_size, "$g_jrider_character_relation_listbox", pos1),

        # Faction filter
        (create_combo_button_overlay, "$g_jrider_character_faction_filter", "str_empty_string",0),
        (position_set_x, pos1, 507),
        (position_set_y, pos1, 709),
        (overlay_set_position, "$g_jrider_character_faction_filter", pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 650),
        (overlay_set_size, "$g_jrider_character_faction_filter", pos1),

        # add elements to filter button
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Your supporters"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Centware"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Suth Seaxna"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@East Seaxna"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@East Englas"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Gewissae"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Hwicce"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@All Cultures"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Dumnonia"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Mierce"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Ynys Manaw"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Pengwern"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Goutodin"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Bernaccia"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Lindisware"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Reghed"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Crafu"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Connaught"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Alt Clut"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Dal Riata"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Cait"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Ceredigion"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Powys"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Gwynedd"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Dyfed"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Brycheiniog"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Gwent"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Laigin"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Desmumu"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Ulaid"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Ui Neill"),
        (overlay_add_item, "$g_jrider_character_faction_filter", "@Airgialla"),
#        (overlay_add_item, "$g_jrider_character_faction_filter", "@All Cultures"),
#        (overlay_add_item, "$g_jrider_character_faction_filter", "@Free"),

        # set up selected entry
        (try_begin),
            (this_or_next|eq, "$g_jrider_pres_called_from_menu", 1),
            (eq, "$g_jrider_faction_filter", -1),
       
            (assign, "$g_jrider_faction_filter", -1),
            (overlay_set_val, "$g_jrider_character_faction_filter", 7),
        (else_try),
            (overlay_set_val, "$g_jrider_character_faction_filter", "$g_jrider_faction_filter"), 
        (try_end),

        ###############################
        # Populate lists
        # Init presentation common global variables
        (assign, "$num_charinfo_candidates", 0),

        # Fill listbox (overlay_add_item and extra storage)
        (call_script, "script_fill_relation_canditate_list_for_presentation", "$g_character_presentation_type", ":base_candidates_y"),

        # stop if there's no candidate
        (gt, "$num_charinfo_candidates", 0),

        # get extra information from storage
        (store_add, ":current_storage_index", "$g_base_character_presentation_storage_index", "$g_latest_character_relation_entry"),
        (troop_get_slot, "$character_info_id", "trp_temp_array_c", ":current_storage_index"),

        # Fill text information for current entry and update text information overlay
        (call_script, "script_generate_extended_troop_relation_information_string", "$character_info_id"),
        (overlay_set_text, "$g_jrider_character_information_text", s1),

        # color selected entry
        (overlay_set_color, "$g_jrider_last_checked_indicator", 0xFF6666FF),
        (overlay_set_alpha, "$g_jrider_last_checked_indicator", 0x44),

        #################################
        # Overlay that depend on value and need a presentation restart to update
        # mesh Overlay for character portrait (global not needed)
        (create_image_button_overlay_with_tableau_material, "$g_jrider_character_portrait", -1, "tableau_troop_note_mesh", "$character_info_id"),
        (position_set_x, pos2, 100), #70
        (position_set_y, pos2, 280), # 680
        (overlay_set_position, "$g_jrider_character_portrait", pos2),
        (position_set_x, pos2, 1150),
        (position_set_y, pos2, 1150),
        (overlay_set_size, "$g_jrider_character_portrait", pos2),

##        # mesh Overlay for faction coat of arms
##        (try_begin),
##            (store_troop_faction, ":troop_faction", "$character_info_id"),
##            (neq, ":troop_faction", "fac_player_supporters_faction"),
##            (is_between, ":troop_faction", kingdoms_begin, kingdoms_end),
##            (store_sub, ":faction_mesh_index", ":troop_faction", kingdoms_begin),
##            (val_add, ":faction_mesh_index", "mesh_pic_recruits"),
##       
##            (create_mesh_overlay, "$g_jrider_faction_coat_of_arms", ":faction_mesh_index"),
##            (position_set_x, pos3, 150),
##            (position_set_y, pos3, 600),
##            (overlay_set_position, "$g_jrider_faction_coat_of_arms", pos3),
##            (position_set_x, pos3, 250),
##            (position_set_y, pos3, 250),
##            (overlay_set_size, "$g_jrider_faction_coat_of_arms", pos3),
##        (try_end),

        ###############################
        # Post load, if anything should be done after setting all the rest if should be here.
        # nothing but the clearing of the call from menu flag used in the scripts right now
        # do an update if called from menu and reset init variable
        (try_begin),
            (eq, "$g_jrider_pres_called_from_menu", 1),
            (assign, "$g_jrider_pres_called_from_menu", 0),
        (try_end),
     ]),

     ## Check for buttonpress
    (ti_on_presentation_event_state_change,
     [
        (store_trigger_param_1, ":object"), # object
        (store_trigger_param_2, ":value"),  # value

        (try_begin),
            # pressed  (Return to menu)
            (eq, ":object", "$g_jrider_character_report_Return_to_menu"),

            (try_begin),
                (neq, "$num_charinfo_candidates", 0),
                (overlay_set_text, "$g_jrider_character_information_text", "str_empty_string"),
                (overlay_set_alpha, "$g_jrider_last_checked_indicator", 0),
            (try_end),
            (presentation_set_duration, 0),
        (else_try),
            # Faction filter
            (eq, ":object", "$g_jrider_character_faction_filter"),
            (try_begin),
                (eq, ":value", 7),
                (assign, "$g_jrider_faction_filter", -1),
            (else_try),
                (assign, "$g_jrider_faction_filter", ":value"),
            (try_end),

            # reset selected to first
            (assign, "$g_jrider_reset_selected_on_faction", 1),

            # restart presentation to take filters into account
            (start_presentation, "prsnt_jrider_character_relation_report"),
        (else_try),
            (neq, ":object", "$g_jrider_character_information_text"),
            (neq, ":object", "$g_jrider_character_portrait"),
            (neq, ":object", "$g_jrider_character_relation_listbox"),
#            (neq, ":object", "$g_jrider_faction_coat_of_arms"),
            # clicked on list entry
            # get storage index + base storage index
            (store_add, ":storage_button_id", ":object", "$g_base_character_presentation_storage_index"),
            (troop_get_slot, ":character_number", "trp_temp_array_b", ":storage_button_id"),

            (overlay_set_alpha, "$g_jrider_last_checked_indicator", 0),
            (overlay_set_color, "$g_jrider_last_checked_indicator", 0xDDDDDD),

            # update last entry and check variables
            (assign, "$g_latest_character_relation_entry", ":character_number"),
            (assign, "$g_jrider_last_checked_indicator", ":object"),

            # color selected entry
            (overlay_set_color, "$g_jrider_last_checked_indicator", 0xFF6666FF),
            (overlay_set_alpha, "$g_jrider_last_checked_indicator", 0x44),

            # get troop information from storage to update text
            (val_add, ":character_number", "$g_base_character_presentation_storage_index"),
            (troop_get_slot, "$character_info_id", "trp_temp_array_c", ":character_number"),

            # restart presentation to update picture and text
            (start_presentation, "prsnt_jrider_character_relation_report"),
    (try_end),
     ]),

    ## Event to process when running the presentation
    (ti_on_presentation_run,
     [
        (try_begin),
      (this_or_next|key_clicked, key_escape),
      (key_clicked, key_right_mouse_button),
      (presentation_set_duration, 0),
      (jump_to_menu, "mnu_reports"),
        (try_end),

        ]),
     ]),
    ###################################
    # Character relation presentation end
# Jrider -
#caba'drin orders motomataru presentation chief
  ("order_display", prsntf_read_only,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),

      (try_for_range, ":i", 0, 9),
           (store_add, ":slot", ":i", slot_party_cabadrin_order_d0),
           (party_set_slot, "p_main_party_backup", ":slot", -1),
       (try_end),

		#Add "F9 - Close menu" to the options?	
		(assign, ":y_position", 564),
       (try_begin), #Figure out which orders to display, set strings
           (eq, "$gk_order", 0),
           (str_store_string, s1, "@F4 - Formation types"),
           (str_store_string, s2, "@F5 - Weapon orders"),
           (str_store_string, s3, "@F6 - Skirmish orders"),

           (assign, ":num_orders", 3),
           (assign, ":y_position", 474),

	    (else_try),
			(eq, "$gk_order", gk_order_2),
			(str_store_string, s1, "@F7 - Memorize Div. Placement"),
			(str_store_string, s2, "@F8 - Default Division Placement"),
			
            (assign, ":num_orders", 2),
			(assign, ":y_position", 384),

		(else_try),
           (eq, "$gk_order", gk_order_4),
           (str_store_string, s1, "@F4 - Ranks"),
           (str_store_string, s2, "@F5 - Shieldwall"),
           (str_store_string, s3, "@F6 - Wedge"),
           (str_store_string, s4, "@F7 - Square"),
           (str_store_string, s5, "@F8 - No Formation"),

           (assign, ":num_orders", 5),
       (else_try),
           (eq, "$gk_order", gk_order_5),
           (str_store_string, s1, "@F5 - One Handers"),
           (str_store_string, s2, "@F6 - Two Hands & Pole"),
           (str_store_string, s3, "@F7 - Ranged"),
           (str_store_string, s4, "@F8 - Shields"),

           (assign, ":num_orders", 4),
       (else_try),
           (eq, "$gk_order", gk_order_6),
           (str_store_string, s1, "@F5 - Skirmish"),
           (str_store_string, s2, "@F6 - Melee"),

           (assign, ":num_orders", 2),
       (try_end),
	   (assign, "$menu_by_gk_order", "$gk_order"),
	   # (party_set_slot, "p_main_party_backup", slot_party_gk_order, "$gk_order"),

       (try_for_range, ":i", 0, ":num_orders"),
           (try_begin),
               (eq, ":i", 0),
               (str_store_string_reg, s0, s1),
           (else_try),
               (eq, ":i", 1),
               (str_store_string_reg, s0, s2),
           (else_try),
               (eq, ":i", 2),
               (str_store_string_reg, s0, s3),
           (else_try),
               (eq, ":i", 3),
               (str_store_string_reg, s0, s4),
           (else_try),
               (eq, ":i", 4),
               (str_store_string_reg, s0, s5),
           (try_end),
           (create_text_overlay, ":overlay", s0),
           (overlay_set_color, ":overlay", 0xFFFFFF),
           (position_set_x, pos1, 1000),
           (position_set_y, pos1, 1000),
           (overlay_set_size, ":overlay", pos1),
           (position_set_x, pos1, 0),
           (position_set_y, pos1, ":y_position"),
           (overlay_set_position, ":overlay", pos1),

           (store_add, ":slot", ":i", slot_party_cabadrin_order_d0),
           (party_set_slot, "p_main_party_backup", ":slot", ":overlay"),

           (val_sub, ":y_position", 30),
       (try_end),
       (store_mul, ":add_back", 30, ":num_orders"),
       (val_add, ":y_position", ":add_back"),
       (val_sub, ":y_position", 4),
       (try_for_range, ":i", 0, ":num_orders"),
           (create_mesh_overlay, ":overlay", "mesh_order_frame"),
           (position_set_x, pos1, 700),
           (position_set_y, pos1, 700),
           (overlay_set_size, ":overlay", pos1),

           (position_set_x, pos1, 0),
           (position_set_y, pos1, ":y_position"),
           (overlay_set_position, ":overlay", pos1),

           (val_sub, ":y_position", 30),
       (try_end),

       (try_begin),
           (neq, "$gk_order", 0),
           (neq, "$gk_order", gk_order_2),
           (create_mesh_overlay, ":overlay", "mesh_white_plane"),
           (overlay_set_color, ":overlay", 0),
           (overlay_set_alpha, ":overlay", 0x10),
           (position_set_x, pos1, 14000),
           (position_set_y, pos1, 4500),
           (overlay_set_size, ":overlay", pos1),

           (position_set_x, pos1, 0),
           (position_set_y, pos1, 498),
           (overlay_set_position, ":overlay", pos1),
       (try_end),

       (presentation_set_duration, 999999),
      ]),
   (ti_on_presentation_run,
      [(store_trigger_param_1, ":cur_time"),
       (gt, ":cur_time", 250), #0.25 Second after Pres. Start
       (try_begin),
         (this_or_next|game_key_clicked, gk_order_1),
         (this_or_next|game_key_clicked, gk_order_2),
         (this_or_next|game_key_clicked, gk_order_3), #Order Keys not used by Expanded Orders
         (this_or_next|game_key_clicked, gk_view_orders),
         (this_or_next|game_key_clicked, gk_group0_hear),
         (this_or_next|game_key_clicked, gk_group1_hear),
         (this_or_next|game_key_clicked, gk_group2_hear),
         (this_or_next|game_key_clicked, gk_group3_hear),
         (this_or_next|game_key_clicked, gk_group4_hear),
         (this_or_next|game_key_clicked, gk_group5_hear),
         (this_or_next|game_key_clicked, gk_group6_hear),
         (this_or_next|game_key_clicked, gk_group7_hear),
         (this_or_next|game_key_clicked, gk_group8_hear),
         (this_or_next|game_key_clicked, gk_everyone_hear),
         (this_or_next|game_key_clicked, gk_reverse_order_group),
         (game_key_clicked, gk_everyone_around_hear),
         (presentation_set_duration, 0),
       (try_end),
       (try_begin),
           (assign, ":key", -1),
           (try_begin),
               (game_key_clicked, gk_order_4),
               (assign, ":key", 4),
           (else_try),
                (game_key_clicked, gk_order_5),
               (assign, ":key", 5),
           (else_try),
                 (game_key_clicked, gk_order_6),
               (assign, ":key", 6),
           (else_try),
               (key_clicked, key_f7),
               (assign, ":key", 7),
           (else_try),
               (key_clicked, key_f8),
               (assign, ":key", 8),
           (try_end),
           (neq, ":key", -1),
           (try_begin),
			   (eq, "$menu_by_gk_order", 0),
			   # (party_slot_eq, "p_main_party_backup", slot_party_gk_order, 0),
               (presentation_set_duration, 0),
           (else_try),
			   (eq, "$menu_by_gk_order", gk_order_4),
			   # (party_slot_eq, "p_main_party_backup", slot_party_gk_order, gk_order_4),
               (assign, ":min_key", 4),
               (assign, ":max_key", 8),

               (store_sub, ":num_orders", ":max_key", ":min_key"),
               (val_add, ":num_orders", 1),
               (store_sub, ":key_pressed", ":key", ":min_key"),
               (is_between, ":key_pressed", 0, ":num_orders"),
               (try_for_range, ":i", 0, ":num_orders"),
                   (store_add, ":slot", ":i", slot_party_cabadrin_order_d0),
                   (party_get_slot, ":overlay", "p_main_party_backup", ":slot"),
                   (try_begin),
                       (neq, ":i", ":key_pressed"),
                       (overlay_animate_to_alpha, ":overlay", 400, 0x00),
                       (val_add, ":overlay", ":num_orders"),
                       (overlay_animate_to_alpha, ":overlay", 400, 0x00),
                   (else_try),
                       (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
                       (val_add, ":overlay", ":num_orders"),
                       (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
                   (try_end),
               (try_end),
               (presentation_set_duration, 200),
           (try_end),
       (try_end),
       ]),
   ]),

#Formation mod option menu as generated by xgm by Sphere, adapted
("formation_mod_option", 0, mesh_load_window, [
	(ti_on_presentation_load, [
		(presentation_set_duration, 999999),
		(set_fixed_point_multiplier, 1000),

		(str_clear, s0),
		(assign, "$g_presentation_obj_1", 0), # forced initialization
		(create_text_overlay, "$g_presentation_obj_1", s0, tf_scrollable),
		(position_set_x, pos1, xgm_mod_options_pane_posx),
		(position_set_y, pos1, xgm_mod_options_pane_posy),
		(overlay_set_position, "$g_presentation_obj_1", pos1),
		(position_set_x, pos1, xgm_mod_options_pane_width),
		(position_set_y, pos1, xgm_mod_options_pane_height),
		(overlay_set_area_size, "$g_presentation_obj_1", pos1),
		(set_container_overlay, "$g_presentation_obj_1"),

		(position_set_x, pos1, xgm_mod_options_property_posx),
		(store_sub, ":cur_posy", xgm_mod_options_pane_height, xgm_mod_options_property_height/2),
		
		#Disable formations option
		(position_set_x, pos1, xgm_mod_options_property_label_posx),
		(create_text_overlay, reg0, "@Disable mod formations:", tf_vertical_align_center),
		(position_set_y, pos1, ":cur_posy"),
		(overlay_set_position, reg0, pos1),

		(assign, "$g_presentation_obj_2", 0), # forced initialization
		(position_set_x, pos1, xgm_mod_options_property_value_posx + xgm_ov_checkbox_offsetx),
		(create_check_box_overlay, "$g_presentation_obj_2", "mesh_checkbox_off", "mesh_checkbox_on"),
		(store_add, reg1, ":cur_posy", xgm_ov_checkbox_offsety),
		(position_set_y, pos1, reg1),
		(overlay_set_position, "$g_presentation_obj_2", pos1),
		
		(assign, reg1, "$formation_off"),		
		(overlay_set_val, "$g_presentation_obj_2", reg1),
		(position_set_x, pos1, xgm_ov_checkbox_scalex),
		(position_set_y, pos1, xgm_ov_checkbox_scaley),
		(overlay_set_size, "$g_presentation_obj_2", pos1),
		
		(val_sub, ":cur_posy", xgm_mod_options_property_height),
		
		#Player division assignment
		(position_set_x, pos1, xgm_mod_options_property_label_posx),
		(create_text_overlay, reg0, "@Put player in division:", tf_vertical_align_center),
		(position_set_y, pos1, ":cur_posy"),
		(overlay_set_position, reg0, pos1),

		(assign, "$g_presentation_obj_3", 0), # forced initialization
		(position_set_x, pos1, xgm_mod_options_property_value_posx + xgm_ov_numberbox_offsetx),
		(create_number_box_overlay, "$g_presentation_obj_3", 0, 10),
		(store_add, ":control_y", ":cur_posy", xgm_ov_numberbox_offsety),
		(position_set_y, pos1, ":control_y"),
		(overlay_set_position, "$g_presentation_obj_3", pos1),
		(position_set_x, pos1, xgm_ov_numberbox_scalex),
		(position_set_y, pos1, xgm_ov_numberbox_scaley),
		(overlay_set_size, "$g_presentation_obj_3", pos1),
		
		(assign, reg1, "$formation_player_in_division"),
		(overlay_set_val, "$g_presentation_obj_3", reg1),
		
		(val_sub, ":cur_posy", xgm_mod_options_property_height),
		
		#Autorotate formations option
		(position_set_x, pos1, xgm_mod_options_property_label_posx),
		(create_text_overlay, reg0, "@Formations rotate to face enemy center:", tf_vertical_align_center),
		(position_set_y, pos1, ":cur_posy"),
		(overlay_set_position, reg0, pos1),

		(assign, "$g_presentation_obj_4", 0), # forced initialization
		(position_set_x, pos1, xgm_mod_options_property_value_posx + xgm_ov_checkbox_offsetx),
		(create_check_box_overlay, "$g_presentation_obj_4", "mesh_checkbox_off", "mesh_checkbox_on"),
		(store_add, reg1, ":cur_posy", xgm_ov_checkbox_offsety),
		(position_set_y, pos1, reg1),
		(overlay_set_position, "$g_presentation_obj_4", pos1),
		
		(assign, reg1, "$formation_autorotate"),
		(overlay_set_val, "$g_presentation_obj_4", reg1),
		(position_set_x, pos1, xgm_ov_checkbox_scalex),
		(position_set_y, pos1, xgm_ov_checkbox_scaley),
		(overlay_set_size, "$g_presentation_obj_4", pos1),
		
		(val_sub, ":cur_posy", xgm_mod_options_property_height),
		
        #Drop nearest agent loop option (stops stuttering for      larger than normal battles)
              (position_set_x, pos1, xgm_mod_options_property_label_posx),
              (create_text_overlay, reg0, "@Make large battles smoother, AI dumber:", tf_vertical_align_center),
              (position_set_y, pos1, ":cur_posy"),
              (overlay_set_position, reg0, pos1),

              (assign, "$g_presentation_obj_6", 0), # forced      initialization
              (position_set_x, pos1, xgm_mod_options_property_value_posx + xgm_ov_checkbox_offsetx),
              (create_check_box_overlay, "$g_presentation_obj_6", "mesh_checkbox_off", "mesh_checkbox_on"),
              (store_add, reg1, ":cur_posy", xgm_ov_checkbox_offsety),
              (position_set_y, pos1, reg1),
              (overlay_set_position, "$g_presentation_obj_6", pos1),
              
              (assign, reg1, "$formation_no_nearest_agent"),
              (overlay_set_val, "$g_presentation_obj_6", reg1),
              (position_set_x, pos1, xgm_ov_checkbox_scalex),
              (position_set_y, pos1, xgm_ov_checkbox_scaley),
              (overlay_set_size, "$g_presentation_obj_6", pos1),
              
              (val_sub, ":cur_posy", xgm_mod_options_property_height),

        #Prevent AI from taking defensive
              (position_set_x, pos1, xgm_mod_options_property_label_posx),
              (create_text_overlay, reg0, "@Prevent AI from taking defensive:", tf_vertical_align_center),
              (position_set_y, pos1, ":cur_posy"),
              (overlay_set_position, reg0, pos1),
              
              (assign, "$g_presentation_obj_7", 0), # forced      initialization
              (position_set_x, pos1, xgm_mod_options_property_value_posx + xgm_ov_checkbox_offsetx),
              (create_check_box_overlay, "$g_presentation_obj_7", "mesh_checkbox_off", "mesh_checkbox_on"),
              (store_add, reg1, ":cur_posy", xgm_ov_checkbox_offsety),
              (position_set_y, pos1, reg1),
              (overlay_set_position, "$g_presentation_obj_7", pos1),
              
              (assign, reg1, "$formation_AI_no_defense"),
              (overlay_set_val, "$g_presentation_obj_7", reg1),
              (position_set_x, pos1, xgm_ov_checkbox_scalex),
              (position_set_y, pos1, xgm_ov_checkbox_scaley),
              (overlay_set_size, "$g_presentation_obj_7", pos1),
              
              (val_sub, ":cur_posy", xgm_mod_options_property_height),
              
              # Finish with options

                (set_container_overlay, -1),

        # This is for Done button
        (assign, "$g_presentation_obj_5", 0), # forced initialization
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
		]),
	   
	(ti_on_presentation_event_state_change, [
		(store_trigger_param_1, ":object"),
		(store_trigger_param_2, ":value"),

		(try_begin),                
			(eq, ":object", "$g_presentation_obj_2"),
			(assign, "$formation_off", ":value"),
		(else_try),                
			(eq, ":object", "$g_presentation_obj_3"),
			(assign, "$formation_player_in_division", ":value"),
		(else_try),                
			(eq, ":object", "$g_presentation_obj_4"),
			(assign, "$formation_autorotate", ":value"),
                (else_try),                
                  (eq, ":object", "$g_presentation_obj_6"),
                  (assign, "$formation_no_nearest_agent", ":value"),
                (else_try),                
                  (eq, ":object", "$g_presentation_obj_7"),
                  (assign, "$formation_AI_no_defense", ":value"),
		(else_try),
			(eq, ":object", "$g_presentation_obj_5"),
			(presentation_set_duration, 0),
                (try_end),
		]),
	]),
#orders caba'drin motomataru presentation acaba chief
  #caba'drin custom player name
    ("set_party_name",0,mesh_load_window,[
     (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "@What will your party be known as?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),       
        (str_store_party_name, s7, "p_main_party"),
        (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
       
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@By the name entered above."),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
         
        (str_store_troop_name, s5, "trp_player"),
        (create_button_overlay, reg1, "@Simply by my name: {s5}."),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 275),
        (overlay_set_position, reg1, pos1), 
         
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (str_store_string, s7, s0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          (party_set_name, "p_main_party", s7),
          (party_set_slot, 0, 1, 1),
          (presentation_set_duration, 0),
        (else_try),
          (store_add, ":overlay", "$g_presentation_obj_name_kingdom_2", 1),
          (eq, ":overlay", ":object"),
          (party_set_name, "p_main_party", s5),
          (party_set_slot, 0, 1, 0),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),   
#caba'drin acaba nombre custom chief
  #fort lair custom player name
    ("set_party_name2",0,mesh_load_window,[
     (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "@What will your fort be known as?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_simple_text_box_overlay, "$g_presentation_obj_name_kingdom_1"),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_1", pos1),       
        (str_store_party_name, s7, "p_fort"),
        (overlay_set_text, "$g_presentation_obj_name_kingdom_1", s7),
       
        (create_button_overlay, "$g_presentation_obj_name_kingdom_2", "@By the name entered above."),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_name_kingdom_2", pos1),
         
        (str_store_party_name, s5, "p_fort"),
        (create_button_overlay, reg1, "@Simply by: {s5}."),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 275),
        (overlay_set_position, reg1, pos1), 
         
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_name_kingdom_1"),
          (str_store_string, s7, s0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_name_kingdom_2"),
          (party_set_name, "p_fort", s7),
          (party_set_slot, 0, 1, 1),
          (presentation_set_duration, 0),
        (else_try),
          (store_add, ":overlay", "$g_presentation_obj_name_kingdom_2", 1),
          (eq, ":overlay", ":object"),
          (party_set_name, "p_fort", s5),
          (party_set_slot, 0, 1, 0),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),   
#fort lair acaba nombre custom chief
#chief presentations acaba
#TEMPERED chief scene picker siege camps, castles, towns                                                                                                                                                                                                          ############ skirmisher slider##################

   ("scene_picker",0,mesh_load_window,[
      (ti_on_presentation_load,
       [	(presentation_set_duration,99999),
			(set_fixed_point_multiplier, 1000),
			(assign,"$g_presentation_obj_15_val","p_town_1"),
			(str_store_party_name,s2,"$g_presentation_obj_15_val"),
#hero slider        
			(create_slider_overlay, "$g_presentation_obj_15", "p_town_1", "p_castle_75"),               
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 500),
			(overlay_set_position, "$g_presentation_obj_15", pos1),
			(overlay_set_val, "$g_presentation_obj_15",  "$g_presentation_obj_15_val"),

			(create_text_overlay, "$g_presentation_obj_17","@ {s2} siege camp.",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 600),
			(overlay_set_position, "$g_presentation_obj_17", pos1),
			(position_set_x, pos2,1000),
			(position_set_y, pos2,1000),
			(overlay_set_size,"$g_presentation_obj_17",pos2),

			#CONTINUE BUTTON
			(create_game_button_overlay,"$g_presentation_obj_19","@_Continue_",tf_center_justify),
			(position_set_x, pos1, 500),
			(position_set_y, pos1, 30),
			(overlay_set_position, "$g_presentation_obj_19", pos1),			

		]),
		
      (ti_on_presentation_event_state_change,
       [	(store_trigger_param_1, ":object"),
			(store_trigger_param_2, ":value"),
			(try_begin),
				(eq,"$g_presentation_obj_19",":object"),
				(assign,"$temp_presentation_shown",1),				
				(presentation_set_duration,0),
			(else_try),
				(eq,":object","$g_presentation_obj_15"),
				(assign,"$g_presentation_obj_15_val",":value"),
				(str_store_party_name, s2,":value"),
				(overlay_set_text,"$g_presentation_obj_17", "@ {s2} siege camp.",tf_center_justify),
			(try_end),
        ]),		
	]),
#Presentacion de historia chief para intro
    ("brytenwalda_story",prsntf_read_only,mesh_load_window,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (key_clicked, key_right_mouse_button),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_bry_1"),
          (create_text_overlay, "$g_presentation_credits_obj_1", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_1", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 7000),
          (lt, "$g_presentation_credits_obj_2", 0),
          (str_store_string, s1, "str_bry_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 27000),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 29500),
          (lt, "$g_presentation_credits_obj_3", 0),
          (str_store_string, s1, "str_bry_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 50000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 51500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_bry_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
#                                                            ##############  PICTURE  #############		
		(create_mesh_overlay,"$g_presentation_obj_13","mesh_pic_extra_combate"),
        (else_try),
          (gt, ":cur_time", 63500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 65000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_bry_5"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 85000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 87000),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_bry_6"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 107500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 109000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_bry_7"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 129000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 131500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_bry_8"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 150500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 152000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_bry_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_bry_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 670),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_bry_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 305),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 190000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 191500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_bry_9"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1050),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -1100),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 240500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
      ]),
 ###fatigue fatiga bar chief

   ("staminabar", prsntf_read_only, 0, [
           (ti_on_presentation_load, [  
        (set_fixed_point_multiplier, 1000),
        (create_mesh_overlay, "$stamina_bar", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$stamina_bar", 0x0000bb),

        (get_player_agent_no,":player_agent"),
        (agent_is_active, ":player_agent"),
        (agent_is_alive,":player_agent"), #  test for alive players.
       (agent_is_human, ":player_agent"),
        (agent_get_slot, ":basic_stamina", ":player_agent", slot_agent_fatiga),
        (val_mul,":basic_stamina",52),
        (position_set_x,pos1,":basic_stamina"),
        (position_set_y,pos1,360),
        (overlay_set_size, "$stamina_bar", pos1),
        (position_set_x,pos1,869),
        (position_set_y,pos1,58),
        (overlay_set_position, "$stamina_bar", pos1),

      (presentation_set_duration, 999999),
      ]),
  
    (ti_on_presentation_run, [
      (set_fixed_point_multiplier, 1000),

    (get_player_agent_no, ":player_agent"),    
        (agent_is_active, ":player_agent"),
        (agent_is_alive,":player_agent"), #  test for alive players.
       (agent_is_human, ":player_agent"),
        (agent_get_slot, ":basic_stamina", ":player_agent", slot_agent_fatiga),
        (try_begin),
        (gt, ":basic_stamina", 1),
        (val_mul,":basic_stamina",52),
        (else_try),
        (assign, ":basic_stamina", 1),
        (val_mul,":basic_stamina",52),
        (try_end),
        (position_set_x,pos1,":basic_stamina"),
        (position_set_y,pos1,360),
        (overlay_set_size, "$stamina_bar", pos1),
      ]),
    ]),
   ("staminabar_multi", prsntf_read_only, 0, [
           (ti_on_presentation_load, [  
        (set_fixed_point_multiplier, 1000),
        (create_mesh_overlay, "$stamina_bar", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$stamina_bar", 0x0000bb),
       
	  (multiplayer_get_my_player, ":my_player"),
		(player_get_agent_id, ":agent", ":my_player"),
		(agent_is_active, ":agent"),
##	  (player_get_agent_id, ":my_agent", ":my_player"),
##      (try_for_agents, ":agent"),
	    (agent_is_human, ":agent"),
		(agent_is_alive, ":agent"),
##	    (eq, ":agent", ":my_agent"),
                    #(get_player_agent_no, ":player_agent"),
                (agent_get_slot, ":basic_stamina", ":agent", slot_agent_fatiga),
                (val_mul,":basic_stamina",52),
                (position_set_x,pos1,":basic_stamina"),
                (position_set_y,pos1,360),
                (overlay_set_size, "$stamina_bar", pos1),
                (position_set_x,pos1,869),
                (position_set_y,pos1,58),
                (overlay_set_position, "$stamina_bar", pos1),
	  #(try_end),
              (presentation_set_duration, 999999),
              ]),
          
            (ti_on_presentation_run, [
              (set_fixed_point_multiplier, 1000),

	  (multiplayer_get_my_player, ":my_player"),
		(player_get_agent_id, ":agent", ":my_player"),
		(agent_is_active, ":agent"),
#	  (player_get_agent_id, ":my_agent", ":my_player"),
#      (try_for_agents, ":agent"),
	    (agent_is_human, ":agent"),
		(agent_is_alive, ":agent"),
	#    (eq, ":agent", ":my_agent"),
                (agent_get_slot, ":basic_stamina", ":agent", slot_agent_fatiga),
                (try_begin),
        (gt, ":basic_stamina", 1),
        (val_mul,":basic_stamina",52),
        (else_try),
        (assign, ":basic_stamina", 1),
        (val_mul,":basic_stamina",52),
        (try_end),
        (position_set_x,pos1,":basic_stamina"),
        (position_set_y,pos1,360),
        (overlay_set_size, "$stamina_bar", pos1),
	  #(try_end),
      ]),
    ]),
#stamina bar acaba chief
  #nuevo chat (i) y ver los nombres con tecla alt Highlander  chief
    ("multiplayer_name_projection_display", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, 
    [
      (set_fixed_point_multiplier, 1000),
	  (multiplayer_get_my_player, ":my_player"),
	  (player_get_agent_id, ":my_agent", ":my_player"),
	  (mission_cam_get_position, pos3),
      (try_for_agents, ":agent"),
	    (agent_is_human, ":agent"),
		(agent_is_alive, ":agent"),
	    (neq, ":agent", ":my_agent"),
		(agent_get_position, pos1, ":agent"),
		(get_distance_between_positions, ":dist", pos1, pos3),
		(le, ":dist", 4000),
		(position_move_z, pos1, 230),
		(agent_get_horse, ":horse", ":agent"),
		(try_begin),
		  (ge, ":horse", 0),
		  (position_move_z, pos1, 80),
		(try_end),
		(copy_position, pos4, pos1),
		(position_move_z, pos4, 200),
        (position_get_screen_projection, pos2, pos1),
        (position_get_screen_projection, pos5, pos4),
        (position_get_x, ":x_pos", pos2),
        (position_get_y, ":y_pos", pos2),
        (position_get_y, ":y_pos4", pos5),
        (is_between, ":x_pos", -100, 1100),
        (is_between, ":y_pos", -100, 850),
		(try_begin),
		  (agent_is_non_player, ":agent"),
		  (agent_get_troop_id, ":troop", ":agent"),
		  (str_store_troop_name, s1, ":troop"),
		(else_try),
		  (agent_get_player_id, ":player", ":agent"),
		  (str_store_player_username, s1, ":player"),
		(try_end),
		(store_sub, ":height", ":y_pos4", ":y_pos"),
		(val_mul, ":height", 6),
	    (create_text_overlay, reg1, "@{s1}"),
		(store_div, ":x_offset", ":height", -100),
		(position_move_x, pos2, ":x_offset"),
		(overlay_set_position, reg1, pos2),
	    (overlay_set_color, reg1, 0xFFFFFF),
		(position_set_y, pos1, ":height"),
		(position_set_x, pos1, ":height"),
		(overlay_set_size, reg1, pos1),
	  (try_end),
      (presentation_set_duration, 9999),
      ]),
    (ti_on_presentation_run,
     [(store_trigger_param_1, ":cur_time"),
      (try_begin),
        (gt, ":cur_time", 20),
        (presentation_set_duration, 0),
		(key_is_down, key_left_alt),
        (start_presentation, "prsnt_multiplayer_name_projection_display"),
        (else_try),
        (start_presentation, "prsnt_staminabar_multi"), #chief anade
      (try_end),
      ]),
    ]),
#acaba Highlander 

  ######################grueso final chief acaba
  ] + coop_presentations #COOP
